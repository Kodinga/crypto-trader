{"version":3,"sources":["core/transport/types/ConnectionStatus.ts","core/transport/actions.ts","modules/redux/utils.ts","modules/reference-data/actions.ts","core/transport/middleware.ts","core/transport/WsConnectionProxy.ts","core/transport/Connection.ts","modules/reference-data/selectors.ts","modules/selection/actions.ts","modules/reference-data/utils.ts","modules/ticker/actions.ts","modules/candles/actions.ts","modules/app/actions.ts","modules/trades/actions.ts","modules/app/epics.ts","core/transport/epics.ts","modules/book/actions.ts","core/transport/selectors.ts","modules/trades/epics.ts","modules/reference-data/epics.ts","modules/ticker/epics.ts","modules/candles/epics.ts","modules/ping/actions.ts","modules/selection/selectors.ts","modules/selection/epics.ts","modules/book/epics.ts","modules/ping/epics.ts","core/transport/utils.ts","modules/trades/reducer.ts","core/transport/reducer.ts","modules/reference-data/reducer.ts","modules/ticker/reducer.ts","modules/candles/utils.ts","modules/candles/reducer.ts","modules/selection/reducer.ts","modules/book/reducer.ts","modules/ping/reducer.ts","modules/root.ts","modules/redux/store.ts","core/hooks/useThrottle.ts","modules/ag-grid/formatter.ts","theme/style.ts","core/components/Loading/Loading.styled.ts","core/components/Loading/index.ts","core/components/Loading/Loading.tsx","modules/trades/components/Trades/Trades.styled.ts","core/components/Stale/Stale.styled.ts","core/components/Stale/index.ts","core/components/Stale/Stale.tsx","modules/trades/components/Trades/Trades.tsx","modules/trades/selectors.ts","modules/trades/components/Trades/index.ts","modules/trades/components/Trades/Trades.container.tsx","modules/candles/selectors.ts","modules/ticker/selectors.ts","core/utils.ts","core/hooks/usePrevious.ts","modules/ticker/components/Ticker/Ticker.styled.ts","modules/ticker/components/Tickers/Tickers.styled.ts","core/components/UpdateHighlight/UpdateHightlight.styled.ts","core/components/UpdateHighlight/UpdateHighlight.tsx","core/components/TrendIndicator/TrendIndicator.styled.ts","core/components/TrendIndicator/index.ts","core/components/TrendIndicator/TrendIndicator.tsx","modules/ticker/components/Ticker/Ticker.tsx","modules/ticker/components/Ticker/index.ts","modules/ticker/components/Ticker/Ticker.container.tsx","modules/ticker/components/Tickers/Tickers.tsx","modules/ticker/components/Tickers/index.ts","modules/ticker/components/Tickers/Tickers.container.tsx","modules/candles/components/CandlesChart/CandlesChart.styled.ts","theme/Highstock.ts","modules/candles/components/CandlesChart/CandlesChart.tsx","modules/candles/components/CandlesChart/index.ts","modules/candles/components/CandlesChart/CandlesChart.container.tsx","modules/book/components/Book/renderers.ts","modules/book/components/Book/Book.styled.ts","modules/book/components/Book/Book.tsx","modules/book/selectors.ts","modules/book/components/Book/index.ts","modules/book/components/Book/Book.container.tsx","modules/book/components/DepthChart/DepthChart.styled.ts","theme/Highchart.ts","modules/book/components/DepthChart/DepthChart.tsx","modules/book/components/DepthChart/index.ts","modules/book/components/DepthChart/DepthChart.container.tsx","modules/ticker/components/Market/Market.styled.ts","core/components/LineChart/LineChart.styled.ts","core/components/LineChart/index.ts","core/components/LineChart/LineChart.tsx","modules/ticker/components/Market/PriceChartRenderer.styled.ts","modules/ticker/components/Market/PriceChartRenderer.tsx","core/components/UpdateHighlight/index.ts","modules/ticker/components/Market/PriceRenderer.tsx","modules/ticker/components/Market/Market.tsx","modules/ticker/components/Market/index.ts","modules/ticker/components/Market/Market.container.tsx","core/components/Widget/Widget.styled.ts","core/components/Widget/index.ts","core/components/Widget/Widget.tsx","core/components/Diagnostics/Diagnostics.styled.ts","core/components/Diagnostics/index.ts","core/components/Diagnostics/Diagnostics.tsx","modules/ping/selectors.ts","modules/ping/components/Latency/Latency.styled.ts","modules/ping/components/Latency/Latency.tsx","modules/ping/components/Latency/index.ts","modules/ping/components/Latency/Latency.container.tsx","core/components/AnimatedCube/AnimatedCube.styled.ts","core/components/AnimatedCube/index.ts","core/components/AnimatedCube/AnimatedCube.tsx","modules/common/CurrencyPairTransition/CurrencyPairTransition.tsx","modules/common/CurrencyPairTransition/index.ts","modules/common/CurrencyPairTransition/CurrencyPairTransition.container.tsx","App.styled.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ConnectionStatus","TRANSPORT_ACTION_TYPES","createAction","type","payload","meta","createReducer","handlers","initialState","state","action","hasOwnProperty","REF_DATA_ACTION_TYPES","TransportActions","sendMessage","SEND_MESSAGE","receiveMessage","RECEIVE_MESSAGE","changeConnectionStatus","CHANGE_CONNECTION_STATUS","subscribeToChannel","SUBSCRIBE_TO_CHANNEL","subscribeToChannelAck","SUBSCRIBE_TO_CHANNEL_ACK","subscribeToChannelNack","SUBSCRIBE_TO_CHANNEL_NACK","unsubscribeFromChannel","UNSUBSCRIBE_FROM_CHANNEL","unsubscribeFromChannelAck","UNSUBSCRIBE_FROM_CHANNEL_ACK","unsubscribeFromChannelNack","UNSUBSCRIBE_FROM_CHANNEL_NACK","staleSubscription","STALE_SUBSCRIPTION","createWsMiddleware","connection","store","next","onReceive","data","parsedData","JSON","parse","undefined","channelId","Array","isArray","chanId","getState","subscriptions","WsConnectionProxy","realm","socket","onConnectFn","onReceivedFn","onErrorFn","onCloseFn","this","WebSocket","onopen","onmessage","onerror","error","onclose","Error","message","readyState","OPEN","console","warn","send","callback","Connection","connectionProxy","start","stop","onConnect","onReceived","onError","onClose","getCurrencyPairs","createSelector","refData","currencyPairs","SELECTION_ACTION_TYPES","RefDataActions","loadRefData","LOAD_REF_DATA","loadRefDataAck","LOAD_REF_DATA_ACK","loadRefDataNack","LOAD_REF_DATA_NACK","SelectionActions","selectCurrencyPair","SELECT_CURRENCY_PAIR","parseCurrencyPair","currencyPair","slice","formatCurrencyPair","join","TICKER_ACTION_TYPES","formatPrice","price","numeral","format","CANDLES_ACTION_TYPES","TickerActions","subscribeToTicker","SUBSCRIBE_TO_TICKER","APP_ACTION_TYPES","CandlesActions","subscribeToCandles","SUBSCRIBE_TO_CANDLES","unsubscribeFromCandles","UNSUBSCRIBE_FROM_CANDLES","TRADES_ACTION_TYPES","AppActions","bootstrapApp","BOOTSTRAP_APP","combineEpics","action$","state$","pipe","ofType","switchMap","log","connect","filter","Connected","merge","of","take","mergeMap","value","tickerActions","map","symbol","candleActions","timeframe","from","counter","ticker","distinctUntilChanged","tap","document","title","lastPrice","toFixed","EMPTY","stringify","concatMap","rootAction","isSubscribing","event","channel","timeout","receiveMessageAction","msg","request","catchError","subscribeAction","bufferTime","actions","length","takeUntil","Disconnected","timer","BOOK_ACTION_TYPES","TradesActions","subscribeToTrades","SUBSCRIBE_TO_TRADES","unsubscribeFromTrades","UNSUBSCRIBE_FROM_TRADES","getSubscriptions","getSubscriptionId","memoize","channelIds","Object","keys","Number","find","every","key","sort","getIsSubscriptionStale","subscriptionId","Boolean","isStale","result","push","fromFetch","response","json","PING_ACTION_TYPES","BookActions","subscribeToBook","SUBSCRIBE_TO_BOOK","unsubscribeFromBook","UNSUBSCRIBE_FROM_BOOK","getSelectedCurrencyPair","selection","statePairs$","pairwise","withLatestFrom","oldState","oldCurrencyPair","unsubscribeActions","subscribeActions","prec","PingActions","updateLatency","UPDATE_LATENCY","interval","cid","pingTimestamp","Date","now","latency","isHeartbeat","isSubscriptionMessage","isUnsubscriptionMessage","isErrorMessage","snapshotReducer","a","b","id","timestamp","amount","updateReducer","trade","existingTradeIndex","findIndex","x","newOrUpdatedTrade","updatedState","splice","tradesReducer","subscriptionsReducer","refDataReducer","tickerReducer","bid","bidSize","ask","askSize","dailyChange","dailyChangeRelative","volume","high","low","getLookupKey","open","close","candle","candleIndex","c","newOrUpdatedCandle","candlesReducer","split","lookupKey","selectionReducer","order","existingOrderIndex","newOrUpdatedOrder","bookReducer","pingReducer","rootEpic","appEpics","refDataEpics","transportEpics","tradeEpics","tickerEpics","candlesEpics","selectionEpics","bookEpics","pingEpics","rootReducer","combineReducers","trades","candles","book","ping","dependencies","epicMiddleware","createEpicMiddleware","wsMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","useThrottleFn","fn","ms","throttledFn","useMemo","throttle","useEffect","cancel","useThrottle","useState","throttledValue","setThrottledValue","setThrottledValueThrottled","priceFormatter","params","amountFormatter","toString","volumeFormatter","timeFormatter","time","DateTime","fromMillis","toLocaleString","TIME_24_WITH_SECONDS","Palette","Bid","Ask","BidTransparent","AskTransparent","Positive","Negative","Orange","White","BackgroundColor","Label","Border","LightGray","DarkGray","animation","Container","styled","div","Title","Animation","barHeight","barWidth","Loading","props","Stale","Trades","throttledTrades","columnDefs","headerName","field","hide","valueFormatter","Math","abs","cellStyle","color","className","rowData","deltaRowDataMode","getRowNodeId","onGridReady","api","sizeColumnsToFit","noRowsOverlayComponent","frameworkComponents","customLoadingOverlay","getTrades","selectedCurrencyPair","DEFAULT_CANDLES","candlesSelector","getCandles","tickerSelector","getTicker","getTickers","getVisibleCurrencyPairTickers","allCurrencyPairs","selectedCurrencyPairIndex","indexOf","range","index","values","getTickersWithPrices","tickers","subscribeIdGetter","prices","usePrevious","val","ref","useRef","current","isActive","CurrencyPair","Price","RelativeChange","isPositive","Change","TickerWrapper","itemCount","indexThreshold","floor","scaleFactor","reduce","acc","TickerContainer","direction","Content","IdenticalPart","DigitContainer","span","AnimatedValue","delay","scale","duration","createRef","timeoutId","animate","runAnimation","transform","iterations","setTimeout","requestAnimationFrame","clearTimeout","UpdateHighlight","changedPartRef","effect","prev","identicalPart","changedPart","setParts","prevValue","min","i","calculateParts","digits","digit","Icon","TrendIndicator","isHidden","setIsHidden","icon","Ticker","onClick","isPositiveChange","percentChange","dispatch","ownProps","Tickers","setDirection","previousSelectedCurrencyPairIndex","Highcharts","colors","chart","backgroundColor","stops","xAxis","labels","style","lineColor","minorGridLineColor","tickColor","yAxis","gridLineColor","tickWidth","tooltip","borderColor","plotOptions","series","dataLabels","fontSize","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","theme","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","CandlesChart","isLoading","setIsLoading","useUTC","align","text","height","lineWidth","resize","enabled","top","offset","name","selected","buttons","count","chartOptions","setChartOptions","ohlc","rest","volumes","upColor","column","highcharts","options","constructorType","amountRenderer","styles","formattedStyles","bidAmountRenderer","width","bidDepth","maxDepth","valueFormatted","left","askAmountRenderer","askDepth","right","Book","orders","gridApi","setGridApi","throttledOrders","cellRenderer","handleResize","debounce","addEventListener","removeEventListener","bookSelector","getBook","rawBook","bids","asks","levels","max","v","forEach","level","getPricePoints","uniq","computeDepth","pricePoints","orderFilter","depth","getDepth","bidPrices","askPrices","pricePoint","DepthChart","throttledDepth","autoRotation","area","categories","step","formatter","parseFloat","SvgContainer","svg","LineChart","maxX","minValue","diff","getSvgX","getSvgY","y","pathD","viewBox","d","PriceChartRenderer","PriceRenderer","setState","Component","Market","display","forEachNode","node","setSelected","redrawRows","rowClassRules","isSelected","rowSelection","onRowClicked","priceChartRenderer","priceRenderer","Header","Body","Widget","children","Diagnostics","setDelay","intervalId","setInterval","clearInterval","getLatency","Latency","Cube","Face","FrontFace","RightFace","AnimatedCube","trigger","setWidth","previousTrigger","previousWidth","containerRef","cubeRef","updateDimensions","getBoundingClientRect","handleWindowResize","easing","CurrencyPairTransition","TickersPanel","MarketPanel","TradesPanel","CandlesPanel","BookPanel","DepthPanel","Footer","App","createStore","applyMiddleware","run","configureStore","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"uJAAYA,ECSAC,E,kEC2BL,SAASC,EAAaC,GAC3B,OAAO,SAACC,EAAeC,GACrB,MAAuB,qBAAZD,EACF,CAAED,QAES,qBAATE,EACF,CACLF,OACAC,WAIG,CACLD,OACAC,UACAC,SAqBC,SAASC,EACdC,EACAC,GAEA,OAAO,WAAsD,IAArCC,EAAoC,uDAA5BD,EAAcE,EAAc,uCAC1D,OAAIH,EAASI,eAAeD,EAAOP,MAC1BI,EAASG,EAAOP,MAAMM,EAAOC,GAE7BD,I,SFhFDT,O,qBAAAA,I,yBAAAA,I,gCAAAA,M,cCSAC,K,sCAAAA,E,4CAAAA,E,8DAAAA,E,sDAAAA,E,8DAAAA,E,gEAAAA,E,8DAAAA,E,sEAAAA,E,wEAAAA,E,mDAAAA,M,KAmEL,IE1EKW,EF0ECC,EAAmB,CAC9BC,YAAaZ,EACXD,EAAuBc,cAEzBC,eAAgBd,EAIdD,EAAuBgB,iBACzBC,uBAAwBhB,EAGtBD,EAAuBkB,0BACzBC,mBAAoBlB,EAGlBD,EAAuBoB,sBACzBC,sBAAuBpB,EAGrBD,EAAuBsB,0BACzBC,uBAAwBtB,EAGtBD,EAAuBwB,2BACzBC,uBAAwBxB,EAGtBD,EAAuB0B,0BACzBC,0BAA2B1B,EAGzBD,EAAuB4B,8BACzBC,2BAA4B5B,EAE1BD,EAAuB8B,+BACzBC,kBAAmB9B,EAGjBD,EAAuBgC,qBGrFZC,EAzBY,SAAC,GAIT,IAHjBC,EAGgB,EAHhBA,WAIA,OAAO,SAACC,GAAD,OAAW,SAACC,GAgBjB,OAfAF,EAAWG,WAAU,SAACC,GACpB,IAAMC,EAAaC,KAAKC,MAAMH,GAC1BlC,OAAOsC,EACPC,OAAYD,EAEZE,MAAMC,QAAQN,GAChBI,EAAYJ,EAAW,GACdA,EAAW7B,eAAe,YACnCiC,EAAYJ,EAAWO,QAErBH,GAAaR,EAAMY,WAAWC,cAAcL,KAC9CvC,EAAO+B,EAAMY,WAAWC,cAAcL,IAExCP,EAAKxB,EAAiBG,eAAewB,EAAYnC,OAE5C,SAACK,GAAD,OAAqB2B,EAAK3B,O,gBCxBxBwC,EAAb,WAOE,WAAoBC,GAAgB,yBAAhBA,QAAe,KAN3BC,YAM2B,OAL3BC,iBAK2B,OAJ3BC,kBAI2B,OAH3BC,eAG2B,OAF3BC,eAE2B,EACjCC,KAAKL,YAAST,EACdc,KAAKH,kBAAeX,EATxB,oDAYiB,IAAD,OACZc,KAAKL,OAAS,IAAIM,UAAUD,KAAKN,OACjCM,KAAKL,OAAOO,OAAS,kBAAM,EAAKN,aAAe,EAAKA,eACpDI,KAAKL,OAAOQ,UAAY,YAAe,IAAZrB,EAAW,EAAXA,KACzB,EAAKe,cAAgB,EAAKA,aAAaf,IAEzCkB,KAAKL,OAAOS,QAAU,SAACC,GAAD,OAAW,EAAKP,WAAa,EAAKA,UAAUO,IAClEL,KAAKL,OAAOW,QAAU,kBAAM,EAAKP,WAAa,EAAKA,eAnBvD,6BAuBI,MAAM,IAAIQ,MAAM,6BAvBpB,2BA0BOC,GACCR,KAAKL,SACHK,KAAKL,OAAOc,aAAeT,KAAKL,OAAOe,KACzCC,QAAQC,KAAR,2CACsCZ,KAAKL,OAAOc,WADlD,WAIAT,KAAKL,OAAOkB,KAAKL,MAjCzB,gCAsCYM,GACRd,KAAKJ,YAAckB,IAvCvB,iCA0CaA,GACTd,KAAKH,aAAeiB,IA3CxB,8BA8CUA,GACNd,KAAKF,UAAYgB,IA/CrB,8BAkDUA,GACNd,KAAKD,UAAYe,MAnDrB,KCAaC,EAAb,WACE,WAAoBC,GAAmC,yBAAnCA,kBADtB,sDAIIhB,KAAKgB,gBAAgBC,UAJzB,mCAQIjB,KAAKgB,gBAAgBE,SARzB,2BAWOV,GACHR,KAAKgB,gBAAgBH,KAAKL,KAZ9B,gCAeYM,GACRd,KAAKgB,gBAAgBG,UAAUL,KAhBnC,gCAmBYA,GACRd,KAAKgB,gBAAgBI,WAAWN,KApBpC,8BAuBUA,GACNd,KAAKgB,gBAAgBK,QAAQP,KAxBjC,8BA2BUA,GACNd,KAAKgB,gBAAgBM,QAAQR,OA5BjC,K,8HCGaS,EAAmBC,aAFR,SAACxE,GAAD,OAAsBA,EAAMyE,WAIlD,SAACA,GAAD,OAAaA,EAAQC,kB,SJLXvE,K,uCAAAA,E,+CAAAA,E,kDAAAA,M,KAUL,IKVKwE,ELUCC,EAAiB,CAC5BC,YAAapF,EACXU,EAAsB2E,eAExBC,eAAgBtF,EAGdU,EAAsB6E,mBACxBC,gBAAiBxF,EACfU,EAAsB+E,sB,SKnBdP,K,uDAAAA,M,KAQL,IAAMQ,EAAmB,CAC9BC,mBAAoB3F,EAGlBkF,EAAuBU,uB,yBCTpB,SAASC,EAAkBC,GAChC,MAA4B,qBAAjBA,EACF,CAAC,GAAI,IAIP,CAFMA,EAAaC,MAAM,EAAG,GACnBD,EAAaC,MAAM,IAI9B,SAASC,EAAmBF,GAA+B,IAAD,EACvCD,EAAkBC,GADqB,mBAE/D,MAAO,CAFwD,WAExCG,KAAK,OAGvB,ICjBKC,EDiBCC,EAAc,SAACC,GAAD,OACzBC,IAAQD,GAAOE,OAAO,Y,SClBZJ,K,kDAAAA,M,KAQL,ICMKK,EDNCC,EAAgB,CAC3BC,kBAAmBzG,EAGjBkG,EAAoBQ,uB,SCEZH,K,oDAAAA,E,6DAAAA,M,KAeL,IC7BKI,ED6BCC,EAAiB,CAC5BC,mBAAoB7G,EAGlBuG,EAAqBO,sBACvBC,uBAAwB/G,EAGtBuG,EAAqBS,4B,SCrCbL,K,mCAAAA,M,KAIL,ICJKM,EDICC,EAAa,CACxBC,aAAcnH,EACZ2G,EAAiBS,gBE6GNC,eAlFoD,SACjEC,EACAC,EAFiE,OAG/DtF,EAH+D,EAG/DA,WAH+D,OAKjEqF,EAAQE,KACNC,YAA6Bd,EAAiBS,eAC9CM,aAAU,WAIR,OAHAxD,QAAQyD,IAAI,iBACZ1F,EAAW2F,UAEJN,EAAQE,KACbC,YACE1H,EAAuBkB,0BAEzB4G,aAAO,SAACrH,GAAD,OAAYA,EAAON,UAAYJ,EAAiBgI,aACvDJ,aAAU,kBACRK,YACEC,YAAG7C,EAAeC,eAClBkC,EAAQE,KACNC,YACE/G,EAAsB6E,mBAExB0C,YAAK,GACLC,aAAS,WACP,IAAMjD,EAAgBH,EAAiByC,EAAOY,OACxCC,EAAgBnD,EAAcoD,KAAI,SAACvC,GAAD,OACtCU,EAAcC,kBAAkB,CAC9B6B,OAAQxC,OAGNyC,EAAgBtD,EAAcoD,KAAI,SAACvC,GAAD,OACtCc,EAAeC,mBAAmB,CAChCyB,OAAQxC,EACR0C,UAAW,UAIf,OAAOT,YACLC,YACEtC,EAAiBC,mBAAmB,CAClCG,aAAcb,EAAc,MAGhCwD,YAAKL,GACLK,YAAKF,oBAU8C,SACnEjB,EACAC,GAFmE,OAInED,EAAQE,KACNC,YACEvC,EAAuBU,sBAEzB8B,aAAU,SAAClH,GAAY,IACbsF,EAAiBtF,EAAON,QAAxB4F,aADY,EAEAD,EAAkBC,GAA7B4C,EAFW,oBAIpB,OAAOnB,EAAOC,KACZa,aAAI,SAAC9H,GAAD,OAAWA,EAAMoI,OAAO7C,MAC5B8C,cACAf,aAAO,SAACc,GAAD,MAA8B,qBAAXA,KAC1BE,aACE,SAACF,GAAD,aACGG,SAASC,MAAT,qBAAqBJ,EAAOK,iBAA5B,aAAqB,EAAkBC,QACtC,GADD,YAEIP,EAFJ,sBAILR,aAAS,kBAAMgB,e,6ECsFR7B,gBA/JX,SAACC,EAASC,EAAV,OAAoBtF,EAApB,EAAoBA,WAApB,OACFqF,EAAQE,KACNC,YAA6B1H,EAAuBc,cACpDqH,aAAS,SAAC1H,GAER,OADAyB,EAAWmC,KAAK7B,KAAK4G,UAAU3I,EAAON,UAC/BgJ,WAcT,SAAC5B,GACH,OAAOA,EAAQE,KACbC,YACE1H,EAAuBoB,qBACvBpB,EAAuB0B,0BAEzB2H,cAAU,SAACC,GACT,IAAMC,EACJD,EAAWpJ,OAASF,EAAuBoB,qBAE7C,OAAO4G,YACLT,EAAQE,KACNC,YACE1H,EAAuBgB,iBAEzB8G,aAAO,SAACrH,GACN,OACG8I,GAC0B,eAAzB9I,EAAON,QAAQqJ,OACf/I,EAAON,QAAQsJ,UACZH,EAAkCnJ,QAAQsJ,UAC7CF,GAA0C,iBAAzB9I,EAAON,QAAQqJ,OACT,UAAzB/I,EAAON,QAAQqJ,SAGnBtB,YAAK,GACLwB,aAtDgC,KAuDhCpB,aAAI,SAACqB,GACH,GAA2C,UAAvCA,EAAqBxJ,QAAQqJ,MAC/B,OAAOD,EACH3I,EAAiBW,uBAAuB,CACtCsC,MAAO8F,EAAqBxJ,QAAQyJ,MAEtChJ,EAAiBiB,6BACf,IAAD,EAID8H,EAAqBxJ,QAFvBsJ,EAFG,EAEHA,QACQ9G,EAHL,EAGHG,OAGF,OAAOyG,EACH3I,EAAiBS,sBAAsB,CACrCoI,UACA9G,YACAkH,QAAUP,EAAkCnJ,UAE9CS,EAAiBe,0BAA0B,CACzCgB,iBAIVmH,cAAW,kBACTP,EACItB,cACErH,EAAiBW,uBAAuB,CACtCsC,MAAO,aAGXoE,cAAGrH,EAAiBiB,kCAG5B0H,EACItB,cACErH,EAAiBC,YAAjB,cACE2I,MAAO,aACHF,EAAkCnJ,WAG1C8H,cACErH,EAAiBC,YAAY,CAC3B2I,MAAO,cACP1G,OAASwG,EAAsCnJ,QAC5CwC,qBAaf,SAAC4E,GACH,OAAOA,EAAQE,KACbC,YACE1H,EAAuBsB,0BAEzB6G,aAAS,SAAC4B,GAAqB,IACrBpH,EAAcoH,EAAgB5J,QAA9BwC,UACR,OAAO4E,EAAQE,KACbC,YAAgC1H,EAAuBgB,iBACvD8G,aAAO,SAACrH,GAAD,OAAYA,EAAON,QAAQ,KAAOwC,KACzC2F,aAAI,kBAAM,QACV0B,aA3H+B,KA4H/BlC,aAAO,SAACmC,GAAD,OAAgC,IAAnBA,EAAQC,UAC5B5B,aAAI,kBAAM1H,EAAiBmB,kBAAkB,CAAEY,iBAC/CwH,aACEnC,YACET,EAAQE,KACNC,YACE1H,EAAuB0B,0BAEzBoG,aAAO,SAACrH,GAAD,OAAYA,EAAON,QAAQwC,YAAcA,MAElD4E,EAAQE,KACNC,YACE1H,EAAuBkB,0BAEzB4G,aAAO,SAACrH,GAAD,OAAYA,EAAON,UAAYJ,EAAiBgI,wBAcjE,SAACR,EAASC,EAAV,GAAsC,IAAlBtF,EAAiB,EAAjBA,WACtB,OAAOqF,EAAQE,KACbC,YACE1H,EAAuBkB,0BAEzB4G,aAAO,SAACrH,GAAD,OAAYA,EAAON,UAAYJ,EAAiBqK,gBACvDzC,aAAU,kBACR0C,aA9J4B,KA8JF5C,KACxBqB,aAAI,kBAAM5G,EAAW2F,aACrBF,aAAU,kBAAMwB,gB,SF9LZjC,K,iDAAAA,E,0DAAAA,M,KAaL,IGZKoD,GHYCC,GAAgB,CAC3BC,kBAAmBvK,EAGjBiH,EAAoBuD,qBACtBC,sBAAuBzK,EAGrBiH,EAAoByD,0B,iBIhBXC,GAAmB5F,aAFF,SAACxE,GAAD,OAAsBA,EAAMwC,iBAIxD,SAACA,GAAD,OAAmBA,KAGR6H,GAAoB7F,YAC/B4F,IACA,SAAC5H,GAAD,OACE8H,oBACE,SAACrB,GAA+D,IAA7CI,EAA4C,uDAAP,GAChDkB,EAAaC,OAAOC,KAAKjI,GAAesF,IAAI4C,QAElD,OAAOH,EAAWI,MAAK,SAACxI,GACtB,OACEK,EAAcL,GAAW8G,UAAYA,GACrCuB,OAAOC,KAAKpB,GAASuB,OACnB,SAACC,GAAD,OAASxB,EAAQwB,KAASrI,EAAcL,GAAWkH,QAAQwB,YAKnE,SAAC5B,GAA+D,IAA7CI,EAA4C,uDAAP,GACtD,MAAO,CACLJ,GADK,oBAEFuB,OAAOC,KAAKpB,GACZyB,OACAhD,KAAI,SAAC+C,GAAD,gBAAYA,EAAZ,YAAmBxB,EAAQwB,SAClCnF,KAAK,WAKFqF,GAAyBvG,YACpC4F,IACA,SAAC5H,GAAD,OAAmB,SAACwI,GAAD,OACjBC,SAASzI,EAAcwI,IAAmB,IAAIE,aCgBnCpE,gBA1CX,SAACC,GAAD,OACFA,EAAQE,KACNC,YAAmCR,EAAoBuD,qBACvDnC,aAAI,SAAC7H,GAAY,IACP8H,EAAW9H,EAAON,QAAlBoI,OACFqB,EAAM,CACVH,QAAS,SACTlB,OAAO,IAAD,OAAMA,IAEd,OAAO3H,EAAiBO,mBAAmByI,UAS7C,SAACrC,EAASC,GAAV,OACFD,EAAQE,KACNC,YACER,EAAoByD,yBAEtBxC,aAAS,SAAC1H,GAAY,IACZ8H,EAAW9H,EAAON,QAAlBoI,OACFoD,EAAoB,GACpBhJ,EAAYkI,GAAkBrD,EAAOY,MAAzByC,CAAgC,SAAU,CAC1DtC,OAAO,IAAD,OAAMA,KAWd,MATyB,qBAAd5F,EACTgJ,EAAOC,KACLhL,EAAiBa,uBAAuB,CACtCkB,eAIJwB,QAAQC,KAAK,sCAERsE,YAAKiD,U,UC5BHrE,gBAlB6D,SAC1EC,GAD0E,OAG1EA,EAAQE,KACNC,YAA6B/G,EAAsB2E,eACnDqC,aAAU,WACR,OAAOkE,aAAU,2BAA2BpE,KAC1CE,aAAU,SAACmE,GAAD,OAAcA,EAASC,UACjCzD,aAAI,SAACqD,GAAD,OACFvG,EAAeG,eAAe,CAC5BL,cAAeyG,OAGnB7B,cAAW,kBAAM7B,YAAG7C,EAAeK,8BCK5B6B,gBAbX,SAACC,GAAD,OACFA,EAAQE,KACNC,YAAmCvB,EAAoBQ,qBACvD2B,aAAI,SAAC7H,GAAY,IACP8H,EAAW9H,EAAON,QAAlBoI,OACFqB,EAAM,CACVH,QAAS,SACTlB,OAAO,IAAD,OAAMA,IAEd,OAAO3H,EAAiBO,mBAAmByI,UC0ClCtC,gBA7CX,SAACC,GAAD,OACFA,EAAQE,KACNC,YACElB,EAAqBO,sBAEvBuB,aAAI,SAAC7H,GAAY,IAAD,EACgBA,EAAON,QAA7BoI,EADM,EACNA,OACFqB,EAAM,CACVH,QAAS,UACT4B,IAAK,CAAC,QAJM,EACE5C,UAGT,WAAyBF,IAAUrC,KAAK,MAE/C,OAAOtF,EAAiBO,mBAAmByI,UAS7C,SAACrC,EAASC,GAAV,OACFD,EAAQE,KACNC,YACElB,EAAqBS,0BAEvBkB,aAAS,SAAC1H,GAAY,IAAD,EACWA,EAAON,QAA7BoI,EADW,EACXA,OAAQE,EADG,EACHA,UACVkD,EAAoB,GAEpBhJ,EAAYkI,GAAkBrD,EAAOY,MAAzByC,CAAgC,UAAW,CAC3DQ,IAAK,CAAC,QAAS5C,EAAV,WAAyBF,IAAUrC,KAAK,OAW/C,MATyB,qBAAdvD,EACTgJ,EAAOC,KACLhL,EAAiBa,uBAAuB,CACtCkB,eAIJwB,QAAQC,KAAK,uCAERsE,YAAKiD,U,8BLzDNrB,K,2CAAAA,E,oDAAAA,Q,KAaL,IMdK0B,GNcCC,GAAc,CACzBC,gBAAiBjM,EAGfqK,GAAkB6B,mBACpBC,oBAAqBnM,EAGnBqK,GAAkB+B,wBOnBTC,GAA0BtH,aAFb,SAACxE,GAAD,OAAsBA,EAAM+L,aAIpD,SAACA,GAAD,OAAeA,EAAUxG,gBC8CZuB,gBApCX,SAACC,EAASC,GACZ,IAAMgF,EAAchF,EAAOC,KAAKgF,gBAChC,OAAOlF,EAAQE,KACbC,YACEvC,EAAuBU,sBAEzB6G,aAAeF,GACf7E,aAAU,YAAqC,IAAD,mBAAlClH,EAAkC,2BAAzBkM,EAAyB,KACtCC,GADsC,KACpBN,GAAwBK,IACxC5G,EAAiBtF,EAAON,QAAxB4F,aACF8G,EAAqB,GACvBD,GACFC,EAAmBjB,KACjB/E,EAAeG,uBAAuB,CACpCuB,OAAQqE,EACRnE,UAAW,OAEb8B,GAAcG,sBAAsB,CAAEnC,OAAQqE,IAC9CX,GAAYG,oBAAoB,CAAE7D,OAAQqE,KAI9C,IAAME,EAAmB,CACvBjG,EAAeC,mBAAmB,CAChCyB,OAAQxC,EACR0C,UAAW,OAEb8B,GAAcC,kBAAkB,CAAEjC,OAAQxC,IAC1CkG,GAAYC,gBAAgB,CAAE3D,OAAQxC,KAGxC,OAAO2C,YAAK,GAAD,OAAKmE,EAAuBC,WCc9BxF,gBA3CX,SAACC,GAAD,OACFA,EAAQE,KACNC,YAAiC4C,GAAkB6B,mBACnD7D,aAAI,SAAC7H,GAAY,IACP8H,EAAW9H,EAAON,QAAlBoI,OACFqB,EAAM,CACVH,QAAS,OACTlB,OAAO,IAAD,OAAMA,GACZwE,KAAM,MAER,OAAOnM,EAAiBO,mBAAmByI,UAS7C,SAACrC,EAASC,GAAV,OACFD,EAAQE,KACNC,YACE4C,GAAkB+B,uBAEpBlE,aAAS,SAAC1H,GAAY,IACZ8H,EAAW9H,EAAON,QAAlBoI,OACFoD,EAAoB,GACpBhJ,EAAYkI,GAAkBrD,EAAOY,MAAzByC,CAAgC,OAAQ,CACxDtC,OAAO,IAAD,OAAMA,KAWd,MATyB,qBAAd5F,EACTgJ,EAAOC,KACLhL,EAAiBa,uBAAuB,CACtCkB,eAIJwB,QAAQC,KAAK,oCAERsE,YAAKiD,U,oBHxDNK,K,sCAAAA,Q,KAQL,IAAMgB,GAAc,CACzBC,cAAehN,EAGb+L,GAAkBkB,iBIyCP5F,gBAzC0D,SACvEC,GADuE,OAGvEA,EAAQE,KACNC,YACE1H,EAAuBkB,0BAEzB4G,aAAO,SAACrH,GAAD,OAAYA,EAAON,UAAYJ,EAAiBgI,aACvDJ,aAAU,WACR,OAAOwF,aAXsB,KAWQ1F,KACnCE,aAAU,SAACyF,GACT,IAAMC,EAAgBC,KAAKC,MAC3B,OAAOvF,YACLT,EAAQE,KACNC,YACE1H,EAAuBgB,iBAEzB8G,aACE,SAACrH,GAAD,OACGmC,MAAMC,QAAQpC,EAAON,UACG,SAAzBM,EAAON,QAAQqJ,OACf/I,EAAON,QAAQiN,MAAQA,KAE3B9E,aAAI,kBACF0E,GAAYC,cAAc,CACxBO,QAASF,KAAKC,MAAQF,QAI5BpF,YACErH,EAAiBC,YAAY,CAC3B2I,MAAO,OACP4D,qB,QC5CT,SAASK,GAAYhN,GAC1B,OAAOmC,MAAMC,QAAQpC,EAAON,UAAkC,OAAtBM,EAAON,QAAQ,GAGlD,SAASuN,GAAsBjN,GACpC,MAAgC,eAAzBA,EAAON,QAAQqJ,MAGjB,SAASmE,GAAwBlN,GACtC,MAAgC,iBAAzBA,EAAON,QAAQqJ,MAGjB,SAASoE,GAAenN,GAC7B,MAAgC,UAAzBA,EAAON,QAAQqJ,MCOxB,SAASqE,GAAgBrN,EAAoBC,GAE3C,OAFmE,YAChDA,EAAON,QADyC,MAGhEmL,MAAK,SAACwC,EAAaC,GAAd,OAA8BA,EAAE,GAAKD,EAAE,MAC5CxF,KAAI,yCAA+C,CAClD0F,GADG,KAEHC,UAFG,KAGHC,OAHG,KAIH7H,MAJG,SAQT,SAAS8H,KAAgE,IAAlD3N,EAAiD,uDAA5B,GAAIC,EAAwB,qDAClDA,EAAON,QAD2C,GAC3DiO,EAD2D,mBAE/BA,EAF+B,GAE/DJ,EAF+D,KAE3DC,EAF2D,KAEhDC,EAFgD,KAExC7H,EAFwC,KAGhEgI,EAAqB7N,EAAM8N,WAAU,SAACC,GAAD,OAAOA,EAAEP,KAAOA,KACrDQ,EAAoB,CACxBR,KACAC,YACAC,SACA7H,SAGF,GAAIgI,GAAsB,EAAG,CAC3B,IAAMI,EAAejO,EAAMwF,QAE3B,OADAyI,EAAaC,OAAOL,EAAoB,EAAGG,GACpCC,EAEP,MAAM,CAAED,GAAR,oBAA8BhO,IAIlC,I,GAmCamO,GAAgBtO,EAAa,gBAErCL,EAAuBgB,iBArCE,SAACR,EAAoBC,GACjD,GACEgN,GAAYhN,IACZiN,GAAsBjN,IACtBmN,GAAenN,GAEf,OAAOD,EANmE,MAS/CC,EAAOL,MAAQ,GAApCqJ,EAToE,EASpEA,QAASI,EAT2D,EAS3DA,QACjB,GAAgB,WAAZJ,EAAsB,CAAC,IAEnB1D,EADa8D,EAAXtB,OACoBvC,MAAM,GAClC,GAAI2H,GAAwBlN,GAAS,CACnC,IAAMgO,EAAY,gBACbjO,GAGL,cADOiO,EAAa1I,GACb0I,EAGT,IAGM9C,GAHgB/I,MAAMC,QAAQpC,EAAON,QAAQ,IAC/C0N,GACAM,IACyB3N,EAAMuF,GAAetF,GAElD,OAAO,gBACFD,EADL,gBAEGuF,EAAe4F,EAAO3F,MAAM,EApET,OAwExB,OAAOxF,KAlEyB,ICJ5BD,GAAkC,GA6E3BqO,GAAuBvO,GAAa,sBAE5CL,EAAuBsB,0BA7ES,SACnCd,EACAC,GACI,IAAD,EACqCA,EAAON,QAAvC0J,EADL,EACKA,QAASJ,EADd,EACcA,QAAS9G,EADvB,EACuBA,UAE1B,OAAO,gBACFnC,EADL,gBAEGmC,EAAY,CACX8G,UACAI,gBAiE2C,gBAG5C7J,EAAuB4B,8BA/Da,SACvCpB,EACAC,GACI,IACIkC,EAAclC,EAAON,QAArBwC,UAEF8L,EAAY,gBACbjO,GAGL,cADOiO,EAAa9L,GACb8L,KAkDwC,gBAI5CzO,EAAuBgB,iBAnDE,SAC5BR,EACAC,GAEA,GAAIgN,GAAYhN,GAAS,CAAC,IACjBkC,EADgB,YACHlC,EAAON,QADJ,MAGvB,OAAKsL,QAAQjL,EAAMmC,GAAW+I,SAIvB,gBACFlL,EADL,gBAEGmC,EAFH,gBAGOnC,EAAMmC,GAHb,CAII+I,SAAS,MAPJlL,EAWX,OAAOA,KA4BwC,gBAK5CR,EAAuBgC,oBA9BK,SAC/BxB,EACAC,GACI,IACIkC,EAAclC,EAAON,QAArBwC,UAER,OAAO,gBACFnC,EADL,gBAEGmC,EAFH,gBAGOnC,EAAMmC,GAHb,CAII+I,SAAS,SAekC,gBAM5C1L,EAAuBkB,0BAhBU,SACpCV,EACAC,GAEA,OAAIA,EAAON,UAAYJ,EAAiBgI,UAC/BxH,GAEFC,KAGwC,IAQ/CD,IChFWsO,GAAiBxO,EAAa,gBAEtCM,EAAsB6E,mBAXA,SAAChF,EAAqBC,GAA4B,IACnEyE,EAAkBzE,EAAON,QAAzB+E,cAER,OAAO,gBACF1E,EADL,CAEE0E,qBAT+B,CACjCA,cAAe,KCiDJ4J,GAAgBzO,EAAa,gBAErCL,EAAuBgB,iBAhDE,SAACR,EAAoBC,GACjD,GAAIgN,GAAYhN,GACd,OAAOD,EAFmE,MAK/CC,EAAOL,MAAQ,GAApCqJ,EALoE,EAKpEA,QAASI,EAL2D,EAK3DA,QACjB,GAAgB,WAAZJ,EAAsB,CAAC,IAEnB1D,EADa8D,EAAXtB,OACoBvC,MAAM,GAFV,cAiBpBvF,EAAON,QAjBa,0BAMpB4O,EANoB,KAOpBC,EAPoB,KAQpBC,EARoB,KASpBC,EAToB,KAUpBC,EAVoB,KAWpBC,EAXoB,KAYpBnG,EAZoB,KAapBoG,EAboB,KAcpBC,EAdoB,KAepBC,EAfoB,KAmBxB,OAAO,gBACF/O,EADL,gBAEGuF,EAAe,CACdA,eACAgJ,MACAC,UACAC,MACAC,UACAC,cACAC,sBACAnG,YACAoG,SACAC,OACAC,SAKN,OAAO/O,KA7CyB,ICVrBgP,GAAe,SAACzJ,EAAsB0C,GAAvB,MAC1B,CAAC1C,EAAc0C,GAAWvC,KAAK,MCsBjC,SAAS2H,GAAgBrN,EAAoBC,GAE3C,OAFmE,YAC/CA,EAAON,QADwC,MAGhEmI,KAAI,yCAA4D,CAC/D2F,UADG,KAEHwB,KAFG,KAGHC,MAHG,KAIHJ,KAJG,KAKHC,IALG,KAMHF,OANG,SAQJ/D,MAAK,SAACwC,EAAWC,GAAZ,OAA0BA,EAAEE,UAAYH,EAAEG,aAGpD,SAASE,KAAgE,IAAlD3N,EAAiD,uDAA5B,GAAIC,EAAwB,qDACnDA,EAAON,QAD4C,GAC7DwP,EAD6D,mBAElBA,EAFkB,GAE/D1B,EAF+D,KAEpDwB,EAFoD,KAE9CC,EAF8C,KAEvCJ,EAFuC,KAEjCC,EAFiC,KAE5BF,EAF4B,KAGhEO,EAAcpP,EAAM8N,WAAU,SAACuB,GAAD,OAAOA,EAAE5B,YAAcA,KACrD6B,EAAqB,CACzB7B,YACAwB,OACAC,QACAJ,OACAC,MACAF,UAGF,GAAIO,GAAe,EAAG,CACpB,IAAMnB,EAAejO,EAAMwF,QAE3B,OADAyI,EAAaC,OAAOkB,EAAa,EAAGE,GAC7BrB,EAET,MAAM,CAAEqB,GAAR,oBAA+BtP,IAGjC,IAsCauP,GAAiB1P,EAAa,gBAEtCL,EAAuBgB,iBAxCE,SAACR,EAAqBC,GAClD,GACEgN,GAAYhN,IACZiN,GAAsBjN,IACtBmN,GAAenN,GAEf,OAAOD,EANoE,MAShDC,EAAOL,MAAQ,GAApCqJ,EATqE,EASrEA,QAASI,EAT4D,EAS5DA,QACjB,GAAgB,YAAZJ,EAAuB,CAAC,IAAD,EACTI,EAARwB,IAC0B2E,MAAM,KAFf,mBAEhBvH,EAFgB,KAGnB1C,EAHmB,KAGGC,MAAM,GAC5BiK,EAAYT,GAAazJ,EAAc0C,GAE7C,GAAIkF,GAAwBlN,GAAS,CACnC,IAAMgO,EAAY,gBACbjO,GAGL,cADOiO,EAAawB,GACbxB,EAGT,IAGM9C,GAHgB/I,MAAMC,QAAQpC,EAAON,QAAQ,GAAG,IAClD0N,GACAM,IACyB3N,EAAMyP,GAAYxP,GAE/C,OAAO,gBACFD,EADL,gBAEGyP,EAAYtE,EAAO3F,MAAM,EA5EZ,OAgFlB,OAAOxF,KAxE0B,ICCtB0P,GAAmB7P,EAAa,gBAExC8E,EAAuBU,sBAdD,SACzBrF,EACAC,GACI,IACIsF,EAAiBtF,EAAON,QAAxB4F,aAER,OAAO,gBACFvF,EADL,CAEEuF,oBAViC,ICYrC,SAAS8H,GAAgBrN,EAAoBC,GAE3C,OAFmE,YAChDA,EAAON,QADyC,MAErDmI,KAAI,yCAAiC,CACjD0F,GADgB,KAEhB3H,MAFgB,KAGhB6H,OAHgB,SAOpB,SAASC,KAAgE,IAAlD3N,EAAiD,uDAA5B,GAAIC,EAAwB,qDACpDA,EAAON,QAD6C,GAC7DgQ,EAD6D,mBAE1CA,EAF0C,GAE/DnC,EAF+D,KAE3D3H,EAF2D,KAEpD6H,EAFoD,KAGhEkC,EAAqB5P,EAAM8N,WAAU,SAACC,GAAD,OAAOA,EAAEP,KAAOA,KACrDqC,EAAoB,CACxBrC,KACA3H,QACA6H,UAGF,GAAc,IAAV7H,GAAe+J,GAAsB,EAAG,CAE1C,IAAM3B,EAAejO,EAAMwF,QAE3B,OADAyI,EAAaC,OAAO0B,EAAoB,GACjC3B,EACF,GAAI2B,GAAsB,EAAG,CAElC,IAAM3B,EAAejO,EAAMwF,QAE3B,OADAyI,EAAaC,OAAO0B,EAAoB,EAAGC,GACpC5B,EAGP,MAAM,GAAN,oBAAWjO,GAAX,CAAkB6P,IAItB,IAoCaC,GAAcjQ,EAAa,gBAEnCL,EAAuBgB,iBAtCE,SAACR,EAAkBC,GAC/C,GACEgN,GAAYhN,IACZiN,GAAsBjN,IACtBmN,GAAenN,GAEf,OAAOD,EANiE,MAS7CC,EAAOL,MAAQ,GAApCqJ,EATkE,EASlEA,QAASI,EATyD,EASzDA,QAEjB,GAAgB,SAAZJ,EAAoB,CAAC,IAEjB1D,EADa8D,EAAXtB,OACoBvC,MAAM,GAElC,GAAI2H,GAAwBlN,GAAS,CACnC,IAAMgO,EAAY,gBACbjO,GAGL,cADOiO,EAAa1I,GACb0I,EAGT,IAGM9C,GAHgB/I,MAAMC,QAAQpC,EAAON,QAAQ,GAAG,IAClD0N,GACAM,IACyB3N,EAAMuF,GAAetF,GAClD,OAAO,gBACFD,EADL,gBAEGuF,EAAe4F,IAIpB,OAAOnL,KAtEuB,ICCnB+P,GAAclQ,EAAa,gBAEnC2L,GAAkBkB,gBAXM,SAAC1M,EAAkBC,GAA2B,IACjE+M,EAAY/M,EAAON,QAAnBqN,QAER,OAAO,gBACFhN,EADL,CAEEgN,eAPiB,ICqBRgD,GAAWlJ,YACtBmJ,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAGWC,GAAcC,YAAgB,CACzClM,QAAS4J,GACT7L,cAAe4L,GACfwC,OAAQzC,GACR/F,OAAQkG,GACRuC,QAAStB,GACTxD,UAAW2D,GACXoB,KAAMhB,GACNiB,KAAMhB,KCnCFrO,GAAa,IAAIqC,EAJC,IAAItB,EAC1B,oCAKIuO,GAAe,CACnBtP,eAKIuP,GAAiBC,YAKrB,CACAF,kBAGIG,GAAe1P,EAAmB,CAAEC,gBAEpC0P,GACHC,OAAeC,sCAAwCC,I,aC/B7CC,GAAgB,SAC3BC,GAEI,IADJC,EACG,uDADE,IAECC,EAAcC,mBAAQ,WAC1B,OAAOC,oBAASJ,EAAIC,KACnB,CAACD,EAAIC,IAQR,OALAI,qBAAU,WACR,OAAO,WACLH,EAAYI,YAEb,CAACJ,IACGA,GAGIK,GAAc,SAAIpK,GAAyB,IAAf8J,EAAc,uDAAT,IAAS,EACTO,mBAASrK,GADA,mBAC9CsK,EAD8C,KAC9BC,EAD8B,KAE/CC,EAA6BZ,GAAcW,EAAmBT,GAEpE,OADAU,EAA2BxK,GACpBsK,GCjBIG,GAAiB,SAACC,GAAD,OAC5B1M,EAAY0M,EAAO1K,QAER2K,GAAkB,SAACD,GAAD,O/BYF5E,E+BXd4E,EAAO1K,O/BYX8F,EAAO8E,WAAa,GADH,IAAC9E,G+BThB+E,GAAkB,SAACH,GAAD,O/BYFzD,E+BXdyD,EAAO1K,M/BYpB9B,IAAQ+I,GAAQ9I,OAAO,UADG,IAAC8I,G+BThB6D,GAAgB,SAACJ,GAAD,O/BYFK,E+BXdL,EAAO1K,M/BYlBgL,WAASC,WAAWF,GAAMG,eAAeF,WAASG,sBAD1B,IAACJ,G,gBgCZZK,GAhBC,CACdC,IAAK,UACLC,IAAK,UACLC,eAAgB,uBAChBC,eAAgB,yBAChBC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,MAAO,OACPC,gBAAiB,OACjBC,MAAO,4BACPC,OAAQ,UACRC,UAAW,4BACXC,SAAU,W,kmCCVZ,IAIMC,GAAS,4BACGd,GAAQY,UADX,mFAJE,EAIF,4BAHG,GAGH,SAOFG,GAAYC,KAAOC,IAAV,MAkBTC,GAAQF,KAAOC,IAAV,KAKPjB,GAAQY,WAGNO,GAAYH,KAAOC,IAAV,KAUEjB,GAAQY,UA9Cd,GADD,EAmDoBZ,GAAQY,UAC7BQ,GAIZN,GAMEA,IAIM,EAKAO,GCxEGC,GCKY,SAACC,GAAW,IAAD,EACHA,EAAzB/L,aAD4B,MACpB,aADoB,EAEpC,OACE,kBAACuL,GAAD,KACE,kBAACI,GAAD,MACA,kBAACD,GAAD,KAAQ1L,K,kKCVP,IAAMuL,GAAYC,KAAOC,IAAV,M,6SCAf,IAAMF,GAAYC,KAAOC,IAAV,MCAPO,GCEO,WACpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAShM,MAAO,eCmEPiM,GAtDW,SAACF,GAAW,IAC5B3D,EAAoB2D,EAApB3D,OAAQ1F,EAAYqJ,EAAZrJ,QACVwJ,EAAkB1C,GAAqBpB,EAAQ,KAE/C+D,EAAuB,CAC3B,CACEC,WAAY,KACZC,MAAO,KACPC,MAAM,GAER,CACEF,WAAY,SACZC,MAAO,SACPE,eAAgB,SAACzC,GAAD,OACdC,GAAgB,CAAE3K,MAAOoN,KAAKC,IAAI3C,EAAO1K,WAE7C,CACEgN,WAAY,QACZC,MAAO,QACPK,UAAW,SAAC5C,GACV,MAAO,CACL6C,MAAO7C,EAAO1K,MAAQ,EAAIoL,GAAQE,IAAMF,GAAQC,MAGpD8B,eAAgB1C,IAElB,CACEuC,WAAY,OACZC,MAAO,YACPE,eAAgBrC,GAChBwC,UAAW,iBAAO,CAChBC,MAAOnC,GAAQY,cAKrB,OACE,kBAAC,GAAD,CAAWwB,UAAU,wBAClBlK,GAAW,kBAAC,GAAD,MACZ,kBAAC,eAAD,CACEyJ,WAAYA,EACZU,QAASX,EACTY,kBAAkB,EAClBC,aAAc,SAACzT,GAAD,OAAUA,EAAK0L,IAC7BgI,YAAa,SAACxM,GAAD,OAAWA,EAAMyM,IAAIC,oBAClCC,uBAAwB,uBACxBC,oBAAqB,CACnBC,qBAAsBvB,QC7DnBwB,GAAYtR,aAFF,SAACxE,GAAD,OAAsBA,EAAM4Q,UAEK,SAACA,GAAD,OACtDtG,oBAAQ,SAACvC,GAAD,OAAoB6I,EAAO7I,SCLtB0M,GC0BApN,aAlBS,SAACrH,GACvB,IAAM+V,EAAuBjK,GAAwB9L,GAC/C4Q,EAASmF,EACXD,GAAU9V,EAAV8V,CAAiBC,GACjB,GAEE/K,EAAiBX,GAAkBrK,EAAlBqK,CAAyB,UAMhD,MAAO,CACLuG,SACA1F,QAN0B,qBAAnBF,GAEHD,GAAuB/K,EAAvB+K,CAA8BC,MAQvB3D,CAAyBoN,ICtBlCuB,GAA4B,GAErBC,GAAkB,SAACjW,GAAD,OAAsBA,EAAM6Q,SAE9CqF,GAAa1R,YAAeyR,IAAiB,SAACpF,GAAD,OACxDvG,oBACE,SAAC/E,EAAsB0C,GAAvB,OACE4I,EAAQ7B,GAAazJ,EAAc0C,KAAe+N,MACpD,SAACzQ,EAAc0C,GAAf,gBAAgC1C,EAAhC,YAAgD0C,SCJ9CkO,GAAiB,SAACnW,GAAD,OAAsBA,EAAMoI,QAEtCgO,GAAY5R,YAAe2R,IAAgB,SAAC/N,GAAD,OACtDkC,oBAAQ,SAACvC,GAAD,OAAoBK,EAAOL,SAGxBsO,GAAa7R,YACxBD,EACA4R,IACA,SAACzR,EAAe0D,GAAhB,OACE1D,EAAcoD,KAAI,SAACvC,GAAD,qBAChBA,gBACG6C,EAAO7C,UAIH+Q,GAAgC9R,YAC3CD,EACAuH,IACA,SAACyK,EAAkBR,GACjB,IAAIrR,EAA0B,GAExB8R,EAA4BD,EAAiBE,QACjDV,GAAwB,IAW1B,OAPIS,GAA6B,IAC/B9R,EAAgBgS,iBACdF,EAA4B,EAC5BA,EAA4B,GAC5B1O,KAAI,SAAC6O,GAAD,OCpCeC,EDoCOL,ECpCW,SAACI,GAAD,OAC3CC,GAASD,EAAQC,EAAOlN,OAAUkN,EAAOlN,QAAUkN,EAAOlN,UDmCRiN,GCpC1B,IAACC,MDuChB,CACLlS,gBACA8R,gCAKOK,GAAuBrS,YAClC6R,GACAJ,GACA5L,GACAD,IACA,SAAC0M,EAASjG,EAASkG,EAAmBvU,GACpC,OAAOsU,EAAQhP,KAAI,SAACM,GAClB,IAAM4C,EAAiB+L,EAAkB,SAAU,CACjDhP,OAAO,IAAD,OAAMK,EAAO7C,gBAGrB,OAAO,gBACF6C,EADL,CAEE4O,QAASnG,EAAQ7B,GAAa5G,EAAO7C,aAAc,QAAU,IAAIuC,KAC/D,SAACM,GAAD,OAAYA,EAAO8G,SAErBhE,QAASD,UACPD,GAAiBxI,EAAcwI,GAAgBE,iBElE5C+L,GAAc,SAACC,GAC1B,IAAMC,EAAMC,mBAMZ,OAJAtF,qBAAU,WACRqF,EAAIE,QAAUH,IACb,CAACA,IAEGC,EAAIE,S,+lCCLN,IAAMtD,GAAYC,KAAOC,IAAV,MAehB,qBAAGqD,SAA2BtE,GAAQO,OAASP,GAAQW,SAMzDa,IAOS+C,GAAevD,KAAOC,IAAV,KACdjB,GAAQQ,OAINgE,GAAQxD,KAAOC,IAAV,KACPjB,GAAQQ,OAMNiE,GAAiBzD,KAAOC,IAAV,MAKhB,qBAAGyD,WACG1E,GAAQK,SAAWL,GAAQM,YAK/BqE,GAAS3D,KAAOC,IAAV,MAMR,qBAAGyD,WACG1E,GAAQK,SAAWL,GAAQM,Y,wSCxDrC,IAAMS,GAAYC,KAAOC,IAAV,MAKT2D,GAAgB5D,KAAOC,IAAV,MAKtB,YAAoB,IAAjB4D,EAAgB,EAAhBA,UAgBH,OAfmBnB,iBAAM,EAAGmB,GAAW/P,KAAI,SAAC6O,GAC1C,IAAMmB,EAAiB9C,KAAK+C,MAAMF,EAAY,GAKxCG,EAAc,GAAKF,GAHvBnB,GAASmB,EACLnB,EACAmB,EAAiB9C,KAAKC,IAAI6C,EAAiBnB,KACA,GAEjD,MAAM,qCAAN,OAC4BA,EAD5B,uDAEoCqB,EAFpC,aAEoDA,EAFpD,wDAOgBC,QAAO,SAACC,EAAK5K,GAAN,OAAa4K,EAAO5K,IAAI,MAGjD6K,IACa,gBAAGxB,EAAH,EAAGA,MAAH,yBAA2BA,EAA3B,sBACA,gBAAGyB,EAAH,EAAGA,UAAH,2BACiB,SAAdA,EAAuB,KAAO,IADjC,U,iWClCV,IAAMC,GAAUrE,KAAOC,IAAV,MAIPqE,GAAgBtE,KAAOC,IAAV,MAMbsE,IAJcvE,KAAOC,IAAV,KACbjB,GAAQO,QAGWS,KAAOwE,KAAV,OCiBrBC,GAKD,SAAClE,GAAW,IACP3M,EAAgD2M,EAAhD3M,MADM,EAC0C2M,EAAzCmE,aADD,MACS,EADT,IAC0CnE,EAA9BoE,aADZ,MACoB,EADpB,IAC0CpE,EAAnBqE,gBADvB,MACkC,IADlC,EAERzB,EAAM0B,sBA8CZ,OA5CA/G,qBAAU,WAAO,IAAD,EACVgC,OAAmC5R,EACnC4W,OAAgC5W,EAEpC,GAAoC,oBAAhC,UAAOiV,EAAIE,eAAX,aAAO,EAAa0B,SAAwB,CAC9C,IAAMC,EAAe,WAAO,IAAD,EACzBlF,EAAS,UAAGqD,EAAIE,eAAP,aAAG,EAAa0B,QAAb,CAGR,CAAE5D,MAAOnC,GAAQO,OAAQ0F,UAAW,aAH5B,oBAIM,IAAVN,EACA,GACA,CAAC,CAAExD,MAAOnC,GAAQQ,MAAOyF,UAAU,SAAD,OAAWN,EAAX,QAN9B,CAOR,CAAExD,MAAOnC,GAAQQ,MAAOyF,UAAW,cAErC,CACEL,WACAM,WAAY,KAKdR,EACFI,EAAYK,YACV,kBAAMC,sBAAsBJ,KAC5BN,GAGFU,sBAAsBJ,GAI1B,OAAO,WACDF,GACFO,aAAaP,GAEXhF,GACFA,EAAU/B,YAKb,CAACnK,IAEG,kBAAC2Q,GAAD,CAAgBpB,IAAKA,GAAMvP,IAuCrB0R,GApCoB,SAAC/E,GAClC,IAAMgF,EAAiBV,sBACfjR,EAA8B2M,EAA9B3M,MAFoC,EAEN2M,EAAvBiF,cAF6B,MAEpB,UAFoB,EAGtCC,EAAOxC,GAAYrP,GAHmB,EAIKqK,mBAAmB,IAJxB,yCAIpCyH,EAJoC,KAIrBC,EAJqB,KAIPC,EAJO,KAM5C9H,qBAAU,WACR8H,EA/E0B,SAAChS,EAAeiS,GAC5C,IAAKjS,IAAUiS,EACb,MAAO,CAACjS,EAAO,IAIjB,IAFA,IAAM8B,EAASsL,KAAK8E,IAAIlS,EAAM8B,OAAQmQ,EAAUnQ,QAC5CiN,EAAQ,EACHoD,EAAI,EAAGA,EAAIrQ,GACd9B,EAAMmS,KAAOF,EAAUE,GADDA,IAExBpD,IAKJ,MAAO,CAAC/O,EAAMpC,MAAM,EAAGmR,GAAQ/O,EAAMpC,MAAMmR,EAAO/O,EAAM8B,SAkE7CsQ,CAAepS,GAAS,GAAI6R,GAAQ,OAG5C,CAAC7R,IAEJ,IAAMqS,EACO,SAAXT,EAAA,OACEG,QADF,IACEA,OADF,EACEA,EACInK,MAAM,IACP1H,KAAI,SAACoS,EAAOvD,GAAR,OACH,kBAAC,GAAD,CACE9L,IAAK8L,EACL/O,MAAOsS,EACPxB,MAAe,IAAR/B,EACPgC,MAAO,EACPC,SAAU,SAIhB,kBAAC,GAAD,CAAehR,MAAO+R,IAE1B,OACE,kBAACtB,GAAD,KACE,kBAACC,GAAD,KAAgBoB,GAChB,yBAAKvC,IAAKoC,GAAiBU,K,oICnH1B,IAAME,GAAOnG,KAAO+F,EAAV,MCAFK,GCOmB,SAAC7F,GAAW,IACpC3M,EAAU2M,EAAV3M,MADmC,EAEXqK,oBAAS,GAFE,mBAEpCoI,EAFoC,KAE1BC,EAF0B,KAI3CxI,qBAAU,WACRwI,GAAY,GAEZ,IAAMxB,EAAYK,YAAW,kBAAMmB,GAAY,KAbxB,KAevB,OAAO,WACLjB,aAAaP,MAEd,CAAClR,IAEJ,IAAM2S,EAAOF,EACT,GACAzS,EAAQ,EACR,eACAA,EAAQ,EACR,iBACA,GAEJ,OAAO,kBAACuS,GAAD,CAAM/E,UAAU,kBAAkBmF,ICmC5BC,GAtCW,SAACjG,GAAW,IAElChP,EAOEgP,EAPFhP,aACAkD,EAME8L,EANF9L,UACAkG,EAKE4F,EALF5F,YACAC,EAIE2F,EAJF3F,oBACA6L,EAGElG,EAHFkG,QACAnD,EAEE/C,EAFF+C,SACApM,EACEqJ,EADFrJ,QAEIwP,EAAmB/L,EAAc,EACjCgM,EAAgB/L,EACI,IAAtBA,OACA1M,EACJ,OACE,kBAAC,GAAD,CAAWuY,QAASA,EAASnD,WAAYA,GACtCpM,EACC,kBAAC,GAAD,MAEA,oCACE,kBAACqM,GAAD,KAAe9R,EAAmBF,IAClC,kBAACiS,GAAD,KACE,kBAAC,GAAD,CAAiB5P,MAAOhC,EAAY6C,GAAY+Q,OAAQ,UAE1D,kBAAC/B,GAAD,CAAgBC,WAAYgD,GAC1B,kBAAC,GAAD,CAAgB9S,MAAOgH,IACvB,kBAAC,GAAD,CAAiBhH,MAAK,OAAE+S,QAAF,IAAEA,OAAF,EAAEA,EAAejS,QAAQ,KAC9CiS,GAAiB,KAEpB,kBAAChD,GAAD,CAAQD,WAAYgD,GAClB,kBAAC,GAAD,CAAiB9S,MAAK,OAAE+G,QAAF,IAAEA,OAAF,EAAEA,EAAajG,QAAQ,SCxD1C8R,GCoDAnT,aAtCS,SACtBrH,EACAuU,GACgB,IACRhP,EAAiBgP,EAAjBhP,aACFwQ,EAAuBjK,GAAwB9L,GAC/CoI,EAASgO,GAAUpW,EAAVoW,CAAiB7Q,GAE1ByF,EAAiBX,GAAkBrK,EAAlBqK,CAAyB,SAAU,CACxDtC,OAAO,IAAD,OAAMxC,KAER2F,EACsB,qBAAnBF,GAEHD,GAAuB/K,EAAvB+K,CAA8BC,GAEpC,MAAO,CACLvC,UAAS,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAQK,UACnBlD,eACAqJ,oBAAmB,OAAExG,QAAF,IAAEA,OAAF,EAAEA,EAAQwG,oBAC7BD,YAAW,OAAEvG,QAAF,IAAEA,OAAF,EAAEA,EAAQuG,YACrB2I,SAAUvB,IAAyBxQ,EACnC2F,cAIuB,SACzB0P,EACAC,GACmB,IACXtV,EAAiBsV,EAAjBtV,aAER,MAAO,CACLkV,QAAS,kBACPG,EAASzV,EAAiBC,mBAAmB,CAAEG,sBAItC8B,CAA6CmT,ICX7CM,GAjCY,SAACvG,GAAW,IAC7B7P,EAA6C6P,EAA7C7P,cAAe8R,EAA8BjC,EAA9BiC,0BADa,EAEFvE,mBAA0B,QAFxB,mBAE7BmG,EAF6B,KAElB2C,EAFkB,KAG9BC,EAAoC/D,GACxCT,GAaF,OAVA1E,qBAAU,WAMRiJ,GAJGC,GAAqC,IACrCxE,GAA6B,GAC1B,QACA,UAGL,CAACA,IAGF,kBAAC,GAAD,CAAWpB,UAAU,WAClB1Q,EAAcoD,KAAI,SAACvC,EAAcoR,GAAf,OACjB,kBAACiB,GAAD,CACEjB,MAAOA,EACPkB,UAAWnT,EAAcgF,OACzBmB,IAAKtF,EACL6S,UAAWA,GAEX,kBAAC,GAAD,CAAQ7S,aAAcA,UClCjBuV,GCeAzT,aAZS,SAACrH,GAA6B,IAAD,EAI/CsW,GAA8BtW,GAElC,MAAO,CACL0E,cAPiD,EAEjDA,cAMA8R,0BARiD,EAGjDA,6BASWnP,CAAyByT,I,0LCfjC,IAAM/G,GAAYC,KAAOC,IAAV,MCCrBgH,SAA2B,CAC1BC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,MAAO,CACLC,gBAAiB,CACfC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,EAAG,cAIVC,MAAO,CACLC,OAAQ,CACNC,MAAO,CACLrG,MAAO,YAGXsG,UAAW,UACXC,mBAAoB,UACpBC,UAAW,UACXnT,MAAO,CACLgT,MAAO,CACLrG,MAAO,aAIbyG,MAAO,CACLC,cAAe7I,GAAQW,OACvB4H,OAAQ,CACNC,MAAO,CACLrG,MAAO,YAGXsG,UAAW,UACXC,mBAAoB,UACpBC,UAAW,UACXG,UAAW,EACXtT,MAAO,CACLgT,MAAO,CACLrG,MAAO,aAIb4G,QAAS,CACPC,YAAahJ,GAAQW,OACrByH,gBAAiB,sBACjBI,MAAO,CACLrG,MAAOnC,GAAQQ,QAGnByI,YAAa,CACXC,OAAQ,CACNC,WAAY,CACVhH,MAAO,UACPqG,MAAO,CACLY,SAAU,SAGdC,OAAQ,CACNZ,UAAW,SAGfa,QAAS,CACPC,UAAW,WAEbC,YAAa,CACXf,UAAW,SAEbgB,SAAU,CACRtH,MAAO,UAGXuH,OAAQ,CACNtB,gBAAiB,qBACjBuB,UAAW,CACTxH,MAAO,WAETyH,eAAgB,CACdzH,MAAO,QAET0H,gBAAiB,CACf1H,MAAO,WAET3M,MAAO,CACLgT,MAAO,CACLrG,MAAO,aAIb2H,QAAS,CACPtB,MAAO,CACLrG,MAAO,SAGXoG,OAAQ,CACNC,MAAO,CACLrG,MAAO,YAGX4H,UAAW,CACTC,qBAAsB,CACpB7H,MAAO,WAET8H,qBAAsB,CACpB9H,MAAO,YAGX+H,WAAY,CACVC,cAAe,CACbC,aAAc,UACdC,MAAO,CACLC,KAAM,aAKZC,cAAe,CACbC,YAAa,CACXF,KAAM,UACNG,OAAQ,UACRjC,MAAO,CACLrG,MAAO,QAETuI,OAAQ,CACNC,MAAO,CACLL,KAAM,UACNG,OAAQ,UACRjC,MAAO,CACLrG,MAAO,UAGXyI,OAAQ,CACNN,KAAM,UACNG,OAAQ,UACRjC,MAAO,CACLrG,MAAO,YAKf0I,oBAAqB,UACrBC,WAAY,CACV1C,gBAAiB,OACjBjG,MAAO,UAET4I,WAAY,CACV5I,MAAO,WAGX6I,UAAW,CACTC,QAAS,CACP7C,gBAAiB,OACjBY,YAAa,QAEfkC,aAAc,OACdC,SAAU,wBACVjC,OAAQ,CACN/G,MAAO,UACPsG,UAAW,WAEbH,MAAO,CACLO,cAAe,YAGnBuC,UAAW,CACTC,mBAAoB,UACpBC,eAAgB,UAChBC,iBAAkB,OAClBC,sBAAuB,UACvBC,kBAAmB,UACnBC,WAAY,OACZC,qBAAsB,UACtBC,iBAAkB,YAItB3D,cAAuBA,UC7KvB,IAwIe4D,GAxIiB,SAACtK,GAAW,IAClC1D,EAAmC0D,EAAnC1D,QAAStL,EAA0BgP,EAA1BhP,aAAc2F,EAAYqJ,EAAZrJ,QADU,EAEP+G,oBAAS,GAFF,mBAElC6M,EAFkC,KAEvBC,EAFuB,OAGD9M,mBAA6B,CACnEU,KAAM,CACJqM,QAAQ,GAEVpD,MAAO,CACL,CACEL,OAAQ,CACN0D,MAAO,QACPlR,GAAI,GAENvF,MAAO,CACL0W,KAAM,QAERC,OAAQ,MACRC,UAAW,EACXC,OAAQ,CACNC,SAAS,IAGb,CACE/D,OAAQ,CACN0D,MAAO,QACPlR,GAAI,GAENvF,MAAO,CACL0W,KAAM,UAERK,IAAK,MACLJ,OAAQ,MACRK,OAAQ,EACRJ,UAAW,IAGflD,OAAQ,CACN,CACExc,KAAM,cACNoC,KAAM,IAER,CACEpC,KAAM,SACN+f,KAAM,SACN3d,KAAM,GACN8Z,MAAO,IAGX2B,cAAe,CACbmC,SAAU,EACVC,QAAS,CACP,CACEjgB,KAAM,SACNkgB,MAAO,EACPV,KAAM,MAER,CACExf,KAAM,SACNkgB,MAAO,GACPV,KAAM,OAER,CACExf,KAAM,SACNkgB,MAAO,GACPV,KAAM,OAER,CACExf,KAAM,OACNkgB,MAAO,EACPV,KAAM,MAER,CACExf,KAAM,OACNkgB,MAAO,GACPV,KAAM,OAER,CACExf,KAAM,MACNwf,KAAM,WA9E2B,mBAGlCW,EAHkC,KAGpBC,EAHoB,KA2HzC,OAvCAhO,qBAAU,WAGR,GAFAiN,EAAgC,IAAnBlO,EAAQnH,QAEjBmH,EAAQnH,OAAS,EAAG,CACtB,IAAMqW,EAAOlP,EACV/I,KAAI,gBAAG2F,EAAH,EAAGA,UAAcuS,EAAjB,mDACHjS,EAAGN,GACAuS,MAEJlV,MAAK,SAACwC,EAAGC,GAAJ,OAAUD,EAAES,EAAIR,EAAEQ,KACpBkS,EAAUpP,EACb/I,KAAI,kBAA2B,CAA3B,EAAG2F,UAAH,EAAcoB,WAClB/D,MAAK,SAACwC,EAAGC,GAAJ,OAAUD,EAAE,GAAKC,EAAE,MAE3BuS,EAAgB,CACd5D,OAAQ,CACN,CACExc,KAAM,cACN+f,KAAMla,GAAgBE,EAAmBF,GACzCzD,KAAMie,GAER,CACErgB,KAAM,SACNoC,KAAMme,IAGVhE,YAAa,CACXO,YAAa,CACXrH,MAAOnC,GAAQM,SACf4M,QAASlN,GAAQK,UAEnB8M,OAAQ,CACNhL,MAAOnC,GAAQY,iBAKtB,CAAC/C,EAAStL,IAGX,kBAAC,GAAD,CAAW6P,UAAU,iBAClBlK,GAAW,kBAAC,GAAD,MACX4T,GAAa,kBAAC,GAAD,MACd,kBAAC,KAAD,CACEsB,WAAYnF,GACZoF,QAASR,EACTS,gBAAiB,iBCjJVzB,GC2BAxX,aAnBS,SAACrH,GACvB,IAAM+V,EAAuBjK,GAAwB9L,GAC/C6Q,EAAUkF,EACZG,GAAWlW,EAAXkW,CAAkBH,EAAsB,MACxC,GAEE/K,EAAiBX,GAAkBrK,EAAlBqK,CAAyB,WAMhD,MAAO,CACLwG,UACAtL,aAAcwQ,EACd7K,QAP0B,qBAAnBF,GAEHD,GAAuB/K,EAAvB+K,CAA8BC,MASvB3D,CAAyBwX,IC1BlC0B,GAAiB,SAAC3Y,EAAe4Y,GACrC,IAAMC,EAAkBjW,OAAOC,KAAK+V,GACjC1Y,KAAI,SAAC+C,GAAD,MAAS,CAACA,EAAK2V,EAAO3V,IAAMnF,KAAK,QACrCA,KAAK,KAER,MAAM,sHAAN,OAEsE+a,EAFtE,8EAGyD7Y,EAHzD,2BAOW8Y,GAAoB,SAACpO,GAAiC,IAAD,EAC1BA,EAAOxQ,KACvC6e,GAF0D,EACxDC,UACiB,GAFuC,EACvCC,SACiB,IAC1C,OAAON,GAAejO,EAAOwO,eAAgB,CAC3C,mBAAoB9N,GAAQG,eAC5BwN,MAAM,GAAD,OAAKA,EAAL,KACLI,KAAM,WAIGC,GAAoB,SAAC1O,GAAiC,IAAD,EAC1BA,EAAOxQ,KACvC6e,GAF0D,EACxDM,UACiB,GAFuC,EACvCJ,SACiB,IAC1C,OAAON,GAAejO,EAAOwO,eAAgB,CAC3C,mBAAoB9N,GAAQI,eAC5BuN,MAAM,GAAD,OAAKA,EAAL,KACLO,MAAO,W,kKC7BJ,IAAMnN,GAAYC,KAAOC,IAAV,MC+FPkN,GA7ES,SAAC5M,GAAW,IAC1B6M,EAAoB7M,EAApB6M,OAAQlW,EAAYqJ,EAAZrJ,QADiB,EAEH+G,mBAAyB,MAFtB,mBAE1BoP,EAF0B,KAEjBC,EAFiB,KAG3BC,EAAkBvP,GACtBoP,EACA,KAGIzM,EAAuB,CAC3B,CACEC,WAAY,aACZC,MAAO,aACPE,eAAgBxC,GAChBiP,aAAcd,IAEhB,CACE9L,WAAY,YACZC,MAAO,YACPK,UAAW,iBAAO,CAChBC,MAAOnC,GAAQC,MAEjBvT,KAAM,gBACNqV,eAAgB1C,IAElB,CACEuC,WAAY,YACZC,MAAO,YACPK,UAAW,iBAAO,CAChBC,MAAOnC,GAAQE,MAEjB6B,eAAgB1C,IAElB,CACEuC,WAAY,aACZC,MAAO,aACPE,eAAgB,SAACzC,GAAD,OACdC,GAAgB,CAAE3K,MAAOoN,KAAKC,IAAI3C,EAAO1K,UAC3C4Z,aAAcR,KAoBlB,OAhBAlP,qBAAU,WACJuP,GACFA,EAAQ3L,mBAGV,IAAM+L,EAAeC,qBAAS,WACxBL,GACFA,EAAQ3L,qBAvDc,KA6D1B,OAFArE,OAAOsQ,iBAAiB,SAAUF,GAE3B,kBAAMpQ,OAAOuQ,oBAAoB,SAAUH,MACjD,CAACJ,IAGF,kBAAC,GAAD,CAAWjM,UAAU,wBAClBlK,GAAW,kBAAC,GAAD,MACZ,kBAAC,eAAD,CACEyJ,WAAYA,EACZU,QAASkM,EACTjM,kBAAkB,EAClBC,aAAc,SAACzT,GAAD,cAAU,WAACA,EAAKyM,WAAN,aAAC,EAAUf,GAAX,UAAe1L,EAAK2M,WAApB,aAAe,EAAUjB,IAAI9H,KAAK,MAC1D8P,YAAa,SAACxM,GACZsY,EAAWtY,EAAMyM,MAEnBE,uBAAwB,uBACxBC,oBAAqB,CACnBC,qBAAsBvB,QCrF1BuN,GAAe,SAAC7hB,GAAD,OAAsBA,EAAM8Q,MAMpCgR,IAJatd,YAAeqd,IAAc,SAAC/Q,GAAD,OACrDxG,oBAAQ,SAACvC,GAAD,OAAoB+I,EAAK/I,SAGZvD,YAAeqd,IAAc,SAAC/Q,GAAD,OAClDxG,oBAAQ,SAACvC,GACP,IAAMga,EAAUjR,EAAK/I,IAAW,GAE1Bia,EAAOD,EACVza,QAAO,SAACqI,GAAD,OAAWA,EAAMjC,OAAS,KACjC5C,MAAK,SAACwC,EAAGC,GAAJ,OAAUA,EAAE1H,MAAQyH,EAAEzH,SACxBoc,EAAOF,EACVza,QAAO,SAACqI,GAAD,OAAWA,EAAMjC,OAAS,KACjC5C,MAAK,SAACwC,EAAGC,GAAJ,OAAUD,EAAEzH,MAAQ0H,EAAE1H,SAExBqc,EAASlN,KAAKmN,IAAIH,EAAKtY,OAAQuY,EAAKvY,QAOpCmX,EANcmB,EACjBla,KAAI,SAACyG,GAAD,OAASA,EAAIb,UACjBuK,QAAO,SAACC,EAAKkK,GAAN,OAAalK,EAAOkK,IAAI,GACdH,EACjBna,KAAI,SAAC2G,GAAD,OAASuG,KAAKC,IAAIxG,EAAIf,WAC1BuK,QAAO,SAACC,EAAKkK,GAAN,OAAalK,EAAOkK,IAAI,GAG5BjX,EAMA,GAkBN,OAjBAuL,iBAAMwL,GAAQG,SAAQ,SAACC,GACrB,IAAM/T,EAAMyT,EAAKM,GACX7T,EAAMwT,EAAKK,GAEjBnX,EAAOC,KAAK,CACVmD,MACAE,MACAmS,SACErS,IACCpD,EAAOmX,EAAQ,GAAKnX,EAAOmX,EAAQ,GAAG1B,SAAW,GAAKrS,EAAIb,OAC7DuT,SACExS,IACCtD,EAAOmX,EAAQ,GAAKnX,EAAOmX,EAAQ,GAAGrB,SAAW,GAChDjM,KAAKC,IAAIxG,EAAIf,QACjBmT,gBAGG1V,SAILoX,GAAiB,SAACnB,GAAD,OACrBoB,gBAAKpB,EAAOtZ,KAAI,SAAC6H,GAAD,OAAWA,EAAM9J,UAAQiF,MAAK,SAACwC,EAAGC,GAAJ,OAAUD,EAAIC,MAExDkV,GAAe,SAACrB,GACpB,OAAO,SACLsB,EACAC,GAEA,OAAOD,EAAY5a,KAAI,SAACjC,GACtB,IAAM+c,EAAQxB,EACX9Z,QAAO,SAACqI,GAAD,OAAWgT,EAAYhT,EAAO9J,MACrCoS,QAAO,SAACC,EAAKvI,GACZ,OAAQuI,EAAOlD,KAAKC,IAAItF,EAAMjC,UAC7B,GACL,MAAO,CACL7H,QACA+c,cAMKC,GAAWre,YAAeqd,IAAc,SAAC/Q,GAAD,OACnDxG,oBAAQ,SAACvC,GACP,IAAMga,EAAUjR,EAAK/I,IAAW,GAE1Bia,EAAOD,EAAQza,QAAO,SAACqI,GAAD,OAAWA,EAAMjC,OAAS,KAEhDuU,EAAOF,EAAQza,QAAO,SAACqI,GAAD,OAAWA,EAAMjC,OAAS,KAEhDoV,EAAYP,GAAeP,GAC3Be,EAAYR,GAAeN,GAWjC,MAAO,CACLD,KAVeS,GAAaT,EAAbS,CACfK,GACA,SAACnT,EAAOqT,GAAR,OAAuBrT,EAAM9J,OAASmd,KAStCf,KAPeQ,GAAaR,EAAbQ,CACfM,GACA,SAACpT,EAAOqT,GAAR,OAAuBrT,EAAM9J,OAASmd,YChG7B7B,GC0BA9Z,aAlBS,SAACrH,GACvB,IAAM+V,EAAuBjK,GAAwB9L,GAC/CohB,EAASrL,EACX+L,GAAQ9hB,EAAR8hB,CAAe/L,GACf,GAEE/K,EAAiBX,GAAkBrK,EAAlBqK,CAAyB,QAMhD,MAAO,CACL+W,SACAlW,QAN0B,qBAAnBF,GAEHD,GAAuB/K,EAAvB+K,CAA8BC,MAQvB3D,CAAyB8Z,I,6JC1BjC,IAAMpN,GAAYC,KAAOC,IAAV,MCCrBgH,SAA2B,CAC1BC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,MAAO,CACLC,gBAAiB,CACfC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,EAAG,cAIVC,MAAO,CACLC,OAAQ,CACNC,MAAO,CACLrG,MAAO,YAGXsG,UAAW,UACXC,mBAAoB,UACpBC,UAAW,UACXnT,MAAO,CACLgT,MAAO,CACLrG,MAAO,aAIbyG,MAAO,CACLC,cAAe7I,GAAQW,OACvB4H,OAAQ,CACNC,MAAO,CACLrG,MAAO,YAGXsG,UAAW,UACXC,mBAAoB,UACpBC,UAAW,UACXG,UAAW,EACXtT,MAAO,CACLgT,MAAO,CACLrG,MAAO,aAIb4G,QAAS,CACPC,YAAahJ,GAAQW,OACrByH,gBAAiB,sBACjBI,MAAO,CACLrG,MAAOnC,GAAQQ,QAGnByI,YAAa,CACXC,OAAQ,CACNC,WAAY,CACVhH,MAAO,UACPqG,MAAO,CACLY,SAAU,SAGdC,OAAQ,CACNZ,UAAW,SAGfa,QAAS,CACPC,UAAW,WAEbC,YAAa,CACXf,UAAW,SAEbgB,SAAU,CACRtH,MAAO,UAGXuH,OAAQ,CACNtB,gBAAiB,qBACjBuB,UAAW,CACTxH,MAAO,WAETyH,eAAgB,CACdzH,MAAO,QAET0H,gBAAiB,CACf1H,MAAO,WAET3M,MAAO,CACLgT,MAAO,CACLrG,MAAO,aAIb2H,QAAS,CACPtB,MAAO,CACLrG,MAAO,SAGXoG,OAAQ,CACNC,MAAO,CACLrG,MAAO,YAGX4H,UAAW,CACTC,qBAAsB,CACpB7H,MAAO,WAET8H,qBAAsB,CACpB9H,MAAO,YAGX+H,WAAY,CACVC,cAAe,CACbC,aAAc,UACdC,MAAO,CACLC,KAAM,aAKZC,cAAe,CACbC,YAAa,CACXF,KAAM,UACNG,OAAQ,UACRjC,MAAO,CACLrG,MAAO,QAETuI,OAAQ,CACNC,MAAO,CACLL,KAAM,UACNG,OAAQ,UACRjC,MAAO,CACLrG,MAAO,UAGXyI,OAAQ,CACNN,KAAM,UACNG,OAAQ,UACRjC,MAAO,CACLrG,MAAO,YAKf0I,oBAAqB,UACrBC,WAAY,CACV1C,gBAAiB,OACjBjG,MAAO,UAET4I,WAAY,CACV5I,MAAO,WAGX6I,UAAW,CACTC,QAAS,CACP7C,gBAAiB,OACjBY,YAAa,QAEfkC,aAAc,OACdC,SAAU,wBACVjC,OAAQ,CACN/G,MAAO,UACPsG,UAAW,WAEbH,MAAO,CACLO,cAAe,YAGnBuC,UAAW,CACTC,mBAAoB,UACpBC,eAAgB,UAChBC,iBAAkB,OAClBC,sBAAuB,UACvBC,kBAAmB,UACnBC,WAAY,OACZC,qBAAsB,UACtBC,iBAAkB,YAItB3D,cAAuBA,UC1KvB,IAmGegI,GAnGe,SAAC1O,GAAW,IAChCqO,EAAmBrO,EAAnBqO,MAAO1X,EAAYqJ,EAAZrJ,QACTgY,EAAiBlR,GAAmB4Q,EAAO,KAFV,EAGL3Q,oBAAS,GAHJ,mBAGhC6M,EAHgC,KAGrBC,EAHqB,OAIC9M,mBAA6B,CACnEkJ,MAAO,CACLzb,KAAM,OACNoU,WAAW,GAEbtL,MAAO,CACL0W,KAAM,IAERxC,OAAQ,CACN4C,SAAS,GAEXpD,OAAQ,CACN,CACEuD,KAAM,OACN/f,KAAM,OACNoC,KAAM,IAER,CACE2d,KAAM,OACN/f,KAAM,OACNoC,KAAM,KAGVwZ,MAAO,CACLC,OAAQ,CACN4H,cAAc,IAGlBvH,MAAO,CACLpT,MAAO,CACL0W,KAAM,IAER3D,OAAQ,CACN+D,SAAS,IAGbrD,YAAa,CACXmH,KAAM,CACJ/G,OAAQ,CACNiD,SAAS,EACT5B,OAAQ,CACNC,MAAO,CACL2B,SAAS,SA9CkB,mBAIhCO,EAJgC,KAIlBC,EAJkB,KAsFvC,OAhCAhO,qBAAU,WAAO,IACPkQ,EAAekB,EAAflB,KAAMC,EAASiB,EAATjB,KAEdlD,EAA6B,IAAhBiD,EAAKtY,QAAgC,IAAhBuY,EAAKvY,QAEvCoW,EAAgB,CACdxE,MAAO,CACL+H,WAAY,uBAAIrB,GAAJ,aAAaC,IAAMna,KAAI,SAAC6H,GAAD,OAAWA,EAAM9J,MAAM2M,cAC1D+I,OAAQ,CACN+H,KAAM,EACNC,UAAW,WACT,OAAO7Y,OAAO8Y,WAAWxgB,KAAK4E,MAAM4K,YAAY9J,QAAQ,MAI9DwT,OAAQ,CACN,CACEuD,KAAM,OACN/f,KAAM,OACNoC,KAAK,GAAD,oBAAMkgB,EAAKla,KAAI,SAACyG,GAAD,OAASA,EAAIqU,UAA5B,aAAuCX,EAAKna,KAAI,kBAAM,UAC1DqN,MAAOnC,GAAQC,KAEjB,CACEwM,KAAM,OACN/f,KAAM,OACNoC,KAAK,GAAD,oBAAMkgB,EAAKla,KAAI,kBAAM,SAArB,aAA+Bma,EAAKna,KAAI,SAAC2G,GAAD,OAASA,EAAImU,WACzDzN,MAAOnC,GAAQE,UAIpB,CAACgQ,IAGF,kBAAC,GAAD,KACGhY,GAAW,kBAAC,GAAD,MACX4T,GAAa,kBAAC,GAAD,MACd,kBAAC,KAAD,CACEsB,WAAYnF,GACZoF,QAASR,EACTS,gBAAiB,YC/GV2C,GC0BA5b,aAlBS,SAACrH,GACvB,IAAM+V,EAAuBjK,GAAwB9L,GAC/C4iB,EAAQ7M,EACV8M,GAAS7iB,EAAT6iB,CAAgB9M,GAChB,CAAEiM,KAAM,GAAIC,KAAM,IAEhBjX,EAAiBX,GAAkBrK,EAAlBqK,CAAyB,QAMhD,MAAO,CACLuY,QACA1X,QAN0B,qBAAnBF,GAEHD,GAAuB/K,EAAvB+K,CAA8BC,MAQvB3D,CAAyB4b,I,kNC1BjC,IAAMlP,GAAYC,KAAOC,IAAV,M,yFCAf,IAAMwP,GAAezP,KAAO0P,IAAV,MCAVC,GCQc,SAACpP,GAAW,IAC/BqC,EAAoCrC,EAApCqC,OAD8B,EACMrC,EAA5BoM,aADsB,MACd,GADc,IACMpM,EAAhB4K,cADU,MACD,GADC,EAEhCyE,EAAOhN,EAAOlN,OAAS,EACvBma,EAAW7O,KAAK8E,IAAL,MAAA9E,KAAI,aAAQ4B,IAEvBkN,EADW9O,KAAKmN,IAAL,MAAAnN,KAAI,aAAQ4B,IACLiN,EAElBE,EAAU,SAAChW,GAAD,OAAgBA,EAAI6V,EAAQjD,GAEtCqD,EAAU,SAACC,GAAD,OAAe9E,GAAW8E,EAAIJ,GAAY1E,EAAU2E,GAEpE,GAAsB,IAAlBlN,EAAOlN,OACT,OAAO,8BAGT,IAAIwa,EAAK,YAAQH,EAAQ,GAAhB,YAAsBC,EAAQpN,EAAO,IAArC,KAQT,OAPAsN,GAAStN,EAAO9O,KAAI,SAACF,EAAOmS,GAC1B,IAAMhM,EAAIgW,EAAQhK,GACZkK,EAAID,EAAQpc,GAElB,MAAM,MAAN,OAAamG,EAAb,aAAmBkW,EAAnB,QAIA,kBAACR,GAAD,CAAcU,QAAO,cAASxD,EAAT,YAAkBxB,IACrC,0BAAMiF,EAAGF,EAAO1I,MAAO,CAAEiC,OAAQzK,GAAQY,e,6FCjCxC,IAAMG,GAAYC,KAAOC,IAAV,MCgBPoQ,GAVuB,SAAC9P,GAAW,IACjCyC,EAAWzC,EAAlB3M,MAER,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAWgP,OAAQI,M,kBCXVsC,MCgCAgL,G,oDAtBb,WAAY/P,GAAe,IAAD,8BACxB,cAAMA,IAEDvU,MAAQ,CACX8gB,eAAgBvM,EAAMuM,gBAJA,E,oDAQlBxO,GAKN,OAJAtP,KAAKuhB,SAAS,CACZzD,eAAgBxO,EAAOwO,kBAGlB,I,+BAGC,IACAA,EAAmB9d,KAAKhD,MAAxB8gB,eACR,OAAO,kBAAC,GAAD,CAAiBlZ,MAAOkZ,Q,GAnBP0D,aCyGbC,GAzFW,SAAClQ,GAAW,IAC5BuC,EAA2CvC,EAA3CuC,QAASf,EAAkCxB,EAAlCwB,qBAAsB0E,EAAYlG,EAAZkG,QADJ,EAELxI,qBAFK,mBAE5BoP,EAF4B,KAEnBC,EAFmB,KAI7B3M,EAAuB,CAC3B,CACEC,WAAY,MACZC,MAAO,eACPE,eAAgB,SAACzC,GAAD,OAAY7M,EAAmB6M,EAAO1K,SAExD,CACEgN,WAAY,YACZC,MAAO,MACPK,UAAW,iBAAO,CAChBC,MAAOnC,GAAQC,IACfyR,QAAS,OACT,kBAAmB,aAErBhlB,KAAM,gBACNqV,eAAgB1C,GAChBmP,aAAc,iBAEhB,CACE5M,WAAY,YACZC,MAAO,MACPK,UAAW,iBAAO,CAChBC,MAAOnC,GAAQE,MAEjB6B,eAAgB1C,GAChBmP,aAAc,iBAEhB,CACE5M,WAAY,SACZC,MAAO,SACPE,eAAgBtC,IAElB,CACEmC,WAAY,GACZC,MAAO,SACP2M,aAAc,qBACdb,MAAO,IACPzL,UAAW,iBAAO,CAChB,eAAgB,EAChB,gBAAiB,MAmBvB,OATApD,qBAAU,WACJuP,IACFA,EAAQsD,aAAY,SAAUC,GAC5BA,EAAKC,YAAYD,EAAK9iB,KAAKyD,eAAiBwQ,MAE9CsL,EAAQyD,gBAET,CAACzD,EAAStL,IAGX,kBAAC,GAAD,CAAWX,UAAU,wBACnB,kBAAC,eAAD,CACET,WAAYA,EACZU,QAASyB,EACTiO,cAnBgB,CACpB,eAAgB,SAACzS,GAAD,OAAiBA,EAAOsS,KAAKI,cAC7C,YAAa,SAAC1S,GAAD,OAAiBA,EAAOxQ,KAAKoJ,UAkBtCoK,kBAAkB,EAClBC,aAAc,SAACzT,GAAD,OAAUA,EAAKyD,cAC7BiQ,YAAa,SAACxM,GACZsY,EAAWtY,EAAMyM,KACjBzM,EAAMyM,IAAIC,oBAEZuP,aAAc,SACdC,aAAc,SAAClc,GACbyR,EAAQzR,EAAMlH,KAAKyD,eAErBoQ,uBAAwB,uBACxBC,oBAAqB,CACnBuP,mBAAoBd,GACpBe,cAAed,GACfzO,qBAAsBvB,QC3GjBmQ,GCuBApd,aAjBS,SAACrH,GAIvB,MAAO,CACL8W,QAJcD,GAAqB7W,GAKnC+V,qBAJ2BjK,GAAwB9L,OAQ5B,SAAC4a,GAC1B,MAAO,CACLH,QAAS,SAAClV,GAAD,OACPqV,EAASzV,EAAiBC,mBAAmB,CAAEG,sBAItC8B,CAA6Cod,I,icCtBrD,IAAM1Q,GAAYC,KAAOC,IAAV,MAUToR,GAASrR,KAAOC,IAAV,KAERjB,GAAQU,OAIN4R,GAAOtR,KAAOC,IAAV,MCjBFsR,GCMW,SAAChR,GAAW,IAC5BiR,EAAoBjR,EAApBiR,SAAUhd,EAAU+L,EAAV/L,MAElB,OACE,kBAAC,GAAD,KACE,kBAAC6c,GAAD,KAAS7c,GACT,kBAAC8c,GAAD,KAAOE,K,qNCXN,IAAMzR,GAAYC,KAAOC,IAAV,KAEXjB,GAAQQ,MAKRR,GAAQY,WCRJ6R,GCGa,WAAO,IAAD,EACNxT,qBADM,mBACzByG,EADyB,KAClBgN,EADkB,KAsBhC,OApBA5T,qBAAU,WACR,IAAIgH,OAAgC5W,EAC9ByjB,EAAaC,aAAY,WAC7B,IAAMjT,EAAO7F,KAAKC,MACd+L,GACFO,aAAaP,GAEfA,EAAYK,YAAW,WACrBuM,EAAS5Y,KAAKC,MAAQ4F,QAZE,KAgB5B,OAAO,WACLkT,cAAcF,GACV7M,GACFO,aAAaP,MAGhB,IAGD,kBAAC,GAAD,KACE,8CACA,8BAAOJ,GAAS,MAAhB,QCzBOoN,GAAathB,aAFV,SAACxE,GAAD,OAAsBA,EAAM+Q,QAEM,SAACA,GAAD,OAAUA,EAAK/D,W,iMCF1D,IAAM+G,GAAYC,KAAOC,IAAV,KACXjB,GAAQQ,MAKRR,GAAQY,WCQJmS,GAVY,SAACxR,GAAW,IAC7BvH,EAAYuH,EAAZvH,QACR,OACE,kBAAC,GAAD,KACE,8CACA,8BAAOA,GAAW,MAAlB,QCVS+Y,GCWA1e,aARS,SAACrH,GAGvB,MAAO,CACLgN,QAHc8Y,GAAW9lB,MAOdqH,CAAyB0e,I,sqBCVjC,IAAMhS,GAAYC,KAAOC,IAAV,MAGL,gBAAG0M,EAAH,EAAGA,MAAH,gBAAkBA,EAAlB,SAKJqF,GAAOhS,KAAOC,IAAV,MAOF,gBAAG0M,EAAH,EAAGA,MAAH,4BAA8BA,EAAQ,EAAtC,UAGFsF,GAAOjS,KAAOC,IAAV,KAMKjB,GAAQS,iBAGjByS,GAAYlS,aAAOiS,GAAPjS,CAAH,MACP,gBAAG2M,EAAH,EAAGA,MAAH,yCAA2CA,EAAQ,EAAnD,UAGFwF,GAAYnS,aAAOiS,GAAPjS,CAAH,MACP,gBAAG2M,EAAH,EAAGA,MAAH,0CAA4CA,EAAQ,EAApD,SACO3N,GAAQW,QClCfyS,GCUiB,SAAC7R,GAAW,IAClC8R,EAAsB9R,EAAtB8R,QAASb,EAAajR,EAAbiR,SADwB,EAEfvT,mBAAS,GAFM,mBAElC0O,EAFkC,KAE3B2F,EAF2B,KAGnCC,EAAkBtP,GAAYoP,GAC9BG,EAAgBvP,GAAY0J,GAC5B8F,EAAe5N,sBACf6N,EAAU7N,sBAwDhB,OAtDA/G,qBAAU,WACR,IAAM6U,EAAmB,WACvB,GAAIF,GAAgBA,EAAapP,QAAS,CAAC,IACjCsJ,EAAU8F,EAAapP,QAAQuP,wBAA/BjG,MACRhd,QAAQyD,IAAR,+BAAoCuZ,IAEpC2F,EAAS3F,QAEThd,QAAQC,KAAK,0BAIXijB,EAAqBnF,qBAAS,WAClCtI,sBAAsBuN,KA5BE,KAmC1B,OAJAA,IAEAtV,OAAOsQ,iBAAiB,SAAUkF,GAE3B,WACLxV,OAAOuQ,oBAAoB,SAAUiF,MAEtC,CAACJ,IAEJ3U,qBAAU,WACR,IAAIgC,OAAmC5R,EAmBvC,OAhBIqkB,GAAmBC,IAAkB7F,GACvCvH,uBAAsB,WAAO,IAAD,EAC1BtF,EAAS,UAAG4S,EAAQrP,eAAX,aAAG,EAAiB0B,QAC3B,CACE,CAAEE,UAAU,eAAD,OAAiB0H,EAAQ,EAAzB,QACX,CAAE1H,UAAU,eAAD,OAAiB0H,EAAQ,EAAzB,yBAEb,CACE/H,SAAU,IACVM,WAAY,EACZ4N,OAAQ,gBAMT,WACDhT,GACFA,EAAU/B,YAKb,CAACsU,EAAS1F,IAGX,kBAAC,GAAD,CAAWxJ,IAAKsP,EAAc9F,MAAOA,GACnC,kBAACqF,GAAD,CAAM7O,IAAKuP,EAAS/F,MAAOA,GACxB,kBAACuF,GAAD,CAAWvF,MAAOA,GAAQ6E,GAC1B,kBAACW,GAAD,CAAWxF,MAAOA,IAFrB,QC9DSoG,GAN2B,SAACxS,GAAW,IAC5ChP,EAA2BgP,EAA3BhP,aAAcigB,EAAajR,EAAbiR,SAEtB,OAAO,kBAAC,GAAD,CAAca,QAAS9gB,GAAeigB,ICThCuB,GCWA1f,aARS,SAACrH,GAGvB,MAAO,CACLuF,aAH2BuG,GAAwB9L,MAOxCqH,CAAyB0f,I,8yECVjC,IAAMhT,GAAYC,KAAOC,IAAV,KACAjB,GAAQS,iBAMjB4E,GAAUrE,KAAOC,IAAV,MAkDPoR,GAASrR,KAAOC,IAAV,KAERjB,GAAQQ,OAONwT,GAAehT,KAAOC,IAAV,MAOZgT,GAAcjT,KAAOC,IAAV,MAIXiT,GAAclT,KAAOC,IAAV,MAIXkT,GAAenT,KAAOC,IAAV,MAIZmT,GAAYpT,KAAOC,IAAV,MAIToT,GAAarT,KAAOC,IAAV,MAIVqT,GAAStT,KAAOC,IAAV,M,qBCXJsT,OAvDf,WACE,IAAM5lB,E7EKO,WACb,IAAMA,EAAQ6lB,YACZ9W,GACAU,GAAiBqW,YAAgBtW,GAAcF,MAkBjD,OAfAvP,GAAWyC,WAAU,WACnBxC,EAAMiZ,SACJxa,EAAiBK,uBAAuBlB,EAAiBgI,YAE3D5D,QAAQyD,IAAI,gBAEd1F,GAAW4C,SAAQ,WACjB3C,EAAMiZ,SACJxa,EAAiBK,uBAAuBlB,EAAiBqK,eAE3DjG,QAAQyD,IAAI,mBAGd6J,GAAeyW,IAAI1X,IAEZrO,E6E1BOgmB,GAOd,OALA7V,qBAAU,WACRnQ,EAAMiZ,SAASjU,EAAWC,kBAEzB,IAGD,kBAAC,IAAD,CAAUjF,MAAOA,GACf,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,sBACA,kBAACqlB,GAAD,KACE,kBAAC,GAAD,OAEF,kBAACC,GAAD,KACE,kBAAC,GAAD,CAAQze,MAAO,UACb,kBAAC,GAAD,QAGJ,kBAAC0e,GAAD,KACE,kBAAC,GAAD,CAAQ1e,MAAO,UACb,kBAAC,GAAD,KACE,kBAAC,GAAD,SAIN,kBAAC2e,GAAD,KACE,kBAAC,GAAD,OAEF,kBAACC,GAAD,KACE,kBAAC,GAAD,CAAQ5e,MAAO,QACb,kBAAC,GAAD,KACE,kBAAC,GAAD,SAIN,kBAAC6e,GAAD,KACE,kBAAC,GAAD,CAAQ7e,MAAO,SACb,kBAAC,GAAD,KACE,kBAAC,GAAD,SAIN,kBAAC8e,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,WCjEQrc,QACW,cAA7BoG,OAAOuW,SAASC,UAEe,UAA7BxW,OAAOuW,SAASC,UAEhBxW,OAAOuW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF1f,SAAS2f,eAAe,SD8HpB,kBAAmBlK,WACrBA,UAAUmK,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACnlB,GACNM,QAAQN,MAAMA,EAAMG,a","file":"static/js/main.ec89e9ba.chunk.js","sourcesContent":["export enum ConnectionStatus {\n  Unknown,\n  Connected,\n  Disconnected,\n}\n","import { createAction, ActionUnion } from \"modules/redux/utils\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\nimport {\n  TradesChannel,\n  CandlesChannel,\n  TickerChannel,\n  BookChannel,\n} from \"./types/Channels\";\n\nexport enum TRANSPORT_ACTION_TYPES {\n  SEND_MESSAGE = \"TRANSPORT/SEND_MESSAGE\",\n  RECEIVE_MESSAGE = \"TRANSPORT/RECEIVE_MESSAGE\",\n  CHANGE_CONNECTION_STATUS = \"TRANSPORT/CHANGE_CONNECTION_STATUS\",\n  SUBSCRIBE_TO_CHANNEL = \"TRANSPORT/SUBSCRIBE_TO_CHANNEL\",\n  SUBSCRIBE_TO_CHANNEL_ACK = \"TRANSPORT/SUBSCRIBE_TO_CHANNEL_ACK\",\n  SUBSCRIBE_TO_CHANNEL_NACK = \"TRANSPORT/SUBSCRIBE_TO_CHANNEL_NACK\",\n  UNSUBSCRIBE_FROM_CHANNEL = \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL\",\n  UNSUBSCRIBE_FROM_CHANNEL_ACK = \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL_ACK\",\n  UNSUBSCRIBE_FROM_CHANNEL_NACK = \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL_NACK\",\n  STALE_SUBSCRIPTION = \"TRANSPORT/STALE_SUBSCRIPTION\",\n}\n\ninterface SubscribeToTrades {\n  channel: TradesChannel;\n  symbol: string;\n}\n\ninterface SubscribeToCandles {\n  channel: CandlesChannel;\n  key: string;\n}\n\ninterface SubscribeToTicker {\n  channel: TickerChannel;\n  symbol: string;\n}\n\ninterface SubscribeToBook {\n  channel: BookChannel;\n  symbol: string;\n  prec?: string;\n}\n\nexport type SubscribeToChannelActionPayload =\n  | SubscribeToTrades\n  | SubscribeToCandles\n  | SubscribeToTicker\n  | SubscribeToBook;\n\nexport interface SubscribeToChannelAckActionPayload {\n  channel: string;\n  channelId: number;\n  request: any;\n}\n\nexport interface SubscribeToChannelNackActionPayload {\n  error: string;\n}\n\nexport interface ReceiveMessageActionMeta {\n  channel: string;\n  request?: any;\n}\n\nexport interface UnsubscribeFromChannelActionPayload {\n  channelId: number;\n}\n\nexport interface UnsubscribeFromChannelAckActionPayload {\n  channelId: number;\n}\n\nexport interface StaleSubscriptionActionPayload {\n  channelId: number;\n}\n\nexport const TransportActions = {\n  sendMessage: createAction<TRANSPORT_ACTION_TYPES.SEND_MESSAGE, any>(\n    TRANSPORT_ACTION_TYPES.SEND_MESSAGE\n  ),\n  receiveMessage: createAction<\n    TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE,\n    any,\n    ReceiveMessageActionMeta | undefined\n  >(TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE),\n  changeConnectionStatus: createAction<\n    TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS,\n    ConnectionStatus\n  >(TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS),\n  subscribeToChannel: createAction<\n    TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL,\n    SubscribeToChannelActionPayload\n  >(TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL),\n  subscribeToChannelAck: createAction<\n    TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK,\n    SubscribeToChannelAckActionPayload\n  >(TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK),\n  subscribeToChannelNack: createAction<\n    TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_NACK,\n    SubscribeToChannelNackActionPayload\n  >(TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_NACK),\n  unsubscribeFromChannel: createAction<\n    TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL,\n    UnsubscribeFromChannelActionPayload\n  >(TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL),\n  unsubscribeFromChannelAck: createAction<\n    TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_ACK,\n    UnsubscribeFromChannelAckActionPayload\n  >(TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_ACK),\n  unsubscribeFromChannelNack: createAction<\n    TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_NACK\n  >(TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_NACK),\n  staleSubscription: createAction<\n    TRANSPORT_ACTION_TYPES.STALE_SUBSCRIPTION,\n    StaleSubscriptionActionPayload\n  >(TRANSPORT_ACTION_TYPES.STALE_SUBSCRIPTION),\n};\n\nexport type TransportActions = ActionUnion<typeof TransportActions>;\nexport type ReceiveMessage = ReturnType<typeof TransportActions.receiveMessage>;\nexport type SendMessage = ReturnType<typeof TransportActions.sendMessage>;\nexport type ChangeConnectionStatus = ReturnType<\n  typeof TransportActions.changeConnectionStatus\n>;\nexport type SubscribeToChannel = ReturnType<\n  typeof TransportActions.subscribeToChannel\n>;\nexport type SubscribeToChannelAck = ReturnType<\n  typeof TransportActions.subscribeToChannelAck\n>;\nexport type SubscribeToChannelNack = ReturnType<\n  typeof TransportActions.subscribeToChannelNack\n>;\nexport type UnsubscribeFromChannel = ReturnType<\n  typeof TransportActions.unsubscribeFromChannel\n>;\nexport type UnsubscribeFromChannelAck = ReturnType<\n  typeof TransportActions.unsubscribeFromChannelAck\n>;\nexport type UnsubscribeFromChannelNack = ReturnType<\n  typeof TransportActions.unsubscribeFromChannelNack\n>;\nexport type StaleSubscription = ReturnType<\n  typeof TransportActions.staleSubscription\n>;\n","import { ActionCreatorsMapObject } from \"redux\";\n\nexport interface Action<T extends string> {\n  type: T;\n}\n\nexport interface ActionWithPayload<T extends string, P> extends Action<T> {\n  payload: P;\n}\n\nexport interface ActionWithPayloadAndMeta<T extends string, P, M>\n  extends ActionWithPayload<T, P> {\n  meta: M;\n}\n\ntype ActionFn<T extends string> = () => Action<T>;\n\ntype ActionWithPayloadFn<T extends string, P> = (\n  payload: P\n) => ActionWithPayload<T, P>;\n\ntype ActionWithPayloadAndMetaFn<T extends string, P, M> = (\n  payload: P,\n  meta: M\n) => ActionWithPayloadAndMeta<T, P, M>;\n\nexport function createAction<T extends string>(type: T): ActionFn<T>;\n\nexport function createAction<T extends string, P>(\n  type: T\n): ActionWithPayloadFn<T, P>;\n\nexport function createAction<T extends string, P, M>(\n  type: T\n): ActionWithPayloadAndMetaFn<T, P, M>;\n\nexport function createAction(type: string) {\n  return (payload?: any, meta?: any) => {\n    if (typeof payload === \"undefined\") {\n      return { type };\n    }\n    if (typeof meta === \"undefined\") {\n      return {\n        type,\n        payload,\n      };\n    }\n\n    return {\n      type,\n      payload,\n      meta,\n    };\n  };\n}\n\nexport type ActionUnion<A extends ActionCreatorsMapObject> = ReturnType<\n  A[keyof A]\n>;\n\ntype ReducerMap<S, A> = A extends ActionWithPayloadAndMeta<\n  infer T,\n  infer P,\n  infer M\n>\n  ? { [key in T]: (state: S, action: ActionWithPayloadAndMeta<T, P, M>) => S }\n  : A extends ActionWithPayload<infer T, infer P>\n  ? { [key in T]: (state: S, action: ActionWithPayload<T, P>) => S }\n  : A extends Action<infer T>\n  ? { [key in T]: (state: S, action: Action<T>) => S }\n  : never;\n\nexport function createReducer<S, A extends { type: string }>(\n  handlers: ReducerMap<S, A>,\n  initialState: S\n) {\n  return function reducer(state = initialState, action: A): S {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n}\n","import { createAction, ActionUnion } from \"modules/redux/utils\";\n\nexport enum REF_DATA_ACTION_TYPES {\n  LOAD_REF_DATA = \"REF_DATA/LOAD_REF_DATA\",\n  LOAD_REF_DATA_ACK = \"REF_DATA/LOAD_REF_DATA_ACK\",\n  LOAD_REF_DATA_NACK = \"REF_DATA/LOAD_REF_DATA_NACK\",\n}\n\ninterface RefDataLoadAckActionPayload {\n  currencyPairs: string[];\n}\n\nexport const RefDataActions = {\n  loadRefData: createAction<REF_DATA_ACTION_TYPES.LOAD_REF_DATA>(\n    REF_DATA_ACTION_TYPES.LOAD_REF_DATA\n  ),\n  loadRefDataAck: createAction<\n    REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK,\n    RefDataLoadAckActionPayload\n  >(REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK),\n  loadRefDataNack: createAction<REF_DATA_ACTION_TYPES.LOAD_REF_DATA_NACK>(\n    REF_DATA_ACTION_TYPES.LOAD_REF_DATA_NACK\n  ),\n};\n\nexport type RefDataActions = ActionUnion<typeof RefDataActions>;\nexport type LoadRefData = ReturnType<typeof RefDataActions.loadRefData>;\nexport type LoadRefDataAck = ReturnType<typeof RefDataActions.loadRefDataAck>;\nexport type LoadRefDataNack = ReturnType<typeof RefDataActions.loadRefDataNack>;\n","import { Middleware, Dispatch } from \"redux\";\nimport { Actions } from \"modules/root\";\nimport { Connection } from \"./Connection\";\nimport { TransportActions } from \"./actions\";\n\nconst createWsMiddleware = ({\n  connection,\n}: {\n  connection: Connection;\n}): Middleware => {\n  return (store) => (next: Dispatch) => {\n    connection.onReceive((data) => {\n      const parsedData = JSON.parse(data);\n      let meta = undefined;\n      let channelId = undefined;\n\n      if (Array.isArray(parsedData)) {\n        channelId = parsedData[0];\n      } else if (parsedData.hasOwnProperty(\"chanId\")) {\n        channelId = parsedData.chanId;\n      }\n      if (channelId && store.getState().subscriptions[channelId]) {\n        meta = store.getState().subscriptions[channelId];\n      }\n      next(TransportActions.receiveMessage(parsedData, meta));\n    });\n    return (action: Actions) => next(action);\n  };\n};\n\nexport default createWsMiddleware;\n","import { ConnectionProxy } from \"./types/ConnectionProxy\";\n\nexport class WsConnectionProxy implements ConnectionProxy {\n  private socket?: WebSocket;\n  private onConnectFn?: () => void;\n  private onReceivedFn?: (data?: any) => void;\n  private onErrorFn?: (error: any) => void;\n  private onCloseFn?: () => void;\n\n  constructor(private realm: string) {\n    this.socket = undefined;\n    this.onReceivedFn = undefined;\n  }\n\n  start(): void {\n    this.socket = new WebSocket(this.realm);\n    this.socket.onopen = () => this.onConnectFn && this.onConnectFn();\n    this.socket.onmessage = ({ data }) => {\n      this.onReceivedFn && this.onReceivedFn(data);\n    };\n    this.socket.onerror = (error) => this.onErrorFn && this.onErrorFn(error);\n    this.socket.onclose = () => this.onCloseFn && this.onCloseFn();\n  }\n\n  stop(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  send(message: any): void {\n    if (this.socket) {\n      if (this.socket.readyState !== this.socket.OPEN) {\n        console.warn(\n          `Fail to send message as WS is in ${this.socket.readyState} state`\n        );\n      } else {\n        this.socket.send(message);\n      }\n    }\n  }\n\n  onConnect(callback: () => void): void {\n    this.onConnectFn = callback;\n  }\n\n  onReceived(callback: (data: any) => void): void {\n    this.onReceivedFn = callback;\n  }\n\n  onError(callback: (error: any) => void): void {\n    this.onErrorFn = callback;\n  }\n\n  onClose(callback: () => void): void {\n    this.onCloseFn = callback;\n  }\n}\n","import { ConnectionProxy } from \"./types/ConnectionProxy\";\n\nexport class Connection {\n  constructor(private connectionProxy: ConnectionProxy) {}\n\n  connect() {\n    this.connectionProxy.start();\n  }\n\n  disconnect() {\n    this.connectionProxy.stop();\n  }\n\n  send(message: any): void {\n    this.connectionProxy.send(message);\n  }\n\n  onConnect(callback: () => void) {\n    this.connectionProxy.onConnect(callback);\n  }\n\n  onReceive(callback: (data: any) => void) {\n    this.connectionProxy.onReceived(callback);\n  }\n\n  onError(callback: (data: any) => void) {\n    this.connectionProxy.onError(callback);\n  }\n\n  onClose(callback: () => void) {\n    this.connectionProxy.onClose(callback);\n  }\n}\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst refDataSelector = (state: RootState) => state.refData;\n\nexport const getCurrencyPairs = createSelector(\n  refDataSelector,\n  (refData) => refData.currencyPairs\n);\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum SELECTION_ACTION_TYPES {\n  SELECT_CURRENCY_PAIR = \"SELECTION/SELECT_CURRENCY_PAIR\",\n}\n\nexport interface SelectCurrencyPairActionPayload {\n  currencyPair: string;\n}\n\nexport const SelectionActions = {\n  selectCurrencyPair: createAction<\n    SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR,\n    SelectCurrencyPairActionPayload\n  >(SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR),\n};\n\nexport type SelectionActions = ActionUnion<typeof SelectionActions>;\nexport type SelectCurrencyPair = ReturnType<\n  typeof SelectionActions.selectCurrencyPair\n>;\n","import { DateTime } from \"luxon\";\nimport numeral from \"numeral\";\nexport type Base = string;\nexport type Counter = string;\n\nexport function parseCurrencyPair(currencyPair: string): [Base, Counter] {\n  if (typeof currencyPair === \"undefined\") {\n    return [\"\", \"\"];\n  }\n  const base = currencyPair.slice(0, 3);\n  const counter = currencyPair.slice(3);\n  return [base, counter];\n}\n\nexport function formatCurrencyPair(currencyPair: string): string {\n  const [base, counter] = parseCurrencyPair(currencyPair);\n  return [base, counter].join(\" / \");\n}\n\nexport const formatPrice = (price: number | string | undefined) =>\n  numeral(price).format(\"0,0.00\");\n\nexport const formatAmount = (amount: number | string | undefined) =>\n  amount ? amount.toString() : \"\";\n\nexport const formatVolume = (volume: number) =>\n  numeral(volume).format(\"0.00 a\");\n\nexport const formatTime = (time: number) =>\n  DateTime.fromMillis(time).toLocaleString(DateTime.TIME_24_WITH_SECONDS);\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum TICKER_ACTION_TYPES {\n  SUBSCRIBE_TO_TICKER = \"TICKER/SUBSCRIBE_TO_TICKER\",\n}\n\nexport interface SubscribeToTickerActionPayload {\n  symbol: string;\n}\n\nexport const TickerActions = {\n  subscribeToTicker: createAction<\n    TICKER_ACTION_TYPES.SUBSCRIBE_TO_TICKER,\n    SubscribeToTickerActionPayload\n  >(TICKER_ACTION_TYPES.SUBSCRIBE_TO_TICKER),\n};\n\nexport type TickerActions = ActionUnion<typeof TickerActions>;\nexport type SubscribeToTicker = ReturnType<\n  typeof TickerActions.subscribeToTicker\n>;\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\ntype Timeframe =\n  | \"1m\"\n  | \"5m\"\n  | \"15m\"\n  | \"30m\"\n  | \"1h\"\n  | \"3h\"\n  | \"6h\"\n  | \"12h\"\n  | \"1D\"\n  | \"7D\"\n  | \"14D\"\n  | \"1M\";\n\nexport enum CANDLES_ACTION_TYPES {\n  SUBSCRIBE_TO_CANDLES = \"CANDLES/SUBSCRIBE_TO_CANDLES\",\n  UNSUBSCRIBE_FROM_CANDLES = \"CANDLES/UNSUBSCRIBE_FROM_CANDLES\",\n}\n\nexport interface SubscribeToCandlesActionPayload {\n  symbol: string;\n  timeframe: Timeframe;\n}\n\nexport interface UnsubscribeFromCandlesActionPayload {\n  symbol: string;\n  timeframe: Timeframe;\n}\n\nexport const CandlesActions = {\n  subscribeToCandles: createAction<\n    CANDLES_ACTION_TYPES.SUBSCRIBE_TO_CANDLES,\n    SubscribeToCandlesActionPayload\n  >(CANDLES_ACTION_TYPES.SUBSCRIBE_TO_CANDLES),\n  unsubscribeFromCandles: createAction<\n    CANDLES_ACTION_TYPES.UNSUBSCRIBE_FROM_CANDLES,\n    UnsubscribeFromCandlesActionPayload\n  >(CANDLES_ACTION_TYPES.UNSUBSCRIBE_FROM_CANDLES),\n};\n\nexport type CandlesActions = ActionUnion<typeof CandlesActions>;\nexport type SubscribeToCandles = ReturnType<\n  typeof CandlesActions.subscribeToCandles\n>;\nexport type UnsubscribeFromCandles = ReturnType<\n  typeof CandlesActions.unsubscribeFromCandles\n>;\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum APP_ACTION_TYPES {\n  BOOTSTRAP_APP = \"APP/BOOTSTRAP_APP\",\n}\n\nexport const AppActions = {\n  bootstrapApp: createAction<APP_ACTION_TYPES.BOOTSTRAP_APP>(\n    APP_ACTION_TYPES.BOOTSTRAP_APP\n  ),\n};\n\nexport type AppActions = ActionUnion<typeof AppActions>;\nexport type BoostrapApp = ReturnType<typeof AppActions.bootstrapApp>;\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum TRADES_ACTION_TYPES {\n  SUBSCRIBE_TO_TRADES = \"TRADES/SUBSCRIBE_TO_TRADES\",\n  UNSUBSCRIBE_FROM_TRADES = \"TRADES/UNSUBSCRIBE_FROM_TRADES\",\n}\n\nexport interface SubscribeToTradesActionPayload {\n  symbol: string;\n}\n\nexport interface UnsubscribeFromTradesActionPayload {\n  symbol: string;\n}\n\nexport const TradesActions = {\n  subscribeToTrades: createAction<\n    TRADES_ACTION_TYPES.SUBSCRIBE_TO_TRADES,\n    SubscribeToTradesActionPayload\n  >(TRADES_ACTION_TYPES.SUBSCRIBE_TO_TRADES),\n  unsubscribeFromTrades: createAction<\n    TRADES_ACTION_TYPES.UNSUBSCRIBE_FROM_TRADES,\n    UnsubscribeFromTradesActionPayload\n  >(TRADES_ACTION_TYPES.UNSUBSCRIBE_FROM_TRADES),\n};\n\nexport type TradesActions = ActionUnion<typeof TradesActions>;\nexport type SubscribeToTrades = ReturnType<\n  typeof TradesActions.subscribeToTrades\n>;\nexport type UnsubscribeFromTrades = ReturnType<\n  typeof TradesActions.unsubscribeFromTrades\n>;\n","import { merge, of, from, EMPTY } from \"rxjs\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport {\n  switchMap,\n  take,\n  mergeMap,\n  filter,\n  map,\n  tap,\n  distinctUntilChanged,\n} from \"rxjs/operators\";\nimport { Actions } from \"modules/root\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { getCurrencyPairs } from \"modules/reference-data/selectors\";\nimport {\n  RefDataActions,\n  REF_DATA_ACTION_TYPES,\n} from \"modules/reference-data/actions\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport {\n  TRANSPORT_ACTION_TYPES,\n  ChangeConnectionStatus,\n} from \"core/transport/actions\";\nimport { parseCurrencyPair } from \"modules/reference-data/utils\";\nimport { TickerActions } from \"modules/ticker/actions\";\nimport { CandlesActions } from \"modules/candles/actions\";\nimport { RootState } from \"./../root\";\nimport { APP_ACTION_TYPES, BoostrapApp } from \"./actions\";\nimport { LoadRefDataAck } from \"./../reference-data/actions\";\nimport {\n  SELECTION_ACTION_TYPES,\n  SelectCurrencyPair,\n} from \"./../selection/actions\";\n\nconst bootstrap: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$,\n  { connection }\n) =>\n  action$.pipe(\n    ofType<Actions, BoostrapApp>(APP_ACTION_TYPES.BOOTSTRAP_APP),\n    switchMap(() => {\n      console.log(\"Bootstrap App\");\n      connection.connect();\n\n      return action$.pipe(\n        ofType<Actions, ChangeConnectionStatus>(\n          TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS\n        ),\n        filter((action) => action.payload === ConnectionStatus.Connected),\n        switchMap(() =>\n          merge(\n            of(RefDataActions.loadRefData()),\n            action$.pipe(\n              ofType<Actions, LoadRefDataAck>(\n                REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK\n              ),\n              take(1),\n              mergeMap(() => {\n                const currencyPairs = getCurrencyPairs(state$.value);\n                const tickerActions = currencyPairs.map((currencyPair) =>\n                  TickerActions.subscribeToTicker({\n                    symbol: currencyPair,\n                  })\n                );\n                const candleActions = currencyPairs.map((currencyPair) =>\n                  CandlesActions.subscribeToCandles({\n                    symbol: currencyPair,\n                    timeframe: \"5m\",\n                  })\n                );\n\n                return merge(\n                  of(\n                    SelectionActions.selectCurrencyPair({\n                      currencyPair: currencyPairs[0],\n                    })\n                  ),\n                  from(tickerActions),\n                  from(candleActions)\n                );\n              })\n            )\n          )\n        )\n      );\n    })\n  );\n\nconst updateTitle: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$\n) =>\n  action$.pipe(\n    ofType<Actions, SelectCurrencyPair>(\n      SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR\n    ),\n    switchMap((action) => {\n      const { currencyPair } = action.payload;\n      const [, counter] = parseCurrencyPair(currencyPair);\n\n      return state$.pipe(\n        map((state) => state.ticker[currencyPair]),\n        distinctUntilChanged(),\n        filter((ticker) => typeof ticker !== \"undefined\"),\n        tap(\n          (ticker) =>\n            (document.title = `(${ticker.lastPrice?.toFixed(\n              2\n            )} ${counter}) Crypto Trader`)\n        ),\n        mergeMap(() => EMPTY)\n      );\n    })\n  );\n\nexport default combineEpics(bootstrap, updateTitle);\n","import { EMPTY, merge, timer } from \"rxjs\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport {\n  filter,\n  mergeMap,\n  catchError,\n  timeout,\n  take,\n  concatMap,\n  map,\n  bufferTime,\n  takeUntil,\n  switchMap,\n  tap,\n} from \"rxjs/operators\";\nimport { of } from \"rxjs/internal/observable/of\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { RootState, Actions } from \"modules/root\";\nimport {\n  TRANSPORT_ACTION_TYPES,\n  SendMessage,\n  ReceiveMessage,\n  TransportActions,\n  SubscribeToChannel,\n  SubscribeToChannelAck,\n  UnsubscribeFromChannel,\n  ChangeConnectionStatus,\n} from \"./actions\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\n\nexport const SUBSCRIPTION_TIMEOUT_IN_MS = 5000;\nexport const HEARTBEAT_TIMEOUT_IN_MS = 20000;\nexport const RECONNECT_AFTER_MS = 1000;\n\nexport const handleSendMessage: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$, { connection }) =>\n  action$.pipe(\n    ofType<Actions, SendMessage>(TRANSPORT_ACTION_TYPES.SEND_MESSAGE),\n    mergeMap((action) => {\n      connection.send(JSON.stringify(action.payload));\n      return EMPTY;\n    })\n  );\n\n/*\n    The Bitfinex WS api appears to have some limitations when it comes to subscriptions.\n    Because requests/responses don't have a correlation id, we can't run concurrent requests safely.\n    Therefore, we queue subscription requests and process them sequencially.\n*/\nexport const handleSubscription: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType<Actions, SubscribeToChannel | UnsubscribeFromChannel>(\n      TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL,\n      TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL\n    ),\n    concatMap((rootAction) => {\n      const isSubscribing =\n        rootAction.type === TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL;\n\n      return merge(\n        action$.pipe(\n          ofType<Actions, ReceiveMessage>(\n            TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE\n          ),\n          filter((action) => {\n            return (\n              (isSubscribing &&\n                action.payload.event === \"subscribed\" &&\n                action.payload.channel ===\n                  (rootAction as SubscribeToChannel).payload.channel) ||\n              (!isSubscribing && action.payload.event === \"unsubscribed\") ||\n              action.payload.event === \"error\"\n            );\n          }),\n          take(1),\n          timeout(SUBSCRIPTION_TIMEOUT_IN_MS),\n          map((receiveMessageAction) => {\n            if (receiveMessageAction.payload.event === \"error\") {\n              return isSubscribing\n                ? TransportActions.subscribeToChannelNack({\n                    error: receiveMessageAction.payload.msg,\n                  })\n                : TransportActions.unsubscribeFromChannelNack();\n            } else {\n              const {\n                channel,\n                chanId: channelId,\n              } = receiveMessageAction.payload;\n\n              return isSubscribing\n                ? TransportActions.subscribeToChannelAck({\n                    channel,\n                    channelId,\n                    request: (rootAction as SubscribeToChannel).payload,\n                  })\n                : TransportActions.unsubscribeFromChannelAck({\n                    channelId,\n                  });\n            }\n          }),\n          catchError(() =>\n            isSubscribing\n              ? of(\n                  TransportActions.subscribeToChannelNack({\n                    error: \"Timeout\",\n                  })\n                )\n              : of(TransportActions.unsubscribeFromChannelNack())\n          )\n        ),\n        isSubscribing\n          ? of(\n              TransportActions.sendMessage({\n                event: \"subscribe\",\n                ...(rootAction as SubscribeToChannel).payload,\n              })\n            )\n          : of(\n              TransportActions.sendMessage({\n                event: \"unsubscribe\",\n                chanId: (rootAction as UnsubscribeFromChannel).payload\n                  .channelId,\n              })\n            )\n      );\n    })\n  );\n};\n\nexport const handleStaleSubscription: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType<Actions, SubscribeToChannelAck>(\n      TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK\n    ),\n    mergeMap((subscribeAction) => {\n      const { channelId } = subscribeAction.payload;\n      return action$.pipe(\n        ofType<Actions, ReceiveMessage>(TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE),\n        filter((action) => action.payload[0] === channelId),\n        map(() => null), // Discard action so we don't use memory unnecessarily\n        bufferTime(HEARTBEAT_TIMEOUT_IN_MS),\n        filter((actions) => actions.length === 0),\n        map(() => TransportActions.staleSubscription({ channelId })),\n        takeUntil(\n          merge(\n            action$.pipe(\n              ofType<Actions, UnsubscribeFromChannel>(\n                TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL\n              ),\n              filter((action) => action.payload.channelId === channelId)\n            ),\n            action$.pipe(\n              ofType<Actions, ChangeConnectionStatus>(\n                TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS\n              ),\n              filter((action) => action.payload === ConnectionStatus.Connected)\n            )\n          )\n        )\n      );\n    })\n  );\n};\n\nexport const handleReconnection: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$, { connection }) => {\n  return action$.pipe(\n    ofType<Actions, ChangeConnectionStatus>(\n      TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS\n    ),\n    filter((action) => action.payload === ConnectionStatus.Disconnected),\n    switchMap(() =>\n      timer(RECONNECT_AFTER_MS).pipe(\n        tap(() => connection.connect()),\n        switchMap(() => EMPTY)\n      )\n    )\n  );\n};\n\nexport default combineEpics(\n  handleSendMessage,\n  handleSubscription,\n  handleStaleSubscription,\n  handleReconnection\n);\n","import { unsubscribeFromBook } from \"./epics\";\nimport { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum BOOK_ACTION_TYPES {\n  SUBSCRIBE_TO_BOOK = \"BOOK/SUBSCRIBE_TO_BOOK\",\n  UNSUBSCRIBE_FROM_BOOK = \"BOOK/UNSUBSCRIBE_FROM_BOOK\",\n}\n\nexport interface SubscribeToBookActionPayload {\n  symbol: string;\n}\n\nexport interface UnsubscribeFromBookActionPayload {\n  symbol: string;\n}\n\nexport const BookActions = {\n  subscribeToBook: createAction<\n    BOOK_ACTION_TYPES.SUBSCRIBE_TO_BOOK,\n    SubscribeToBookActionPayload\n  >(BOOK_ACTION_TYPES.SUBSCRIBE_TO_BOOK),\n  unsubscribeFromBook: createAction<\n    BOOK_ACTION_TYPES.UNSUBSCRIBE_FROM_BOOK,\n    UnsubscribeFromBookActionPayload\n  >(BOOK_ACTION_TYPES.UNSUBSCRIBE_FROM_BOOK),\n};\n\nexport type BookActions = ActionUnion<typeof BookActions>;\nexport type SubscribeToBook = ReturnType<typeof BookActions.subscribeToBook>;\nexport type UnsubscribeFromBook = ReturnType<\n  typeof BookActions.unsubscribeFromBook\n>;\n","import { memoize } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\nimport { Channel } from \"./types/Channels\";\n\nconst subscriptionsSelector = (state: RootState) => state.subscriptions;\n\nexport const getSubscriptions = createSelector(\n  subscriptionsSelector,\n  (subscriptions) => subscriptions\n);\n\nexport const getSubscriptionId = createSelector(\n  getSubscriptions,\n  (subscriptions) =>\n    memoize(\n      (channel: Channel, request: { [key: string]: string } = {}) => {\n        const channelIds = Object.keys(subscriptions).map(Number);\n\n        return channelIds.find((channelId) => {\n          return (\n            subscriptions[channelId].channel === channel &&\n            Object.keys(request).every(\n              (key) => request[key] === subscriptions[channelId].request[key]\n            )\n          );\n        });\n      },\n      (channel: Channel, request: { [key: string]: string } = {}) => {\n        return [\n          channel,\n          ...Object.keys(request)\n            .sort()\n            .map((key) => `${key}=${request[key]}`),\n        ].join(\":\");\n      }\n    )\n);\n\nexport const getIsSubscriptionStale = createSelector(\n  getSubscriptions,\n  (subscriptions) => (subscriptionId: number) =>\n    Boolean((subscriptions[subscriptionId] || {}).isStale)\n);\n","import { UnsubscribeFromTrades } from \"./actions\";\nimport { TradesChannel } from \"core/transport/types/Channels\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { RootState, Actions } from \"modules/root\";\nimport { SubscribeToTrades, TRADES_ACTION_TYPES } from \"modules/trades/actions\";\nimport { Dependencies } from \"./../redux/store\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { from } from \"rxjs\";\n\nexport const subscribeToTrades: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToTrades>(TRADES_ACTION_TYPES.SUBSCRIBE_TO_TRADES),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"trades\" as TradesChannel,\n        symbol: `t${symbol}`,\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromTrades: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType<Actions, UnsubscribeFromTrades>(\n      TRADES_ACTION_TYPES.UNSUBSCRIBE_FROM_TRADES\n    ),\n    mergeMap((action) => {\n      const { symbol } = action.payload;\n      const result: Actions[] = [];\n      const channelId = getSubscriptionId(state$.value)(\"trades\", {\n        symbol: `t${symbol}`,\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find trades subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToTrades, unsubscribeFromTrades);\n","import { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { switchMap, map, catchError } from \"rxjs/operators\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { of } from \"rxjs\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { RootState, Actions } from \"modules/root\";\nimport { REF_DATA_ACTION_TYPES, RefDataActions, LoadRefData } from \"./actions\";\n\nexport const loadRefData: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$\n) =>\n  action$.pipe(\n    ofType<Actions, LoadRefData>(REF_DATA_ACTION_TYPES.LOAD_REF_DATA),\n    switchMap(() => {\n      return fromFetch(\"data/currencyPairs.json\").pipe(\n        switchMap((response) => response.json()),\n        map((result) =>\n          RefDataActions.loadRefDataAck({\n            currencyPairs: result as string[],\n          })\n        ),\n        catchError(() => of(RefDataActions.loadRefDataNack()))\n      );\n    })\n  );\n\nexport default combineEpics(loadRefData);\n","import { map } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { TickerChannel } from \"core/transport/types/Channels\";\nimport { RootState, Actions } from \"modules/root\";\nimport { SubscribeToTicker, TICKER_ACTION_TYPES } from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToTicker: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToTicker>(TICKER_ACTION_TYPES.SUBSCRIBE_TO_TICKER),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"ticker\" as TickerChannel,\n        symbol: `t${symbol}`,\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport default combineEpics(subscribeToTicker);\n","import { from } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { RootState, Actions } from \"modules/root\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { CandlesChannel } from \"core/transport/types/Channels\";\nimport { TransportActions } from \"core/transport/actions\";\nimport {\n  SubscribeToCandles,\n  CANDLES_ACTION_TYPES,\n  UnsubscribeFromCandles,\n} from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToCandles: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToCandles>(\n      CANDLES_ACTION_TYPES.SUBSCRIBE_TO_CANDLES\n    ),\n    map((action) => {\n      const { symbol, timeframe } = action.payload;\n      const msg = {\n        channel: \"candles\" as CandlesChannel,\n        key: [\"trade\", timeframe, `t${symbol}`].join(\":\"),\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromCandles: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType<Actions, UnsubscribeFromCandles>(\n      CANDLES_ACTION_TYPES.UNSUBSCRIBE_FROM_CANDLES\n    ),\n    mergeMap((action) => {\n      const { symbol, timeframe } = action.payload;\n      const result: Actions[] = [];\n\n      const channelId = getSubscriptionId(state$.value)(\"candles\", {\n        key: [\"trade\", timeframe, `t${symbol}`].join(\":\"),\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find candles subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToCandles, unsubscribeFromCandles);\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum PING_ACTION_TYPES {\n  UPDATE_LATENCY = \"PING/UPDATE_LATENCY\",\n}\n\ninterface UpdateLatencyActionPayload {\n  latency: number;\n}\n\nexport const PingActions = {\n  updateLatency: createAction<\n    PING_ACTION_TYPES.UPDATE_LATENCY,\n    UpdateLatencyActionPayload\n  >(PING_ACTION_TYPES.UPDATE_LATENCY),\n};\n\nexport type PingActions = ActionUnion<typeof PingActions>;\nexport type UpdateLatency = ReturnType<typeof PingActions.updateLatency>;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst selectionSelector = (state: RootState) => state.selection;\n\nexport const getSelectedCurrencyPair = createSelector(\n  selectionSelector,\n  (selection) => selection.currencyPair\n);\n","import { from } from \"rxjs\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { switchMap, pairwise, withLatestFrom } from \"rxjs/operators\";\nimport { Actions } from \"modules/root\";\nimport { TradesActions } from \"modules/trades/actions\";\nimport { CandlesActions } from \"modules/candles/actions\";\nimport { BookActions } from \"modules/book/actions\";\nimport { RootState } from \"./../root\";\nimport { Dependencies } from \"./../redux/store\";\nimport { SELECTION_ACTION_TYPES, SelectCurrencyPair } from \"./actions\";\nimport { getSelectedCurrencyPair } from \"./selectors\";\n\nexport const handleSelection: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) => {\n  const statePairs$ = state$.pipe(pairwise());\n  return action$.pipe(\n    ofType<Actions, SelectCurrencyPair>(\n      SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR\n    ),\n    withLatestFrom(statePairs$),\n    switchMap(([action, [oldState, newState]]) => {\n      const oldCurrencyPair = getSelectedCurrencyPair(oldState);\n      const { currencyPair } = action.payload;\n      const unsubscribeActions = [];\n      if (oldCurrencyPair) {\n        unsubscribeActions.push(\n          CandlesActions.unsubscribeFromCandles({\n            symbol: oldCurrencyPair,\n            timeframe: \"1m\",\n          }),\n          TradesActions.unsubscribeFromTrades({ symbol: oldCurrencyPair }),\n          BookActions.unsubscribeFromBook({ symbol: oldCurrencyPair })\n        );\n      }\n\n      const subscribeActions = [\n        CandlesActions.subscribeToCandles({\n          symbol: currencyPair,\n          timeframe: \"1m\",\n        }),\n        TradesActions.subscribeToTrades({ symbol: currencyPair }),\n        BookActions.subscribeToBook({ symbol: currencyPair }),\n      ];\n\n      return from([...unsubscribeActions, ...subscribeActions]);\n    })\n  );\n};\n\nexport default combineEpics(handleSelection);\n","import { from } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { BookChannel } from \"core/transport/types/Channels\";\nimport { RootState, Actions } from \"modules/root\";\nimport {\n  SubscribeToBook,\n  BOOK_ACTION_TYPES,\n  UnsubscribeFromBook,\n} from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToBook: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToBook>(BOOK_ACTION_TYPES.SUBSCRIBE_TO_BOOK),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"book\" as BookChannel,\n        symbol: `t${symbol}`,\n        prec: \"R0\",\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromBook: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType<Actions, UnsubscribeFromBook>(\n      BOOK_ACTION_TYPES.UNSUBSCRIBE_FROM_BOOK\n    ),\n    mergeMap((action) => {\n      const { symbol } = action.payload;\n      const result: Actions[] = [];\n      const channelId = getSubscriptionId(state$.value)(\"book\", {\n        symbol: `t${symbol}`,\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find book subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToBook, unsubscribeFromBook);\n","import { combineEpics, Epic, ofType } from \"redux-observable\";\nimport { interval, merge, of } from \"rxjs\";\nimport { filter, switchMap, map } from \"rxjs/operators\";\nimport { PingActions } from \"./actions\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { Actions, RootState } from \"modules/root\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport { ChangeConnectionStatus } from \"core/transport/actions\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\n\nexport const PING_INTERVAL_IN_MS = 5000;\n\nexport const pingPong: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$\n) =>\n  action$.pipe(\n    ofType<Actions, ChangeConnectionStatus>(\n      TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS\n    ),\n    filter((action) => action.payload === ConnectionStatus.Connected),\n    switchMap(() => {\n      return interval(PING_INTERVAL_IN_MS).pipe(\n        switchMap((cid) => {\n          const pingTimestamp = Date.now();\n          return merge(\n            action$.pipe(\n              ofType<Actions, ReceiveMessage>(\n                TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE\n              ),\n              filter(\n                (action) =>\n                  !Array.isArray(action.payload) &&\n                  action.payload.event === \"pong\" &&\n                  action.payload.cid === cid\n              ),\n              map(() =>\n                PingActions.updateLatency({\n                  latency: Date.now() - pingTimestamp,\n                })\n              )\n            ),\n            of(\n              TransportActions.sendMessage({\n                event: \"ping\",\n                cid,\n              })\n            )\n          );\n        })\n      );\n    })\n  );\n\nexport default combineEpics(pingPong);\n","import { ReceiveMessage } from \"./actions\";\n\nexport function isHeartbeat(action: ReceiveMessage) {\n  return Array.isArray(action.payload) && action.payload[1] === \"hb\";\n}\n\nexport function isSubscriptionMessage(action: ReceiveMessage) {\n  return action.payload.event === \"subscribed\";\n}\n\nexport function isUnsubscriptionMessage(action: ReceiveMessage) {\n  return action.payload.event === \"unsubscribed\";\n}\n\nexport function isErrorMessage(action: ReceiveMessage) {\n  return action.payload.event === \"error\";\n}\n","import { createReducer } from \"modules/redux/utils\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { Actions } from \"./../root\";\nimport { Trade } from \"./types/Trade\";\n\ntype SymbolState = Trade[];\n\nexport const MAX_TRADES = 100;\n\nexport interface TradesState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: TradesState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, trades] = action.payload;\n  return trades\n    .sort((a: number[], b: number[]) => b[1] - a[1])\n    .map(([id, timestamp, amount, price]: number[]) => ({\n      id,\n      timestamp,\n      amount,\n      price,\n    }));\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, , trade] = action.payload;\n  const [id, timestamp, amount, price] = trade;\n  const existingTradeIndex = state.findIndex((x) => x.id === id);\n  const newOrUpdatedTrade = {\n    id,\n    timestamp,\n    amount,\n    price,\n  };\n\n  if (existingTradeIndex >= 0) {\n    const updatedState = state.slice();\n    updatedState.splice(existingTradeIndex, 1, newOrUpdatedTrade);\n    return updatedState;\n  } else {\n    return [newOrUpdatedTrade, ...state];\n  }\n}\n\nconst receiveMessageReducer = (state: TradesState, action: ReceiveMessage) => {\n  if (\n    isHeartbeat(action) ||\n    isSubscriptionMessage(action) ||\n    isErrorMessage(action)\n  ) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n  if (channel === \"trades\") {\n    const { symbol } = request;\n    const currencyPair = symbol.slice(1);\n    if (isUnsubscriptionMessage(action)) {\n      const updatedState = {\n        ...state,\n      };\n      delete updatedState[currencyPair];\n      return updatedState;\n    }\n\n    const symbolReducer = Array.isArray(action.payload[1])\n      ? snapshotReducer\n      : updateReducer;\n    const result = symbolReducer(state[currencyPair], action);\n\n    return {\n      ...state,\n      [currencyPair]: result.slice(0, MAX_TRADES), // only keep the top x trades, so we don't eventually fill up the memory\n    };\n  }\n\n  return state;\n};\n\nexport const tradesReducer = createReducer<TradesState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default tradesReducer;\n","import { isHeartbeat } from \"core/transport/utils\";\nimport { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"modules/root\";\nimport {\n  TRANSPORT_ACTION_TYPES,\n  ReceiveMessage,\n  StaleSubscription,\n  ChangeConnectionStatus,\n} from \"core/transport/actions\";\nimport { SubscribeToChannelAck, UnsubscribeFromChannelAck } from \"./actions\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\n\nexport interface SubscriptionState {\n  [key: number]: { channel: string; request: any; isStale?: boolean };\n}\n\nconst initialState: SubscriptionState = {};\n\nconst subscribeToChannelAckReducer = (\n  state: SubscriptionState,\n  action: SubscribeToChannelAck\n) => {\n  const { request, channel, channelId } = action.payload;\n\n  return {\n    ...state,\n    [channelId]: {\n      channel,\n      request,\n    },\n  };\n};\n\nconst unsubscribeFromChannelAckReducer = (\n  state: SubscriptionState,\n  action: UnsubscribeFromChannelAck\n) => {\n  const { channelId } = action.payload;\n\n  const updatedState = {\n    ...state,\n  };\n  delete updatedState[channelId];\n  return updatedState;\n};\n\nconst receiveMessageReducer = (\n  state: SubscriptionState,\n  action: ReceiveMessage\n) => {\n  if (isHeartbeat(action)) {\n    const [channelId] = action.payload;\n\n    if (!Boolean(state[channelId].isStale)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      [channelId]: {\n        ...state[channelId],\n        isStale: false,\n      },\n    };\n  }\n  return state;\n};\n\nconst staleSubscriptionReducer = (\n  state: SubscriptionState,\n  action: StaleSubscription\n) => {\n  const { channelId } = action.payload;\n\n  return {\n    ...state,\n    [channelId]: {\n      ...state[channelId],\n      isStale: true,\n    },\n  };\n};\n\nconst changeConnectionStatusReducer = (\n  state: SubscriptionState,\n  action: ChangeConnectionStatus\n) => {\n  if (action.payload === ConnectionStatus.Connected) {\n    return initialState;\n  }\n  return state;\n};\n\nexport const subscriptionsReducer = createReducer<SubscriptionState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK]: subscribeToChannelAckReducer,\n    [TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_ACK]: unsubscribeFromChannelAckReducer,\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n    [TRANSPORT_ACTION_TYPES.STALE_SUBSCRIPTION]: staleSubscriptionReducer,\n    [TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS]: changeConnectionStatusReducer,\n  },\n  initialState\n);\n\nexport default subscriptionsReducer;\n","import { Actions } from \"modules/root\";\nimport { REF_DATA_ACTION_TYPES, LoadRefDataAck } from \"./actions\";\nimport { createReducer } from \"modules/redux/utils\";\n\ninterface RefDataState {\n  currencyPairs: string[];\n}\n\nconst initialState: RefDataState = {\n  currencyPairs: [],\n};\n\nconst loadRefDataReducer = (state: RefDataState, action: LoadRefDataAck) => {\n  const { currencyPairs } = action.payload;\n\n  return {\n    ...state,\n    currencyPairs,\n  };\n};\n\nexport const refDataReducer = createReducer<RefDataState, Actions>(\n  {\n    [REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK]: loadRefDataReducer,\n  },\n  initialState\n);\n\nexport default refDataReducer;\n","import { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"./../root\";\nimport { TRANSPORT_ACTION_TYPES, ReceiveMessage } from \"core/transport/actions\";\nimport { isHeartbeat } from \"core/transport/utils\";\nimport { Ticker } from \"./types/Ticker\";\n\nexport interface TickerState {\n  [symbol: string]: Ticker;\n}\n\nconst initialState: TickerState = {};\n\nconst receiveMessageReducer = (state: TickerState, action: ReceiveMessage) => {\n  if (isHeartbeat(action)) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n  if (channel === \"ticker\") {\n    const { symbol } = request;\n    const currencyPair = symbol.slice(1);\n    const [\n      ,\n      [\n        bid,\n        bidSize,\n        ask,\n        askSize,\n        dailyChange,\n        dailyChangeRelative,\n        lastPrice,\n        volume,\n        high,\n        low,\n      ],\n    ] = action.payload;\n\n    return {\n      ...state,\n      [currencyPair]: {\n        currencyPair,\n        bid,\n        bidSize,\n        ask,\n        askSize,\n        dailyChange,\n        dailyChangeRelative,\n        lastPrice,\n        volume,\n        high,\n        low,\n      },\n    };\n  }\n\n  return state;\n};\n\nexport const tickerReducer = createReducer<TickerState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default tickerReducer;\n","export const getLookupKey = (currencyPair: string, timeframe: string) =>\n  [currencyPair, timeframe].join(\":\");\n","import { createReducer } from \"modules/redux/utils\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { getLookupKey } from \"./utils\";\nimport { Actions } from \"./../root\";\nimport { Candle } from \"./types/Candle\";\n\nconst MAX_CANDLES = 100;\n\ntype SymbolState = Candle[];\n\nexport interface CandlesState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: CandlesState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, candles] = action.payload;\n  return candles\n    .map(([timestamp, open, close, high, low, volume]: number[]) => ({\n      timestamp,\n      open,\n      close,\n      high,\n      low,\n      volume,\n    }))\n    .sort((a: Candle, b: Candle) => b.timestamp - a.timestamp);\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, candle] = action.payload;\n  const [timestamp, open, close, high, low, volume] = candle;\n  const candleIndex = state.findIndex((c) => c.timestamp === timestamp);\n  const newOrUpdatedCandle = {\n    timestamp,\n    open,\n    close,\n    high,\n    low,\n    volume,\n  };\n\n  if (candleIndex >= 0) {\n    const updatedState = state.slice();\n    updatedState.splice(candleIndex, 1, newOrUpdatedCandle);\n    return updatedState;\n  }\n  return [newOrUpdatedCandle, ...state];\n}\n\nconst receiveMessageReducer = (state: CandlesState, action: ReceiveMessage) => {\n  if (\n    isHeartbeat(action) ||\n    isSubscriptionMessage(action) ||\n    isErrorMessage(action)\n  ) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n  if (channel === \"candles\") {\n    const { key } = request;\n    const [, timeframe, symbol] = key.split(\":\");\n    const currencyPair = symbol.slice(1);\n    const lookupKey = getLookupKey(currencyPair, timeframe);\n\n    if (isUnsubscriptionMessage(action)) {\n      const updatedState = {\n        ...state,\n      };\n      delete updatedState[lookupKey];\n      return updatedState;\n    }\n\n    const symbolReducer = Array.isArray(action.payload[1][0])\n      ? snapshotReducer\n      : updateReducer;\n    const result = symbolReducer(state[lookupKey], action);\n\n    return {\n      ...state,\n      [lookupKey]: result.slice(0, MAX_CANDLES), // restrict number of candles so we don't eventully fill up the memory\n    };\n  }\n\n  return state;\n};\n\nexport const candlesReducer = createReducer<CandlesState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default candlesReducer;\n","import { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"modules/root\";\nimport { SELECTION_ACTION_TYPES, SelectCurrencyPair } from \"./actions\";\n\ninterface SelectionState {\n  currencyPair?: string;\n}\n\nconst initialState: SelectionState = {};\n\nconst selectCurrencyPair = (\n  state: SelectionState,\n  action: SelectCurrencyPair\n) => {\n  const { currencyPair } = action.payload;\n\n  return {\n    ...state,\n    currencyPair,\n  };\n};\n\nexport const selectionReducer = createReducer<SelectionState, Actions>(\n  {\n    [SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR]: selectCurrencyPair,\n  },\n  initialState\n);\n\nexport default selectionReducer;\n","import { Actions } from \"modules/root\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport { createReducer } from \"modules/redux/utils\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { Order } from \"./types/Order\";\n\ntype SymbolState = Order[];\n\nexport interface BookState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: BookState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, orders] = action.payload;\n  return orders.map(([id, price, amount]: any[]) => ({\n    id,\n    price,\n    amount,\n  }));\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, order] = action.payload;\n  const [id, price, amount] = order;\n  const existingOrderIndex = state.findIndex((x) => x.id === id);\n  const newOrUpdatedOrder = {\n    id,\n    price,\n    amount,\n  };\n\n  if (price === 0 && existingOrderIndex >= 0) {\n    // remove\n    const updatedState = state.slice();\n    updatedState.splice(existingOrderIndex, 1);\n    return updatedState;\n  } else if (existingOrderIndex >= 0) {\n    // update\n    const updatedState = state.slice();\n    updatedState.splice(existingOrderIndex, 1, newOrUpdatedOrder);\n    return updatedState;\n  } else {\n    // add\n    return [...state, newOrUpdatedOrder];\n  }\n}\n\nconst receiveMessageReducer = (state: BookState, action: ReceiveMessage) => {\n  if (\n    isHeartbeat(action) ||\n    isSubscriptionMessage(action) ||\n    isErrorMessage(action)\n  ) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n\n  if (channel === \"book\") {\n    const { symbol } = request;\n    const currencyPair = symbol.slice(1);\n\n    if (isUnsubscriptionMessage(action)) {\n      const updatedState = {\n        ...state,\n      };\n      delete updatedState[currencyPair];\n      return updatedState;\n    }\n\n    const symbolReducer = Array.isArray(action.payload[1][0])\n      ? snapshotReducer\n      : updateReducer;\n    const result = symbolReducer(state[currencyPair], action);\n    return {\n      ...state,\n      [currencyPair]: result,\n    };\n  }\n\n  return state;\n};\n\nexport const bookReducer = createReducer<BookState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default bookReducer;\n","import { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"./../root\";\nimport { UpdateLatency, PING_ACTION_TYPES } from \"./actions\";\n\ninterface PingState {\n  latency?: number;\n}\n\nconst initialState = {};\n\nconst updateLatencyReducer = (state: PingState, action: UpdateLatency) => {\n  const { latency } = action.payload;\n\n  return {\n    ...state,\n    latency,\n  };\n};\n\nexport const pingReducer = createReducer<PingState, Actions>(\n  {\n    [PING_ACTION_TYPES.UPDATE_LATENCY]: updateLatencyReducer,\n  },\n  initialState\n);\n\nexport default pingReducer;\n","import { combineEpics } from \"redux-observable\";\nimport { combineReducers } from \"redux\";\nimport { BookActions } from \"./book/actions\";\nimport { SelectionActions } from \"./selection/actions\";\nimport { CandlesActions } from \"./candles/actions\";\nimport { TickerActions } from \"./ticker/actions\";\nimport { RefDataActions } from \"./reference-data/actions\";\nimport { PingActions } from \"./ping/actions\";\nimport appEpics from \"./app/epics\";\nimport transportEpics from \"../core/transport/epics\";\nimport tradeEpics from \"./trades/epics\";\nimport refDataEpics from \"./reference-data/epics\";\nimport tickerEpics from \"./ticker/epics\";\nimport candlesEpics from \"./candles/epics\";\nimport selectionEpics from \"./selection/epics\";\nimport bookEpics from \"./book/epics\";\nimport pingEpics from \"./ping/epics\";\nimport { AppActions } from \"./app/actions\";\nimport { TradesActions } from \"./trades/actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { tradesReducer } from \"./trades/reducer\";\nimport { subscriptionsReducer } from \"core/transport/reducer\";\nimport { refDataReducer } from \"./reference-data/reducer\";\nimport { tickerReducer } from \"./ticker/reducer\";\nimport { candlesReducer } from \"./candles/reducer\";\nimport { selectionReducer } from \"./selection/reducer\";\nimport { bookReducer } from \"./book/reducer\";\nimport { pingReducer } from \"./ping/reducer\";\n\nexport const rootEpic = combineEpics(\n  appEpics,\n  refDataEpics,\n  transportEpics,\n  tradeEpics,\n  tickerEpics,\n  candlesEpics,\n  selectionEpics,\n  bookEpics,\n  pingEpics\n);\n\nexport const rootReducer = combineReducers({\n  refData: refDataReducer,\n  subscriptions: subscriptionsReducer,\n  trades: tradesReducer,\n  ticker: tickerReducer,\n  candles: candlesReducer,\n  selection: selectionReducer,\n  book: bookReducer,\n  ping: pingReducer,\n});\n\nexport type Actions =\n  | AppActions\n  | RefDataActions\n  | TransportActions\n  | TradesActions\n  | TickerActions\n  | CandlesActions\n  | SelectionActions\n  | BookActions\n  | PingActions;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport createWsMiddleware from \"core/transport/middleware\";\nimport { WsConnectionProxy } from \"core/transport/WsConnectionProxy\";\nimport { Connection } from \"core/transport/Connection\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { Actions, RootState } from \"./../root\";\nimport { rootEpic, rootReducer } from \"../root\";\n\nconst connectionProxy = new WsConnectionProxy(\n  \"wss://api-pub.bitfinex.com/ws/2\"\n);\n\nconst connection = new Connection(connectionProxy);\n\nconst dependencies = {\n  connection,\n};\n\nexport type Dependencies = typeof dependencies;\n\nconst epicMiddleware = createEpicMiddleware<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n>({\n  dependencies,\n});\n\nconst wsMiddleware = createWsMiddleware({ connection });\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(wsMiddleware, epicMiddleware))\n  );\n\n  connection.onConnect(() => {\n    store.dispatch(\n      TransportActions.changeConnectionStatus(ConnectionStatus.Connected)\n    );\n    console.log(\"Connected\");\n  });\n  connection.onClose(() => {\n    store.dispatch(\n      TransportActions.changeConnectionStatus(ConnectionStatus.Disconnected)\n    );\n    console.log(\"Disconnected\");\n  });\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import { useMemo, useEffect, useState } from \"react\";\nimport { throttle } from \"lodash\";\n\nexport const useThrottleFn = <T extends (...args: any) => any>(\n  fn: T,\n  ms = 1000\n) => {\n  const throttledFn = useMemo(() => {\n    return throttle(fn, ms);\n  }, [fn, ms]);\n\n  // fn may call setState.\n  useEffect(() => {\n    return () => {\n      throttledFn.cancel();\n    };\n  }, [throttledFn]);\n  return throttledFn;\n};\n\nexport const useThrottle = <T>(value: T, ms = 1000) => {\n  const [throttledValue, setThrottledValue] = useState(value);\n  const setThrottledValueThrottled = useThrottleFn(setThrottledValue, ms);\n  setThrottledValueThrottled(value);\n  return throttledValue;\n};\n","import {\n  formatPrice,\n  formatAmount,\n  formatVolume,\n  formatTime,\n} from \"modules/reference-data/utils\";\n\nexport const priceFormatter = (params: { value: number }) =>\n  formatPrice(params.value);\n\nexport const amountFormatter = (params: { value: number }) =>\n  formatAmount(params.value);\n\nexport const volumeFormatter = (params: { value: number }) =>\n  formatVolume(params.value);\n\nexport const timeFormatter = (params: { value: number }) =>\n  formatTime(params.value);\n","const Palette = {\n  Bid: \"#00AD08\",\n  Ask: \"#FF264D\",\n  BidTransparent: \"rgba(0, 173, 8, 0.2)\",\n  AskTransparent: \"rgba(255, 38, 77, 0.2)\",\n  Positive: \"#00AD08\",\n  Negative: \"#FF264D\",\n  Orange: \"#FFA41B\",\n  White: \"#FFF\",\n  BackgroundColor: \"#222\",\n  Label: \"rgba(245, 245, 245, 0.64)\",\n  Border: \"#424242\",\n  LightGray: \"rgba(245, 245, 245, 0.64)\",\n  DarkGray: \"#63666D\",\n};\n\nexport default Palette;\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nconst barWidth = 5;\nconst barHeight = 20;\nconst gap = 2;\n\nconst animation = `\n    background: ${Palette.LightGray};\n    animation: loadingAnimation 1s infinite ease-in-out;\n    width: ${barWidth}px;\n    height: ${barHeight}px;\n`;\n\nexport const Container = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  z-index: 1;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr;\n  grid-template-areas:\n    \"icon\"\n    \"title\";\n\n  justify-items: center;\n`;\n\nexport const Title = styled.div`\n  font-size: 11px;\n  font-family: FiraSans-Light;\n  grid-area: title;\n  align-self: flex-start;\n  color: ${Palette.LightGray};\n`;\n\nexport const Animation = styled.div`\n  position: relative;\n  grid-area: icon;\n  align-self: flex-end;\n  margin-bottom: 5px;\n\n  @keyframes loadingAnimation {\n    0%,\n    80%,\n    100% {\n      box-shadow: 0 0 ${Palette.LightGray};\n      height: ${barHeight}px;\n    }\n    40% {\n      box-shadow: 0 -${barWidth}px ${Palette.LightGray};\n      height: ${barHeight * 1.2}px;\n    }\n  }\n\n  ${animation};\n\n  &:before,\n  &:after {\n    position: absolute;\n    content: \"\";\n    ${animation}\n  }\n\n  &:before {\n    left: ${-barWidth - gap}px;\n    animation-delay: -0.2s;\n  }\n\n  &:after {\n    left: ${barWidth + gap}px;\n    animation-delay: 0.2s;\n  }\n`;\n","import Loading from \"./Loading\";\n\nexport default Loading;\n","import React, { FC } from \"react\";\nimport { Container, Title, Animation } from \"./Loading.styled\";\n\ninterface Props {\n  title?: string;\n}\n\nconst Loading: FC<Props> = (props) => {\n  const { title = \"Loading...\" } = props;\n  return (\n    <Container>\n      <Animation></Animation>\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  font-family: FiraSans-Light;\n  position: relative;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(34, 34, 34, 0.7);\n  pointer-events: none;\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import Stale from \"./Stale\";\n\nexport default Stale;\n","import React, { FC } from \"react\";\nimport Loading from \"core/components/Loading\";\nimport { Container } from \"./Stale.styled\";\n\nconst Stale: FC<{}> = () => {\n  return (\n    <Container>\n      <Loading title={\"Stale...\"}></Loading>\n    </Container>\n  );\n};\n\nexport default Stale;\n","import React, { FC } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef } from \"ag-grid-community\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport {\n  priceFormatter,\n  amountFormatter,\n  timeFormatter,\n} from \"modules/ag-grid/formatter\";\nimport Loading from \"core/components/Loading\";\nimport { Trade } from \"../../types/Trade\";\nimport { Container } from \"./Trades.styled\";\nimport Palette from \"theme/style\";\nimport Stale from \"core/components/Stale\";\n\nexport interface Props {\n  trades: Trade[];\n  isStale: boolean;\n}\n\nconst Trades: FC<Props> = (props) => {\n  const { trades, isStale } = props;\n  const throttledTrades = useThrottle<Trade[]>(trades, 500);\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Id\",\n      field: \"id\",\n      hide: true,\n    },\n    {\n      headerName: \"Amount\",\n      field: \"amount\",\n      valueFormatter: (params) =>\n        amountFormatter({ value: Math.abs(params.value) }),\n    },\n    {\n      headerName: \"Price\",\n      field: \"price\",\n      cellStyle: (params) => {\n        return {\n          color: params.value < 0 ? Palette.Ask : Palette.Bid,\n        };\n      },\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Time\",\n      field: \"timestamp\",\n      valueFormatter: timeFormatter,\n      cellStyle: () => ({\n        color: Palette.LightGray,\n      }),\n    },\n  ];\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      {isStale && <Stale />}\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={throttledTrades}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => data.id}\n        onGridReady={(event) => event.api.sizeColumnsToFit()}\n        noRowsOverlayComponent={\"customLoadingOverlay\"}\n        frameworkComponents={{\n          customLoadingOverlay: Loading,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Trades;\n","import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash\";\nimport { RootState } from \"modules/root\";\n\nconst tradesSelector = (state: RootState) => state.trades;\n\nexport const getTrades = createSelector(tradesSelector, (trades) =>\n  memoize((symbol: string) => trades[symbol])\n);\n","import Trades from \"./Trades.container\";\n\nexport default Trades;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport Trades, { Props } from \"./Trades\";\nimport { getTrades } from \"../../selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const trades = selectedCurrencyPair\n    ? getTrades(state)(selectedCurrencyPair)\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"trades\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    trades,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(Trades);\n","import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { getLookupKey } from \"./utils\";\nimport { Candle } from \"./types/Candle\";\n\nconst DEFAULT_CANDLES: Candle[] = [];\n\nexport const candlesSelector = (state: RootState) => state.candles;\n\nexport const getCandles = createSelector(candlesSelector, (candles) =>\n  memoize(\n    (currencyPair: string, timeframe: string) =>\n      candles[getLookupKey(currencyPair, timeframe)] || DEFAULT_CANDLES,\n    (currencyPair, timeframe) => `${currencyPair}:${timeframe}`\n  )\n);\n","import { createSelector } from \"reselect\";\nimport { memoize, range } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { getCurrencyPairs } from \"modules/reference-data/selectors\";\nimport { candlesSelector } from \"modules/candles/selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getSubscriptionId, getSubscriptions } from \"core/transport/selectors\";\nimport { getValueAt } from \"core/utils\";\nimport { getLookupKey } from \"./../candles/utils\";\n\nconst tickerSelector = (state: RootState) => state.ticker;\n\nexport const getTicker = createSelector(tickerSelector, (ticker) =>\n  memoize((symbol: string) => ticker[symbol])\n);\n\nexport const getTickers = createSelector(\n  getCurrencyPairs,\n  tickerSelector,\n  (currencyPairs, ticker) =>\n    currencyPairs.map((currencyPair) => ({\n      currencyPair,\n      ...ticker[currencyPair],\n    }))\n);\n\nexport const getVisibleCurrencyPairTickers = createSelector(\n  getCurrencyPairs,\n  getSelectedCurrencyPair,\n  (allCurrencyPairs, selectedCurrencyPair) => {\n    let currencyPairs: string[] = [];\n\n    const selectedCurrencyPairIndex = allCurrencyPairs.indexOf(\n      selectedCurrencyPair || \"\"\n    );\n\n    // Pick a few currency pairs on each side of the selected one\n    if (selectedCurrencyPairIndex >= 0) {\n      currencyPairs = range(\n        selectedCurrencyPairIndex - 2,\n        selectedCurrencyPairIndex + 3\n      ).map((index) => getValueAt(allCurrencyPairs)(index));\n    }\n\n    return {\n      currencyPairs,\n      selectedCurrencyPairIndex,\n    };\n  }\n);\n\nexport const getTickersWithPrices = createSelector(\n  getTickers,\n  candlesSelector,\n  getSubscriptionId,\n  getSubscriptions,\n  (tickers, candles, subscribeIdGetter, subscriptions) => {\n    return tickers.map((ticker) => {\n      const subscriptionId = subscribeIdGetter(\"ticker\", {\n        symbol: `t${ticker.currencyPair}`,\n      });\n\n      return {\n        ...ticker,\n        prices: (candles[getLookupKey(ticker.currencyPair, \"5m\")] || []).map(\n          (ticker) => ticker.close\n        ),\n        isStale: Boolean(\n          subscriptionId ? subscriptions[subscriptionId].isStale : false\n        ),\n      };\n    });\n  }\n);\n","/*\n    Safe way to retrieve a value from an array\n\n    Index can be any number\n*/\nexport const getValueAt = (values: any[]) => (index: number) =>\n  values[((index % values.length) + values.length) % values.length];\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (val: any) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = val;\n  }, [val]);\n\n  return ref.current;\n};\n","import styled from \"styled-components\";\nimport { Container as Stale } from \"core/components/Stale/Stale.styled\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div<{\n  isActive: boolean;\n}>`\n  position: relative;\n  cursor: pointer;\n  display: grid;\n  grid-template-rows: 25px 1fr;\n  height: 50px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-areas:\n    \"currencyPair price\"\n    \"relativeChange change\";\n  font-size: 12px;\n  padding: 5px 10px;\n  border: 1px solid\n    ${({ isActive }) => (isActive ? Palette.Orange : Palette.Border)};\n\n  &:hover {\n    background-color: #2d3436;\n  }\n\n  ${Stale} {\n    background: none;\n    top: 12px;\n    bottom: -12px;\n  }\n`;\n\nexport const CurrencyPair = styled.div`\n  color: ${Palette.White};\n  grid-area: currencyPair;\n`;\n\nexport const Price = styled.div`\n  color: ${Palette.White};\n  grid-area: price;\n  margin-right: 0;\n  margin-left: auto;\n`;\n\nexport const RelativeChange = styled.div<{\n  isPositive: boolean;\n}>`\n  grid-area: relativeChange;\n  font-size: 18px;\n  color: ${({ isPositive }) =>\n    isPositive ? Palette.Positive : Palette.Negative};\n  display: flex;\n  font-family: FiraSans-Medium;\n`;\n\nexport const Change = styled.div<{\n  isPositive: boolean;\n}>`\n  grid-area: change;\n  margin-right: 0;\n  margin-left: auto;\n  color: ${({ isPositive }) =>\n    isPositive ? Palette.Positive : Palette.Negative};\n`;\n","import styled from \"styled-components\";\nimport { range } from \"lodash\";\nimport { Container as TickerContainer } from \"../Ticker/Ticker.styled\";\n\nexport type ScrollDirection = \"left\" | \"right\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n`;\n\nexport const TickerWrapper = styled.div<{\n  index: number;\n  itemCount: number;\n  direction: ScrollDirection;\n}>`\n  ${({ itemCount }) => {\n    const animations = range(0, itemCount).map((index) => {\n      const indexThreshold = Math.floor(itemCount / 2);\n      const val =\n        index <= indexThreshold\n          ? index\n          : indexThreshold - Math.abs(indexThreshold - index);\n      const scaleFactor = 1 - (indexThreshold - val) / 10;\n\n      return `\n            @keyframes slide-in-${index} {\n                100% { transform: scale(${scaleFactor}, ${scaleFactor}) translateX(0%);; }\n            }\n            `;\n    });\n\n    return animations.reduce((acc, a) => (acc += a), \"\");\n  }}\n\n  ${TickerContainer} {\n    animation: ${({ index }) => `slide-in-${index} 0.5s forwards;`};\n    transform: ${({ direction }) =>\n      `translateX(${direction === \"left\" ? 100 : -100}%);`};\n  }\n`;\n","import styled from \"styled-components\";\nimport Palette from \"../../../theme/style\";\n\nexport const Content = styled.div`\n  display: flex;\n`;\n\nexport const IdenticalPart = styled.div``;\n\nexport const ChangedPart = styled.div`\n  color: ${Palette.Orange};\n`;\n\nexport const DigitContainer = styled.span`\n  display: inline-block;\n`;\n","import React, { FC, useEffect, useState, createRef } from \"react\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\nimport {\n  Content,\n  IdenticalPart,\n  DigitContainer,\n} from \"./UpdateHightlight.styled\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  value?: string | null;\n  effect?: \"zoom\" | \"default\";\n}\n\nexport const calculateParts = (value: string, prevValue: string) => {\n  if (!value || !prevValue) {\n    return [value, \"\"];\n  }\n  const length = Math.min(value.length, prevValue.length);\n  let index = 0;\n  for (let i = 0; i < length; i++) {\n    if (value[i] === prevValue[i]) {\n      index++;\n    } else {\n      break;\n    }\n  }\n  return [value.slice(0, index), value.slice(index, value.length)];\n};\n\nconst AnimatedValue: FC<{\n  value: string;\n  delay?: number;\n  scale?: number;\n  duration?: number;\n}> = (props) => {\n  const { value, delay = 0, scale = 1, duration = 200 } = props;\n  const ref = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    let animation: Animation | undefined = undefined;\n    let timeoutId: number | undefined = undefined;\n\n    if (typeof ref.current?.animate === \"function\") {\n      const runAnimation = () => {\n        animation = ref.current?.animate(\n          [\n            // keyframes\n            { color: Palette.Orange, transform: \"scale(1)\" },\n            ...(scale === 1\n              ? []\n              : [{ color: Palette.White, transform: `scale(${scale})` }]),\n            { color: Palette.White, transform: \"scale(1)\" },\n          ],\n          {\n            duration,\n            iterations: 1,\n          }\n        );\n      };\n\n      if (delay) {\n        timeoutId = setTimeout(\n          () => requestAnimationFrame(runAnimation),\n          delay\n        );\n      } else {\n        requestAnimationFrame(runAnimation);\n      }\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (animation) {\n        animation.cancel();\n      }\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return <DigitContainer ref={ref}>{value}</DigitContainer>;\n};\n\nconst UpdateHighlight: FC<Props> = (props) => {\n  const changedPartRef = createRef<HTMLDivElement>();\n  const { value, effect = \"default\" } = props;\n  const prev = usePrevious(value);\n  const [[identicalPart, changedPart], setParts] = useState<string[]>([]);\n\n  useEffect(() => {\n    setParts(calculateParts(value || \"\", prev || \"\"));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  const digits =\n    effect === \"zoom\" ? (\n      changedPart\n        ?.split(\"\")\n        .map((digit, index) => (\n          <AnimatedValue\n            key={index}\n            value={digit}\n            delay={index * 100}\n            scale={2}\n            duration={300}\n          />\n        ))\n    ) : (\n      <AnimatedValue value={changedPart} />\n    );\n  return (\n    <Content>\n      <IdenticalPart>{identicalPart}</IdenticalPart>\n      <div ref={changedPartRef}>{digits}</div>\n    </Content>\n  );\n};\n\nexport default UpdateHighlight;\n","import styled from \"styled-components\";\n\nexport const Icon = styled.i`\n  font-size: 16px;\n  line-height: 20px;\n  width: 20px;\n`;\n","import TrendIndicator from \"./TrendIndicator\";\n\nexport default TrendIndicator;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Icon } from \"./TrendIndicator.styled\";\n\nconst SHOW_ICON_FOR_X_MS = 5000;\n\nexport interface Props {\n  value: number;\n}\n\nconst TrendIndicator: FC<Props> = (props) => {\n  const { value } = props;\n  const [isHidden, setIsHidden] = useState(true);\n\n  useEffect(() => {\n    setIsHidden(false);\n\n    const timeoutId = setTimeout(() => setIsHidden(true), SHOW_ICON_FOR_X_MS);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [value]);\n\n  const icon = isHidden\n    ? \"\"\n    : value > 0\n    ? \"arrow_upward\"\n    : value < 0\n    ? \"arrow_downward\"\n    : \"\";\n\n  return <Icon className=\"material-icons\">{icon}</Icon>;\n};\n\nexport default TrendIndicator;\n","import React, { FC } from \"react\";\nimport {\n  Container,\n  CurrencyPair,\n  Price,\n  RelativeChange,\n  Change,\n} from \"./Ticker.styled\";\nimport UpdateHighlight from \"core/components/UpdateHighlight/UpdateHighlight\";\nimport TrendIndicator from \"core/components/TrendIndicator\";\nimport Stale from \"core/components/Stale\";\nimport { formatCurrencyPair, formatPrice } from \"modules/reference-data/utils\";\n\nexport interface StateProps {\n  currencyPair: string;\n  lastPrice: number;\n  dailyChange: number;\n  dailyChangeRelative: number;\n  isActive?: boolean;\n  isStale: boolean;\n}\n\nexport interface DispatchProps {\n  onClick?: () => void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst Ticker: FC<Props> = (props) => {\n  const {\n    currencyPair,\n    lastPrice,\n    dailyChange,\n    dailyChangeRelative,\n    onClick,\n    isActive,\n    isStale,\n  } = props;\n  const isPositiveChange = dailyChange > 0;\n  const percentChange = dailyChangeRelative\n    ? dailyChangeRelative * 100\n    : undefined;\n  return (\n    <Container onClick={onClick} isActive={!!isActive}>\n      {isStale ? (\n        <Stale />\n      ) : (\n        <>\n          <CurrencyPair>{formatCurrencyPair(currencyPair)}</CurrencyPair>\n          <Price>\n            <UpdateHighlight value={formatPrice(lastPrice)} effect={\"zoom\"} />\n          </Price>\n          <RelativeChange isPositive={isPositiveChange}>\n            <TrendIndicator value={dailyChangeRelative} />\n            <UpdateHighlight value={percentChange?.toFixed(2)} />\n            {percentChange && \"%\"}\n          </RelativeChange>\n          <Change isPositive={isPositiveChange}>\n            <UpdateHighlight value={dailyChange?.toFixed(2)} />\n          </Change>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Ticker;\n","import Ticker from \"./Ticker.container\";\n\nexport default Ticker;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { Dispatch } from \"redux\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getTicker } from \"../../selectors\";\nimport Ticker, { StateProps, DispatchProps } from \"./Ticker\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\n\nexport interface ContainerProps {\n  currencyPair: string;\n}\n\nconst mapStateToProps = (\n  state: RootState,\n  props: ContainerProps\n): StateProps => {\n  const { currencyPair } = props;\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const ticker = getTicker(state)(currencyPair);\n\n  const subscriptionId = getSubscriptionId(state)(\"ticker\", {\n    symbol: `t${currencyPair}`,\n  });\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    lastPrice: ticker?.lastPrice,\n    currencyPair,\n    dailyChangeRelative: ticker?.dailyChangeRelative,\n    dailyChange: ticker?.dailyChange,\n    isActive: selectedCurrencyPair === currencyPair,\n    isStale,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch,\n  ownProps: ContainerProps\n): DispatchProps => {\n  const { currencyPair } = ownProps;\n\n  return {\n    onClick: () =>\n      dispatch(SelectionActions.selectCurrencyPair({ currencyPair })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ticker);\n","import React, { FC, useState, useEffect } from \"react\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\nimport { Container, TickerWrapper, ScrollDirection } from \"./Tickers.styled\";\nimport Ticker from \"../Ticker\";\n\nexport interface Props {\n  currencyPairs: string[];\n  selectedCurrencyPairIndex?: number;\n}\n\nconst Tickers: FC<Props> = (props) => {\n  const { currencyPairs, selectedCurrencyPairIndex } = props;\n  const [direction, setDirection] = useState<ScrollDirection>(\"left\");\n  const previousSelectedCurrencyPairIndex = usePrevious(\n    selectedCurrencyPairIndex\n  );\n\n  useEffect(() => {\n    const direction =\n      (previousSelectedCurrencyPairIndex || 0) >\n      (selectedCurrencyPairIndex || 0)\n        ? \"right\"\n        : \"left\";\n    setDirection(direction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCurrencyPairIndex]);\n\n  return (\n    <Container className=\"tickers\">\n      {currencyPairs.map((currencyPair, index) => (\n        <TickerWrapper\n          index={index}\n          itemCount={currencyPairs.length}\n          key={currencyPair}\n          direction={direction}\n        >\n          <Ticker currencyPair={currencyPair} />\n        </TickerWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default Tickers;\n","import Tickers from \"./Tickers.container\";\n\nexport default Tickers;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getVisibleCurrencyPairTickers } from \"modules/ticker/selectors\";\nimport Tickers, { Props } from \"./Tickers\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const {\n    currencyPairs,\n    selectedCurrencyPairIndex,\n  } = getVisibleCurrencyPairTickers(state);\n\n  return {\n    currencyPairs,\n    selectedCurrencyPairIndex,\n  };\n};\n\nexport default connect(mapStateToProps)(Tickers);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n`;\n","import * as Highcharts from \"highcharts/highstock\";\nimport Palette from \"./style\";\n\n(Highcharts as any).theme = {\n  colors: [\n    \"#2b908f\",\n    \"#90ee7e\",\n    \"#f45b5b\",\n    \"#7798BF\",\n    \"#aaeeee\",\n    \"#ff0066\",\n    \"#eeaaee\",\n    \"#55BF3B\",\n    \"#DF5353\",\n    \"#7798BF\",\n    \"#aaeeee\",\n  ],\n  chart: {\n    backgroundColor: {\n      stops: [\n        [0, \"#2a2a2b\"],\n        [1, \"#3e3e40\"],\n      ],\n    },\n  },\n  xAxis: {\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  yAxis: {\n    gridLineColor: Palette.Border,\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    tickWidth: 1,\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  tooltip: {\n    borderColor: Palette.Border,\n    backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n    style: {\n      color: Palette.White,\n    },\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: \"#F0F0F3\",\n        style: {\n          fontSize: \"13px\",\n        },\n      },\n      marker: {\n        lineColor: \"#333\",\n      },\n    },\n    boxplot: {\n      fillColor: \"#505053\",\n    },\n    candlestick: {\n      lineColor: \"white\",\n    },\n    errorbar: {\n      color: \"white\",\n    },\n  },\n  legend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    itemStyle: {\n      color: \"#E0E0E3\",\n    },\n    itemHoverStyle: {\n      color: \"#FFF\",\n    },\n    itemHiddenStyle: {\n      color: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#C0C0C0\",\n      },\n    },\n  },\n  credits: {\n    style: {\n      color: \"#666\",\n    },\n  },\n  labels: {\n    style: {\n      color: \"#707073\",\n    },\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n    activeDataLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: \"#DDDDDD\",\n      theme: {\n        fill: \"#505053\",\n      },\n    },\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: \"#505053\",\n      stroke: \"#000000\",\n      style: {\n        color: \"#CCC\",\n      },\n      states: {\n        hover: {\n          fill: \"#707073\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n        select: {\n          fill: \"#000003\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n      },\n    },\n    inputBoxBorderColor: \"#505053\",\n    inputStyle: {\n      backgroundColor: \"#333\",\n      color: \"silver\",\n    },\n    labelStyle: {\n      color: \"silver\",\n    },\n  },\n  navigator: {\n    handles: {\n      backgroundColor: \"#666\",\n      borderColor: \"#AAA\",\n    },\n    outlineColor: \"#CCC\",\n    maskFill: \"rgba(255,255,255,0.1)\",\n    series: {\n      color: \"#7798BF\",\n      lineColor: \"#A6C7ED\",\n    },\n    xAxis: {\n      gridLineColor: \"#505053\",\n    },\n  },\n  scrollbar: {\n    barBackgroundColor: \"#808083\",\n    barBorderColor: \"#808083\",\n    buttonArrowColor: \"#CCC\",\n    buttonBackgroundColor: \"#606063\",\n    buttonBorderColor: \"#606063\",\n    rifleColor: \"#FFF\",\n    trackBackgroundColor: \"#404043\",\n    trackBorderColor: \"#404043\",\n  },\n};\n\nHighcharts.setOptions((Highcharts as any).theme);\n","import React, { FC, useEffect, useState } from \"react\";\nimport * as Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Stale from \"core/components/Stale\";\nimport Loading from \"core/components/Loading\";\nimport { Container } from \"./CandlesChart.styled\";\nimport { Candle } from \"../../types/Candle\";\nimport { formatCurrencyPair } from \"modules/reference-data/utils\";\nimport \"theme/Highstock\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  candles: Candle[];\n  currencyPair?: string;\n  isStale: boolean;\n}\n\nconst CandlesChart: FC<Props> = (props) => {\n  const { candles, currencyPair, isStale } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const [chartOptions, setChartOptions] = useState<Highcharts.Options>({\n    time: {\n      useUTC: false,\n    },\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"70%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"75%\",\n        height: \"25%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n    series: [\n      {\n        type: \"candlestick\",\n        data: [],\n      },\n      {\n        type: \"column\",\n        name: \"Volume\",\n        data: [],\n        yAxis: 1,\n      },\n    ],\n    rangeSelector: {\n      selected: 2,\n      buttons: [\n        {\n          type: \"minute\",\n          count: 5,\n          text: \"5m\",\n        },\n        {\n          type: \"minute\",\n          count: 15,\n          text: \"15m\",\n        },\n        {\n          type: \"minute\",\n          count: 30,\n          text: \"30m\",\n        },\n        {\n          type: \"hour\",\n          count: 1,\n          text: \"1h\",\n        },\n        {\n          type: \"hour\",\n          count: 12,\n          text: \"12h\",\n        },\n        {\n          type: \"all\",\n          text: \"All\",\n        },\n      ],\n    },\n  });\n\n  useEffect(() => {\n    setIsLoading(candles.length === 0);\n\n    if (candles.length > 0) {\n      const ohlc = candles\n        .map(({ timestamp, ...rest }) => ({\n          x: timestamp,\n          ...rest,\n        }))\n        .sort((a, b) => a.x - b.x);\n      const volumes = candles\n        .map(({ timestamp, volume }) => [timestamp, volume])\n        .sort((a, b) => a[0] - b[0]);\n\n      setChartOptions({\n        series: [\n          {\n            type: \"candlestick\",\n            name: currencyPair && formatCurrencyPair(currencyPair),\n            data: ohlc,\n          },\n          {\n            type: \"column\",\n            data: volumes,\n          },\n        ],\n        plotOptions: {\n          candlestick: {\n            color: Palette.Negative,\n            upColor: Palette.Positive,\n          },\n          column: {\n            color: Palette.LightGray,\n          },\n        },\n      });\n    }\n  }, [candles, currencyPair]);\n\n  return (\n    <Container className=\"candles-chart\">\n      {isStale && <Stale />}\n      {isLoading && <Loading />}\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n        constructorType={\"stockChart\"}\n      />\n    </Container>\n  );\n};\n\nexport default CandlesChart;\n","import CandlesChart from \"./CandlesChart.container\";\n\nexport default CandlesChart;\n","import { connect } from \"react-redux\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport CandlesChart, { Props } from \"./CandlesChart\";\nimport { RootState } from \"modules/root\";\nimport { getCandles } from \"../../selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const candles = selectedCurrencyPair\n    ? getCandles(state)(selectedCurrencyPair, \"1m\")\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"candles\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    candles,\n    currencyPair: selectedCurrencyPair,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(CandlesChart);\n","import { ICellRendererParams } from \"ag-grid-community\";\nimport Palette from \"theme/style\";\n\nconst amountRenderer = (value: string, styles: { [key: string]: any }) => {\n  const formattedStyles = Object.keys(styles)\n    .map((key) => [key, styles[key]].join(\":\"))\n    .join(\";\");\n\n  return `\n        <div style=\"position: relative;\">\n            <div style=\"height: 30px; position: absolute; z-index: 0; ${formattedStyles}\"></div>\n            <div style=\"position: absolute; z-index: 1;\">${value}</div>\n        </div>`;\n};\n\nexport const bidAmountRenderer = (params: ICellRendererParams) => {\n  const { bidDepth: depth, maxDepth } = params.data;\n  const width = ((depth || 0) / maxDepth) * 100;\n  return amountRenderer(params.valueFormatted, {\n    \"background-color\": Palette.BidTransparent,\n    width: `${width}%`,\n    left: \"-12px\",\n  });\n};\n\nexport const askAmountRenderer = (params: ICellRendererParams) => {\n  const { askDepth: depth, maxDepth } = params.data;\n  const width = ((depth || 0) / maxDepth) * 100;\n  return amountRenderer(params.valueFormatted, {\n    \"background-color\": Palette.AskTransparent,\n    width: `${width}%`,\n    right: \"-12px\",\n  });\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  font-family: FiraSans-Light;\n`;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef, GridApi } from \"ag-grid-community\";\nimport { debounce } from \"lodash\";\nimport { priceFormatter, amountFormatter } from \"modules/ag-grid/formatter\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport Stale from \"core/components/Stale\";\nimport Loading from \"core/components/Loading\";\nimport { bidAmountRenderer, askAmountRenderer } from \"./renderers\";\nimport { Order } from \"../../types/Order\";\nimport { Container } from \"./Book.styled\";\nimport Palette from \"theme/style\";\n\nconst DEBOUNCE_RESIZE_IN_MS = 200;\n\nexport interface Props {\n  orders: { bid: Order; ask: Order }[];\n  isStale?: boolean;\n}\n\nconst Book: FC<Props> = (props) => {\n  const { orders, isStale } = props;\n  const [gridApi, setGridApi] = useState<GridApi | null>(null);\n  const throttledOrders = useThrottle<{ bid: Order; ask: Order }[]>(\n    orders,\n    100\n  );\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Bid Amount\",\n      field: \"bid.amount\",\n      valueFormatter: amountFormatter,\n      cellRenderer: bidAmountRenderer,\n    },\n    {\n      headerName: \"Bid Price\",\n      field: \"bid.price\",\n      cellStyle: () => ({\n        color: Palette.Bid,\n      }),\n      type: \"numericColumn\",\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Ask Price\",\n      field: \"ask.price\",\n      cellStyle: () => ({\n        color: Palette.Ask,\n      }),\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Ask Amount\",\n      field: \"ask.amount\",\n      valueFormatter: (params) =>\n        amountFormatter({ value: Math.abs(params.value) }),\n      cellRenderer: askAmountRenderer,\n    },\n  ];\n\n  useEffect(() => {\n    if (gridApi) {\n      gridApi.sizeColumnsToFit();\n    }\n\n    const handleResize = debounce(() => {\n      if (gridApi) {\n        gridApi.sizeColumnsToFit();\n      }\n    }, DEBOUNCE_RESIZE_IN_MS);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [gridApi]);\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      {isStale && <Stale />}\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={throttledOrders}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => [data.bid?.id, data.ask?.id].join(\"#\")}\n        onGridReady={(event) => {\n          setGridApi(event.api);\n        }}\n        noRowsOverlayComponent={\"customLoadingOverlay\"}\n        frameworkComponents={{\n          customLoadingOverlay: Loading,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Book;\n","import { createSelector } from \"reselect\";\nimport { memoize, range, uniq } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { Order } from \"./types/Order\";\n\nconst bookSelector = (state: RootState) => state.book;\n\nexport const getRawBook = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => book[symbol])\n);\n\nexport const getBook = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => {\n    const rawBook = book[symbol] || [];\n\n    const bids = rawBook\n      .filter((order) => order.amount > 0)\n      .sort((a, b) => b.price - a.price);\n    const asks = rawBook\n      .filter((order) => order.amount < 0)\n      .sort((a, b) => a.price - b.price);\n\n    const levels = Math.max(bids.length, asks.length);\n    const maxBidDepth = bids\n      .map((bid) => bid.amount)\n      .reduce((acc, v) => (acc += v), 0);\n    const maxAskDepth = asks\n      .map((ask) => Math.abs(ask.amount))\n      .reduce((acc, v) => (acc += v), 0);\n    const maxDepth = maxBidDepth + maxAskDepth;\n\n    const result: {\n      bid: Order;\n      ask: Order;\n      bidDepth: number;\n      askDepth: number;\n      maxDepth: number;\n    }[] = [];\n    range(levels).forEach((level) => {\n      const bid = bids[level];\n      const ask = asks[level];\n\n      result.push({\n        bid,\n        ask,\n        bidDepth:\n          bid &&\n          (result[level - 1] ? result[level - 1].bidDepth : 0) + bid.amount,\n        askDepth:\n          ask &&\n          (result[level - 1] ? result[level - 1].askDepth : 0) +\n            Math.abs(ask.amount),\n        maxDepth,\n      });\n    });\n    return result;\n  })\n);\n\nconst getPricePoints = (orders: Order[]) =>\n  uniq(orders.map((order) => order.price)).sort((a, b) => a - b);\n\nconst computeDepth = (orders: Order[]) => {\n  return (\n    pricePoints: number[],\n    orderFilter: (order: Order, pricePoint: number) => boolean\n  ) => {\n    return pricePoints.map((price) => {\n      const depth = orders\n        .filter((order) => orderFilter(order, price))\n        .reduce((acc, order) => {\n          return (acc += Math.abs(order.amount));\n        }, 0);\n      return {\n        price,\n        depth,\n      };\n    });\n  };\n};\n\nexport const getDepth = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => {\n    const rawBook = book[symbol] || [];\n\n    const bids = rawBook.filter((order) => order.amount > 0);\n\n    const asks = rawBook.filter((order) => order.amount < 0);\n\n    const bidPrices = getPricePoints(bids);\n    const askPrices = getPricePoints(asks);\n\n    const bidDepth = computeDepth(bids)(\n      bidPrices,\n      (order, pricePoint) => order.price >= pricePoint\n    );\n    const askDepth = computeDepth(asks)(\n      askPrices,\n      (order, pricePoint) => order.price <= pricePoint\n    );\n\n    return {\n      bids: bidDepth,\n      asks: askDepth,\n    };\n  })\n);\n","import Book from \"./Book.container\";\n\nexport default Book;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport Book, { Props } from \"./Book\";\nimport { getBook } from \"../../selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const orders = selectedCurrencyPair\n    ? getBook(state)(selectedCurrencyPair)\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"book\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    orders,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(Book);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n`;\n","import * as Highcharts from \"highcharts\";\nimport Palette from \"./style\";\n\n(Highcharts as any).theme = {\n  colors: [\n    \"#2b908f\",\n    \"#90ee7e\",\n    \"#f45b5b\",\n    \"#7798BF\",\n    \"#aaeeee\",\n    \"#ff0066\",\n    \"#eeaaee\",\n    \"#55BF3B\",\n    \"#DF5353\",\n    \"#7798BF\",\n    \"#aaeeee\",\n  ],\n  chart: {\n    backgroundColor: {\n      stops: [\n        [0, \"#2a2a2b\"],\n        [1, \"#3e3e40\"],\n      ],\n    },\n  },\n  xAxis: {\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  yAxis: {\n    gridLineColor: Palette.Border,\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    tickWidth: 1,\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  tooltip: {\n    borderColor: Palette.Border,\n    backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n    style: {\n      color: Palette.White,\n    },\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: \"#F0F0F3\",\n        style: {\n          fontSize: \"13px\",\n        },\n      },\n      marker: {\n        lineColor: \"#333\",\n      },\n    },\n    boxplot: {\n      fillColor: \"#505053\",\n    },\n    candlestick: {\n      lineColor: \"white\",\n    },\n    errorbar: {\n      color: \"white\",\n    },\n  },\n  legend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    itemStyle: {\n      color: \"#E0E0E3\",\n    },\n    itemHoverStyle: {\n      color: \"#FFF\",\n    },\n    itemHiddenStyle: {\n      color: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#C0C0C0\",\n      },\n    },\n  },\n  credits: {\n    style: {\n      color: \"#666\",\n    },\n  },\n  labels: {\n    style: {\n      color: \"#707073\",\n    },\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n    activeDataLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: \"#DDDDDD\",\n      theme: {\n        fill: \"#505053\",\n      },\n    },\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: \"#505053\",\n      stroke: \"#000000\",\n      style: {\n        color: \"#CCC\",\n      },\n      states: {\n        hover: {\n          fill: \"#707073\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n        select: {\n          fill: \"#000003\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n      },\n    },\n    inputBoxBorderColor: \"#505053\",\n    inputStyle: {\n      backgroundColor: \"#333\",\n      color: \"silver\",\n    },\n    labelStyle: {\n      color: \"silver\",\n    },\n  },\n  navigator: {\n    handles: {\n      backgroundColor: \"#666\",\n      borderColor: \"#AAA\",\n    },\n    outlineColor: \"#CCC\",\n    maskFill: \"rgba(255,255,255,0.1)\",\n    series: {\n      color: \"#7798BF\",\n      lineColor: \"#A6C7ED\",\n    },\n    xAxis: {\n      gridLineColor: \"#505053\",\n    },\n  },\n  scrollbar: {\n    barBackgroundColor: \"#808083\",\n    barBorderColor: \"#808083\",\n    buttonArrowColor: \"#CCC\",\n    buttonBackgroundColor: \"#606063\",\n    buttonBorderColor: \"#606063\",\n    rifleColor: \"#FFF\",\n    trackBackgroundColor: \"#404043\",\n    trackBorderColor: \"#404043\",\n  },\n};\n\nHighcharts.setOptions((Highcharts as any).theme);\n","import React, { FC, useState, useEffect } from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport Stale from \"core/components/Stale\";\nimport { Container } from \"./DepthChart.styled\";\nimport Loading from \"core/components/Loading\";\nimport Palette from \"theme/style\";\nimport \"theme/Highchart\";\n\ninterface Depth {\n  bids: { price: number; depth: number }[];\n  asks: { price: number; depth: number }[];\n}\n\nexport interface Props {\n  depth: Depth;\n  isStale: boolean;\n}\n\nconst DepthChart: FC<Props> = (props) => {\n  const { depth, isStale } = props;\n  const throttledDepth = useThrottle<Depth>(depth, 500);\n  const [isLoading, setIsLoading] = useState(true);\n  const [chartOptions, setChartOptions] = useState<Highcharts.Options>({\n    chart: {\n      type: \"area\",\n      animation: false,\n    },\n    title: {\n      text: \"\",\n    },\n    legend: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: \"bids\",\n        type: \"area\",\n        data: [],\n      },\n      {\n        name: \"asks\",\n        type: \"area\",\n        data: [],\n      },\n    ],\n    xAxis: {\n      labels: {\n        autoRotation: false,\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"\",\n      },\n      labels: {\n        enabled: false,\n      },\n    },\n    plotOptions: {\n      area: {\n        marker: {\n          enabled: false,\n          states: {\n            hover: {\n              enabled: false,\n            },\n          },\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    const { bids, asks } = throttledDepth;\n\n    setIsLoading(bids.length === 0 && asks.length === 0);\n\n    setChartOptions({\n      xAxis: {\n        categories: [...bids, ...asks].map((order) => order.price.toString()),\n        labels: {\n          step: 5,\n          formatter: function () {\n            return Number.parseFloat(this.value.toString()).toFixed(0);\n          },\n        },\n      },\n      series: [\n        {\n          name: \"bids\",\n          type: \"area\",\n          data: [...bids.map((bid) => bid.depth), ...asks.map(() => null)],\n          color: Palette.Bid,\n        },\n        {\n          name: \"asks\",\n          type: \"area\",\n          data: [...bids.map(() => null), ...asks.map((ask) => ask.depth)],\n          color: Palette.Ask,\n        },\n      ],\n    });\n  }, [throttledDepth]);\n\n  return (\n    <Container>\n      {isStale && <Stale />}\n      {isLoading && <Loading />}\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n        constructorType={\"chart\"}\n      />\n    </Container>\n  );\n};\n\nexport default DepthChart;\n","import DepthChart from \"./DepthChart.container\";\n\nexport default DepthChart;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport DepthChart, { Props } from \"./DepthChart\";\nimport { getDepth } from \"../../selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const depth = selectedCurrencyPair\n    ? getDepth(state)(selectedCurrencyPair)\n    : { bids: [], asks: [] };\n\n  const subscriptionId = getSubscriptionId(state)(\"book\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    depth,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(DepthChart);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n\n  .selected-row {\n    font-family: FiraSans-Medium;\n  }\n\n  .stale-row {\n    opacity: 0.6;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SvgContainer = styled.svg`\n  fill: none;\n`;\n","import LineChart from \"./LineChart\";\n\nexport default LineChart;\n","import React, { FC } from \"react\";\nimport { SvgContainer } from \"./LineChart.styled\";\nimport Palette from \"theme/style\";\n\ninterface Props {\n  values: number[];\n  width?: number;\n  height?: number;\n}\n\nconst LineChart: FC<Props> = (props) => {\n  const { values, width = 50, height = 25 } = props;\n  const maxX = values.length - 1;\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n  const diff = maxValue - minValue;\n\n  const getSvgX = (x: number) => (x / maxX) * width;\n\n  const getSvgY = (y: number) => height - ((y - minValue) * height) / diff;\n\n  if (values.length === 0) {\n    return <div></div>;\n  }\n\n  let pathD = `M ${getSvgX(0)} ${getSvgY(values[0])} `;\n  pathD += values.map((value, i) => {\n    const x = getSvgX(i);\n    const y = getSvgY(value);\n\n    return `L  ${x}  ${y} `;\n  });\n\n  return (\n    <SvgContainer viewBox={`0 0 ${width} ${height}`}>\n      <path d={pathD} style={{ stroke: Palette.LightGray }} />\n    </SvgContainer>\n  );\n};\n\nexport default LineChart;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 0 5px;\n`;\n","import React, { FC } from \"react\";\nimport LineChart from \"core/components/LineChart\";\nimport { Container } from \"./PriceChartRenderer.styled\";\n\ninterface Props {\n  value: number[];\n}\n\nconst PriceChartRenderer: FC<Props> = (props) => {\n  const { value: prices } = props;\n\n  return (\n    <Container>\n      <LineChart values={prices} />\n    </Container>\n  );\n};\n\nexport default PriceChartRenderer;\n","import UpdateHighlight from \"./UpdateHighlight\";\n\nexport default UpdateHighlight;\n","import React, { Component } from \"react\";\nimport UpdateHighlight from \"core/components/UpdateHighlight\";\n\ninterface Props {\n  valueFormatted: string;\n}\n\ninterface State {\n  valueFormatted: string;\n}\n\nclass PriceRenderer extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      valueFormatted: props.valueFormatted,\n    };\n  }\n\n  refresh(params: Props) {\n    this.setState({\n      valueFormatted: params.valueFormatted,\n    });\n\n    return true;\n  }\n\n  render() {\n    const { valueFormatted } = this.state;\n    return <UpdateHighlight value={valueFormatted} />;\n  }\n}\n\nexport default PriceRenderer;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef, GridApi } from \"ag-grid-community\";\nimport { priceFormatter, volumeFormatter } from \"modules/ag-grid/formatter\";\nimport { Ticker } from \"modules/ticker/types/Ticker\";\nimport Loading from \"core/components/Loading\";\nimport { formatCurrencyPair } from \"modules/reference-data/utils\";\nimport { Container } from \"./Market.styled\";\nimport PriceChartRenderer from \"./PriceChartRenderer\";\nimport PriceRenderer from \"./PriceRenderer\";\nimport Palette from \"theme/style\";\n\nexport interface StateProps {\n  tickers: (Ticker & {\n    currencyPair: string;\n    prices: number[];\n    isStale: boolean;\n  })[];\n  selectedCurrencyPair?: string;\n}\n\nexport interface DispatchProps {\n  onClick: (currencyPair: string) => void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst Market: FC<Props> = (props) => {\n  const { tickers, selectedCurrencyPair, onClick } = props;\n  const [gridApi, setGridApi] = useState<GridApi | undefined>();\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Ccy\",\n      field: \"currencyPair\",\n      valueFormatter: (params) => formatCurrencyPair(params.value),\n    },\n    {\n      headerName: \"Bid Price\",\n      field: \"bid\",\n      cellStyle: () => ({\n        color: Palette.Bid,\n        display: \"flex\",\n        \"justify-content\": \"flex-end\",\n      }),\n      type: \"numericColumn\",\n      valueFormatter: priceFormatter,\n      cellRenderer: \"priceRenderer\",\n    },\n    {\n      headerName: \"Ask Price\",\n      field: \"ask\",\n      cellStyle: () => ({\n        color: Palette.Ask,\n      }),\n      valueFormatter: priceFormatter,\n      cellRenderer: \"priceRenderer\",\n    },\n    {\n      headerName: \"Volume\",\n      field: \"volume\",\n      valueFormatter: volumeFormatter,\n    },\n    {\n      headerName: \"\",\n      field: \"prices\",\n      cellRenderer: \"priceChartRenderer\",\n      width: 100,\n      cellStyle: () => ({\n        \"padding-left\": 0,\n        \"padding-right\": 0,\n      }),\n    },\n  ];\n\n  const rowClassRules = {\n    \"selected-row\": (params: any) => params.node.isSelected(),\n    \"stale-row\": (params: any) => params.data.isStale,\n  };\n\n  useEffect(() => {\n    if (gridApi) {\n      gridApi.forEachNode(function (node) {\n        node.setSelected(node.data.currencyPair === selectedCurrencyPair);\n      });\n      gridApi.redrawRows();\n    }\n  }, [gridApi, selectedCurrencyPair]);\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={tickers}\n        rowClassRules={rowClassRules}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => data.currencyPair}\n        onGridReady={(event) => {\n          setGridApi(event.api);\n          event.api.sizeColumnsToFit();\n        }}\n        rowSelection={\"single\"}\n        onRowClicked={(event) => {\n          onClick(event.data.currencyPair);\n        }}\n        noRowsOverlayComponent={\"customLoadingOverlay\"}\n        frameworkComponents={{\n          priceChartRenderer: PriceChartRenderer,\n          priceRenderer: PriceRenderer,\n          customLoadingOverlay: Loading,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Market;\n","import Market from \"./Market.container\";\n\nexport default Market;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getTickersWithPrices } from \"modules/ticker/selectors\";\nimport { RootState } from \"modules/root\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport Market, { StateProps, DispatchProps } from \"./Market\";\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  const tickers = getTickersWithPrices(state);\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n\n  return {\n    tickers,\n    selectedCurrencyPair,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    onClick: (currencyPair: string) =>\n      dispatch(SelectionActions.selectCurrencyPair({ currencyPair })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Market);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-rows: 20px 1fr;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    \"header\"\n    \"body\";\n`;\n\nexport const Header = styled.div`\n  grid-area: header;\n  color: ${Palette.Label};\n  font-size: 12px;\n`;\n\nexport const Body = styled.div`\n  grid-area: body;\n`;\n","import Widget from \"./Widget\";\n\nexport default Widget;\n","import React, { FC } from \"react\";\nimport { Container, Header, Body } from \"./Widget.styled\";\n\nexport interface Props {\n  children: JSX.Element;\n  title: string;\n}\n\nconst Widget: FC<Props> = (props) => {\n  const { children, title } = props;\n\n  return (\n    <Container>\n      <Header>{title}</Header>\n      <Body>{children}</Body>\n    </Container>\n  );\n};\n\nexport default Widget;\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  font-size: 10px;\n  color: ${Palette.White};\n  padding: 0 10px;\n  display: flex;\n  width: 85px;\n  justify-content: space-between;\n  color: ${Palette.LightGray};\n`;\n","import Diagnostics from \"./Diagnostics\";\n\nexport default Diagnostics;\n","import React, { FC, useState, useEffect } from \"react\";\nimport { Container } from \"./Diagnostics.styled\";\n\nconst DIAGNOSTICS_INTERVAL_MS = 2000;\n\nconst Diagnostics: FC<{}> = () => {\n  const [delay, setDelay] = useState<number | undefined>();\n  useEffect(() => {\n    let timeoutId: number | undefined = undefined;\n    const intervalId = setInterval(() => {\n      const time = Date.now();\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        setDelay(Date.now() - time);\n      });\n    }, DIAGNOSTICS_INTERVAL_MS);\n\n    return () => {\n      clearInterval(intervalId);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n\n  return (\n    <Container>\n      <span>UI Latency: </span>\n      <span>{delay || \"---\"}ms</span>\n    </Container>\n  );\n};\n\nexport default Diagnostics;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst getPing = (state: RootState) => state.ping;\n\nexport const getLatency = createSelector(getPing, (ping) => ping.latency);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  color: ${Palette.White};\n  font-size: 10px;\n  width: 85px;\n  display: flex;\n  justify-content: space-between;\n  color: ${Palette.LightGray};\n`;\n","import React, { FC } from \"react\";\nimport { Container } from \"./Latency.styled\";\n\nexport interface Props {\n  latency?: number;\n}\n\nconst Latency: FC<Props> = (props) => {\n  const { latency } = props;\n  return (\n    <Container>\n      <span>Round trip: </span>\n      <span>{latency || \"---\"}ms</span>\n    </Container>\n  );\n};\n\nexport default Latency;\n","import Latency from \"./Latency.container\";\n\nexport default Latency;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getLatency } from \"modules/ping/selectors\";\nimport Latency, { Props } from \"./Latency\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const latency = getLatency(state);\n\n  return {\n    latency,\n  };\n};\n\nexport default connect(mapStateToProps)(Latency);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div<{\n  width: number;\n}>`\n  perspective: ${({ width }) => `${width}px`};\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Cube = styled.div<{\n  width: number;\n}>`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transform-style: preserve-3d;\n  transform: ${({ width }) => `translateZ(${-width / 2}px)`};\n`;\n\nexport const Face = styled.div<{\n  width: number;\n}>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: ${Palette.BackgroundColor};\n`;\n\nexport const FrontFace = styled(Face)`\n  transform: ${({ width }) => `rotateY(0deg) translateZ(${width / 2}px)`};\n`;\n\nexport const RightFace = styled(Face)`\n  transform: ${({ width }) => `rotateY(90deg) translateZ(${width / 2}px)`};\n  border: 1px solid ${Palette.Border};\n`;\n","import AnimatedCube from \"./AnimatedCube\";\n\nexport default AnimatedCube;\n","import React, { FC, useEffect, createRef, useState } from \"react\";\nimport { debounce } from \"lodash\";\nimport { Container, Cube, FrontFace, RightFace } from \"./AnimatedCube.styled\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\n\nconst DEBOUNCE_RESIZE_IN_MS = 200;\n\nexport interface Props {\n  trigger: any;\n  children?: JSX.Element | string;\n}\n\nconst AnimatedCube: FC<Props> = (props) => {\n  const { trigger, children } = props;\n  const [width, setWidth] = useState(0);\n  const previousTrigger = usePrevious(trigger);\n  const previousWidth = usePrevious(width);\n  const containerRef = createRef<HTMLDivElement>();\n  const cubeRef = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef && containerRef.current) {\n        const { width } = containerRef.current.getBoundingClientRect();\n        console.log(`Update cube width to ${width}`);\n\n        setWidth(width);\n      } else {\n        console.warn(\"Failed to update cube\");\n      }\n    };\n\n    const handleWindowResize = debounce(() => {\n      requestAnimationFrame(updateDimensions);\n    }, DEBOUNCE_RESIZE_IN_MS);\n\n    updateDimensions();\n\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [containerRef]);\n\n  useEffect(() => {\n    let animation: Animation | undefined = undefined;\n\n    // don't trigger animation the first time we render the component, nor on resize\n    if (previousTrigger && previousWidth === width) {\n      requestAnimationFrame(() => {\n        animation = cubeRef.current?.animate(\n          [\n            { transform: `translateZ(-${width / 2}px)` },\n            { transform: `translateZ(-${width / 2}px) rotateY(-90deg)` },\n          ],\n          {\n            duration: 1000,\n            iterations: 1,\n            easing: \"ease-out\",\n          }\n        );\n      });\n    }\n\n    return () => {\n      if (animation) {\n        animation.cancel();\n      }\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trigger, width]);\n\n  return (\n    <Container ref={containerRef} width={width}>\n      <Cube ref={cubeRef} width={width}>\n        {<FrontFace width={width}>{children}</FrontFace>}\n        {<RightFace width={width}></RightFace>} }\n      </Cube>\n    </Container>\n  );\n};\n\nexport default AnimatedCube;\n","import React, { FC } from \"react\";\nimport AnimatedCube from \"core/components/AnimatedCube\";\n\nexport interface Props {\n  currencyPair?: string;\n  children?: JSX.Element | string;\n}\n\nconst CurrencyPairTransition: FC<Props> = (props) => {\n  const { currencyPair, children } = props;\n\n  return <AnimatedCube trigger={currencyPair}>{children}</AnimatedCube>;\n};\n\nexport default CurrencyPairTransition;\n","import CurrencyPairTransition from \"./CurrencyPairTransition.container\";\n\nexport default CurrencyPairTransition;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport CurrencyPairTransition, { Props } from \"./CurrencyPairTransition\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n\n  return {\n    currencyPair: selectedCurrencyPair,\n  };\n};\n\nexport default connect(mapStateToProps)(CurrencyPairTransition);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  background-color: ${Palette.BackgroundColor};\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-gap: 5px;\n  padding: 5px 10px;\n  width: 100%;\n  height: 100%;\n  @media only screen and (min-width: 1200px) {\n    grid-template-rows: 40px 70px 1fr 250px 30px;\n    grid-template-columns: 450px 1fr 1fr;\n    grid-template-areas:\n      \"header header header\"\n      \"tickers tickers tickers\"\n      \"market candles candles\"\n      \"trades book depth\"\n      \"footer footer footer\";\n  }\n\n  @media only screen and (min-width: 600px) and (max-width: 1200px) {\n    grid-template-rows: 40px 70px 1fr 1fr 30px;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      \"header header\"\n      \"market book\"\n      \"market book\"\n      \"trades depth\"\n      \"footer footer\";\n\n    .tickers {\n      display: none;\n    }\n\n    .candles-chart {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 600px) {\n    grid-template-rows: 40px calc(100% - 90px) 30px;\n    grid-template-columns: calc(100% - 20px);\n    grid-template-areas:\n      \"header\"\n      \"market\"\n      \"footer\";\n\n    .candles-chart {\n      display: none;\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  grid-area: header;\n  color: ${Palette.White};\n  font-family: FiraSans-MediumItalic;\n  background-color: #2d3436;\n  padding: 0 0 0 10px;\n  font-size: 28px;\n`;\n\nexport const TickersPanel = styled.div`\n  grid-area: tickers;\n  overflow: auto;\n  width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const MarketPanel = styled.div`\n  grid-area: market;\n`;\n\nexport const TradesPanel = styled.div`\n  grid-area: trades;\n`;\n\nexport const CandlesPanel = styled.div`\n  grid-area: candles;\n`;\n\nexport const BookPanel = styled.div`\n  grid-area: book;\n`;\n\nexport const DepthPanel = styled.div`\n  grid-area: depth;\n`;\n\nexport const Footer = styled.div`\n  grid-area: footer;\n  padding: 0 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./modules/redux/store\";\nimport { AppActions } from \"./modules/app/actions\";\nimport Trades from \"modules/trades/components/Trades\";\nimport Tickers from \"modules/ticker/components/Tickers\";\nimport CandlesChart from \"modules/candles/components/CandlesChart\";\nimport Book from \"modules/book/components/Book\";\nimport DepthChart from \"modules/book/components/DepthChart\";\nimport Market from \"modules/ticker/components/Market\";\nimport Widget from \"core/components/Widget\";\nimport Diagnostics from \"core/components/Diagnostics\";\nimport Latency from \"modules/ping/components/Latency\";\nimport CurrencyPairTransition from \"modules/common/CurrencyPairTransition\";\nimport {\n  Container,\n  Content,\n  Header,\n  MarketPanel,\n  TradesPanel,\n  TickersPanel,\n  CandlesPanel,\n  BookPanel,\n  DepthPanel,\n  Footer,\n} from \"App.styled\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham-dark.css\";\nimport \"theme/fonts.css\";\n\nfunction App() {\n  const store = configureStore();\n\n  useEffect(() => {\n    store.dispatch(AppActions.bootstrapApp());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Container>\n        <Content>\n          <Header>Crypto Trader</Header>\n          <TickersPanel>\n            <Tickers />\n          </TickersPanel>\n          <MarketPanel>\n            <Widget title={\"Market\"}>\n              <Market />\n            </Widget>\n          </MarketPanel>\n          <TradesPanel>\n            <Widget title={\"Trades\"}>\n              <CurrencyPairTransition>\n                <Trades />\n              </CurrencyPairTransition>\n            </Widget>\n          </TradesPanel>\n          <CandlesPanel>\n            <CandlesChart />\n          </CandlesPanel>\n          <BookPanel>\n            <Widget title={\"Book\"}>\n              <CurrencyPairTransition>\n                <Book />\n              </CurrencyPairTransition>\n            </Widget>\n          </BookPanel>\n          <DepthPanel>\n            <Widget title={\"Depth\"}>\n              <CurrencyPairTransition>\n                <DepthChart />\n              </CurrencyPairTransition>\n            </Widget>\n          </DepthPanel>\n          <Footer>\n            <Latency />\n            <Diagnostics />\n          </Footer>\n        </Content>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}