{"version":3,"sources":["core/transport/types/ConnectionStatus.ts","core/transport/actions.ts","modules/redux/utils.ts","modules/reference-data/actions.ts","core/transport/middleware.ts","core/transport/WsConnectionProxy.ts","core/transport/Connection.ts","modules/reference-data/selectors.ts","modules/selection/actions.ts","modules/reference-data/utils.ts","modules/ticker/actions.ts","modules/candles/actions.ts","modules/app/actions.ts","modules/trades/actions.ts","modules/app/epics.ts","core/transport/epics.ts","modules/book/actions.ts","core/transport/selectors.ts","modules/trades/epics.ts","modules/reference-data/epics.ts","modules/ticker/epics.ts","modules/candles/epics.ts","modules/ping/actions.ts","modules/selection/selectors.ts","modules/selection/epics.ts","modules/book/epics.ts","modules/ping/epics.ts","core/transport/utils.ts","modules/trades/reducer.ts","core/transport/reducer.ts","modules/reference-data/reducer.ts","modules/ticker/reducer.ts","modules/candles/utils.ts","modules/candles/reducer.ts","modules/selection/reducer.ts","modules/book/reducer.ts","modules/ping/reducer.ts","modules/root.ts","modules/redux/store.ts","core/hooks/useThrottle.ts","modules/ag-grid/formatter.ts","modules/trades/components/Trades/Trades.styled.ts","theme/style.ts","core/components/Stale/Stale.styled.ts","core/components/Stale/index.ts","core/components/Stale/Stale.tsx","modules/trades/components/Trades/Trades.tsx","modules/trades/selectors.ts","modules/trades/components/Trades/index.ts","modules/trades/components/Trades/Trades.container.tsx","modules/candles/selectors.ts","modules/ticker/selectors.ts","core/utils.ts","core/hooks/usePrevious.ts","modules/ticker/components/Ticker/Ticker.styled.ts","modules/ticker/components/Tickers/Tickers.styled.ts","core/components/UpdateHighlight/UpdateHightlight.styled.ts","core/components/UpdateHighlight/UpdateHighlight.tsx","core/components/TrendIndicator/TrendIndicator.styled.ts","core/components/TrendIndicator/index.ts","core/components/TrendIndicator/TrendIndicator.tsx","modules/ticker/components/Ticker/Ticker.tsx","modules/ticker/components/Ticker/index.ts","modules/ticker/components/Ticker/Ticker.container.tsx","modules/ticker/components/Tickers/Tickers.tsx","modules/ticker/components/Tickers/index.ts","modules/ticker/components/Tickers/Tickers.container.tsx","modules/candles/components/CandlesChart/CandlesChart.styled.ts","theme/Highstock.ts","modules/candles/components/CandlesChart/CandlesChart.tsx","modules/candles/components/CandlesChart/index.ts","modules/candles/components/CandlesChart/CandlesChart.container.tsx","modules/book/components/Book/renderers.ts","modules/book/components/Book/Book.styled.ts","modules/book/components/Book/Book.tsx","modules/book/selectors.ts","modules/book/components/Book/index.ts","modules/book/components/Book/Book.container.tsx","modules/book/components/DepthChart/DepthChart.styled.ts","theme/Highchart.ts","modules/book/components/DepthChart/DepthChart.tsx","modules/book/components/DepthChart/index.ts","modules/book/components/DepthChart/DepthChart.container.tsx","modules/ticker/components/Market/Market.styled.ts","core/components/LineChart/LineChart.styled.ts","core/components/LineChart/index.ts","core/components/LineChart/LineChart.tsx","modules/ticker/components/Market/PriceChartRenderer.styled.ts","modules/ticker/components/Market/PriceChartRenderer.tsx","core/components/UpdateHighlight/index.ts","modules/ticker/components/Market/PriceRenderer.tsx","modules/ticker/components/Market/Market.tsx","modules/ticker/components/Market/index.ts","modules/ticker/components/Market/Market.container.tsx","core/components/Widget/Widget.styled.ts","core/components/Widget/index.ts","core/components/Widget/Widget.tsx","core/components/Diagnostics/Diagnostics.styled.ts","core/components/Diagnostics/index.ts","core/components/Diagnostics/Diagnostics.tsx","modules/ping/selectors.ts","modules/ping/components/Latency/Latency.styled.ts","modules/ping/components/Latency/Latency.tsx","modules/ping/components/Latency/index.ts","modules/ping/components/Latency/Latency.container.tsx","App.styled.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ConnectionStatus","TRANSPORT_ACTION_TYPES","createAction","type","payload","meta","createReducer","handlers","initialState","state","action","hasOwnProperty","REF_DATA_ACTION_TYPES","TransportActions","sendMessage","SEND_MESSAGE","receiveMessage","RECEIVE_MESSAGE","changeConnectionStatus","CHANGE_CONNECTION_STATUS","subscribeToChannel","SUBSCRIBE_TO_CHANNEL","subscribeToChannelAck","SUBSCRIBE_TO_CHANNEL_ACK","subscribeToChannelNack","SUBSCRIBE_TO_CHANNEL_NACK","unsubscribeFromChannel","UNSUBSCRIBE_FROM_CHANNEL","unsubscribeFromChannelAck","UNSUBSCRIBE_FROM_CHANNEL_ACK","unsubscribeFromChannelNack","UNSUBSCRIBE_FROM_CHANNEL_NACK","staleSubscription","STALE_SUBSCRIPTION","createWsMiddleware","connection","store","next","onReceive","data","parsedData","JSON","parse","undefined","channelId","Array","isArray","chanId","getState","subscriptions","WsConnectionProxy","realm","socket","onConnectFn","onReceivedFn","onErrorFn","this","WebSocket","onopen","onmessage","onerror","error","Error","message","send","callback","Connection","connectionProxy","start","stop","onConnect","onReceived","getCurrencyPairs","createSelector","refData","currencyPairs","SELECTION_ACTION_TYPES","RefDataActions","loadRefData","LOAD_REF_DATA","loadRefDataAck","LOAD_REF_DATA_ACK","loadRefDataNack","LOAD_REF_DATA_NACK","SelectionActions","selectCurrencyPair","SELECT_CURRENCY_PAIR","parseCurrencyPair","currencyPair","slice","formatCurrencyPair","join","TICKER_ACTION_TYPES","formatPrice","price","numeral","format","CANDLES_ACTION_TYPES","TickerActions","subscribeToTicker","SUBSCRIBE_TO_TICKER","APP_ACTION_TYPES","CandlesActions","subscribeToCandles","SUBSCRIBE_TO_CANDLES","unsubscribeFromCandles","UNSUBSCRIBE_FROM_CANDLES","TRADES_ACTION_TYPES","AppActions","bootstrapApp","BOOTSTRAP_APP","combineEpics","action$","state$","pipe","ofType","switchMap","console","log","connect","filter","Connected","merge","of","take","mergeMap","value","tickerActions","map","symbol","candleActions","timeframe","from","counter","ticker","distinctUntilChanged","tap","document","title","lastPrice","toFixed","EMPTY","stringify","concatMap","rootAction","isSubscribing","event","channel","timeout","receiveMessageAction","msg","request","catchError","subscribeAction","bufferTime","actions","length","takeUntil","BOOK_ACTION_TYPES","TradesActions","subscribeToTrades","SUBSCRIBE_TO_TRADES","unsubscribeFromTrades","UNSUBSCRIBE_FROM_TRADES","getSubscriptions","getSubscriptionId","channelIds","Object","keys","Number","find","every","key","getIsSubscriptionStale","subscriptionId","Boolean","isStale","result","push","warn","fromFetch","response","json","PING_ACTION_TYPES","BookActions","subscribeToBook","SUBSCRIBE_TO_BOOK","unsubscribeFromBook","UNSUBSCRIBE_FROM_BOOK","getSelectedCurrencyPair","selection","statePairs$","pairwise","withLatestFrom","oldState","oldCurrencyPair","unsubscribeActions","subscribeActions","prec","PingActions","updateLatency","UPDATE_LATENCY","interval","cid","pingTimestamp","Date","now","latency","isHeartbeat","isSubscriptionMessage","isUnsubscriptionMessage","isErrorMessage","snapshotReducer","sort","a","b","id","timestamp","amount","updateReducer","trade","existingTradeIndex","findIndex","x","newOrUpdatedTrade","updatedState","splice","tradesReducer","subscriptionsReducer","refDataReducer","tickerReducer","bid","bidSize","ask","askSize","dailyChange","dailyChangeRelative","volume","high","low","getLookupKey","open","close","candle","candleIndex","c","newOrUpdatedCandle","candlesReducer","split","lookupKey","selectionReducer","order","existingOrderIndex","newOrUpdatedOrder","bookReducer","pingReducer","rootEpic","appEpics","refDataEpics","transportEpics","tradeEpics","tickerEpics","candlesEpics","selectionEpics","bookEpics","pingEpics","rootReducer","combineReducers","trades","candles","book","ping","dependencies","epicMiddleware","createEpicMiddleware","wsMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","useThrottleFn","fn","ms","throttledFn","useMemo","throttle","useEffect","cancel","useThrottle","useState","throttledValue","setThrottledValue","setThrottledValueThrottled","priceFormatter","params","amountFormatter","toString","volumeFormatter","timeFormatter","time","DateTime","fromMillis","toLocaleString","TIME_24_WITH_SECONDS","Container","styled","div","Palette","Bid","Ask","BidTransparent","AskTransparent","Positive","Negative","Orange","White","BackgroundColor","Label","Border","LightGray","DarkGray","Content","Stale","Trades","props","throttledTrades","columnDefs","headerName","field","hide","valueFormatter","Math","abs","cellStyle","color","className","rowData","deltaRowDataMode","getRowNodeId","onGridReady","api","sizeColumnsToFit","getTrades","memoize","selectedCurrencyPair","DEFAULT_CANDLES","candlesSelector","getCandles","tickerSelector","getTicker","getTickers","getVisibleCurrencyPairTickers","allCurrencyPairs","selectedCurrencyPairIndex","indexOf","range","index","values","getTickersWithPrices","tickers","prices","usePrevious","val","ref","useRef","current","isActive","CurrencyPair","Price","RelativeChange","isPositive","Change","TickerWrapper","itemCount","indexThreshold","floor","scaleFactor","reduce","acc","TickerContainer","direction","IdenticalPart","DigitContainer","span","AnimatedValue","delay","scale","duration","createRef","animation","timeoutId","animate","runAnimation","transform","iterations","setTimeout","requestAnimationFrame","clearTimeout","UpdateHighlight","changedPartRef","effect","prev","identicalPart","changedPart","setParts","prevValue","min","i","calculateParts","digits","digit","Icon","TrendIndicator","isHidden","setIsHidden","icon","Ticker","onClick","isPositiveChange","percentChange","dispatch","ownProps","Tickers","setDirection","previousSelectedCurrencyPairIndex","Highcharts","colors","chart","backgroundColor","stops","xAxis","labels","style","lineColor","minorGridLineColor","tickColor","yAxis","gridLineColor","tickWidth","tooltip","borderColor","plotOptions","series","dataLabels","fontSize","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","theme","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","CandlesChart","useUTC","align","text","height","lineWidth","resize","enabled","top","offset","name","selected","buttons","count","chartOptions","setChartOptions","ohlc","rest","volumes","upColor","column","highcharts","options","constructorType","amountRenderer","styles","formattedStyles","bidAmountRenderer","width","bidDepth","maxDepth","valueFormatted","left","askAmountRenderer","askDepth","right","Book","orders","throttledOrders","cellRenderer","bookSelector","getBook","rawBook","bids","asks","levels","max","v","forEach","level","getPricePoints","uniq","computeDepth","pricePoints","orderFilter","depth","getDepth","bidPrices","askPrices","pricePoint","DepthChart","throttledDepth","autoRotation","area","categories","step","formatter","parseFloat","SvgContainer","svg","LineChart","maxX","minValue","diff","getSvgX","getSvgY","y","pathD","viewBox","d","PriceChartRenderer","PriceRenderer","setState","Component","Market","gridApi","setGridApi","display","forEachNode","node","setSelected","redrawRows","rowClassRules","isSelected","rowSelection","onRowClicked","frameworkComponents","priceChartRenderer","priceRenderer","Header","Body","Widget","children","Diagnostics","setDelay","intervalId","setInterval","clearInterval","getLatency","Latency","TickersPanel","MarketPanel","TradesPanel","CandlesPanel","BookPanel","DepthPanel","Footer","App","createStore","applyMiddleware","run","configureStore","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f4761966.chunk.js","sourcesContent":["export enum ConnectionStatus {\n  Unknown,\n  Connected,\n  Disconnected,\n}\n","import { createAction, ActionUnion } from \"modules/redux/utils\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\nimport {\n  TradesChannel,\n  CandlesChannel,\n  TickerChannel,\n  BookChannel,\n} from \"./types/Channels\";\n\nexport enum TRANSPORT_ACTION_TYPES {\n  SEND_MESSAGE = \"TRANSPORT/SEND_MESSAGE\",\n  RECEIVE_MESSAGE = \"TRANSPORT/RECEIVE_MESSAGE\",\n  CHANGE_CONNECTION_STATUS = \"TRANSPORT/CHANGE_CONNECTION_STATUS\",\n  SUBSCRIBE_TO_CHANNEL = \"TRANSPORT/SUBSCRIBE_TO_CHANNEL\",\n  SUBSCRIBE_TO_CHANNEL_ACK = \"TRANSPORT/SUBSCRIBE_TO_CHANNEL_ACK\",\n  SUBSCRIBE_TO_CHANNEL_NACK = \"TRANSPORT/SUBSCRIBE_TO_CHANNEL_NACK\",\n  UNSUBSCRIBE_FROM_CHANNEL = \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL\",\n  UNSUBSCRIBE_FROM_CHANNEL_ACK = \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL_ACK\",\n  UNSUBSCRIBE_FROM_CHANNEL_NACK = \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL_NACK\",\n  STALE_SUBSCRIPTION = \"TRANSPORT/STALE_SUBSCRIPTION\",\n}\n\ninterface SubscribeToTrades {\n  channel: TradesChannel;\n  symbol: string;\n}\n\ninterface SubscribeToCandles {\n  channel: CandlesChannel;\n  key: string;\n}\n\ninterface SubscribeToTicker {\n  channel: TickerChannel;\n  symbol: string;\n}\n\ninterface SubscribeToBook {\n  channel: BookChannel;\n  symbol: string;\n  prec?: string;\n}\n\nexport type SubscribeToChannelActionPayload =\n  | SubscribeToTrades\n  | SubscribeToCandles\n  | SubscribeToTicker\n  | SubscribeToBook;\n\nexport interface SubscribeToChannelAckActionPayload {\n  channel: string;\n  channelId: number;\n  request: any;\n}\n\nexport interface SubscribeToChannelNackActionPayload {\n  error: string;\n}\n\nexport interface ReceiveMessageActionMeta {\n  channel: string;\n  request?: any;\n}\n\nexport interface UnsubscribeFromChannelActionPayload {\n  channelId: number;\n}\n\nexport interface UnsubscribeFromChannelAckActionPayload {\n  channelId: number;\n}\n\nexport interface StaleSubscriptionActionPayload {\n  channelId: number;\n}\n\nexport const TransportActions = {\n  sendMessage: createAction<TRANSPORT_ACTION_TYPES.SEND_MESSAGE, any>(\n    TRANSPORT_ACTION_TYPES.SEND_MESSAGE\n  ),\n  receiveMessage: createAction<\n    TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE,\n    any,\n    ReceiveMessageActionMeta | undefined\n  >(TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE),\n  changeConnectionStatus: createAction<\n    TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS,\n    ConnectionStatus\n  >(TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS),\n  subscribeToChannel: createAction<\n    TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL,\n    SubscribeToChannelActionPayload\n  >(TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL),\n  subscribeToChannelAck: createAction<\n    TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK,\n    SubscribeToChannelAckActionPayload\n  >(TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK),\n  subscribeToChannelNack: createAction<\n    TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_NACK,\n    SubscribeToChannelNackActionPayload\n  >(TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_NACK),\n  unsubscribeFromChannel: createAction<\n    TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL,\n    UnsubscribeFromChannelActionPayload\n  >(TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL),\n  unsubscribeFromChannelAck: createAction<\n    TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_ACK,\n    UnsubscribeFromChannelAckActionPayload\n  >(TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_ACK),\n  unsubscribeFromChannelNack: createAction<\n    TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_NACK\n  >(TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_NACK),\n  staleSubscription: createAction<\n    TRANSPORT_ACTION_TYPES.STALE_SUBSCRIPTION,\n    StaleSubscriptionActionPayload\n  >(TRANSPORT_ACTION_TYPES.STALE_SUBSCRIPTION),\n};\n\nexport type TransportActions = ActionUnion<typeof TransportActions>;\nexport type ReceiveMessage = ReturnType<typeof TransportActions.receiveMessage>;\nexport type SendMessage = ReturnType<typeof TransportActions.sendMessage>;\nexport type ChangeConnectionStatus = ReturnType<\n  typeof TransportActions.changeConnectionStatus\n>;\nexport type SubscribeToChannel = ReturnType<\n  typeof TransportActions.subscribeToChannel\n>;\nexport type SubscribeToChannelAck = ReturnType<\n  typeof TransportActions.subscribeToChannelAck\n>;\nexport type SubscribeToChannelNack = ReturnType<\n  typeof TransportActions.subscribeToChannelNack\n>;\nexport type UnsubscribeFromChannel = ReturnType<\n  typeof TransportActions.unsubscribeFromChannel\n>;\nexport type UnsubscribeFromChannelAck = ReturnType<\n  typeof TransportActions.unsubscribeFromChannelAck\n>;\nexport type UnsubscribeFromChannelNack = ReturnType<\n  typeof TransportActions.unsubscribeFromChannelNack\n>;\nexport type StaleSubscription = ReturnType<\n  typeof TransportActions.staleSubscription\n>;\n","import { ActionCreatorsMapObject } from \"redux\";\n\nexport interface Action<T extends string> {\n  type: T;\n}\n\nexport interface ActionWithPayload<T extends string, P> extends Action<T> {\n  payload: P;\n}\n\nexport interface ActionWithPayloadAndMeta<T extends string, P, M>\n  extends ActionWithPayload<T, P> {\n  meta: M;\n}\n\ntype ActionFn<T extends string> = () => Action<T>;\n\ntype ActionWithPayloadFn<T extends string, P> = (\n  payload: P\n) => ActionWithPayload<T, P>;\n\ntype ActionWithPayloadAndMetaFn<T extends string, P, M> = (\n  payload: P,\n  meta: M\n) => ActionWithPayloadAndMeta<T, P, M>;\n\nexport function createAction<T extends string>(type: T): ActionFn<T>;\n\nexport function createAction<T extends string, P>(\n  type: T\n): ActionWithPayloadFn<T, P>;\n\nexport function createAction<T extends string, P, M>(\n  type: T\n): ActionWithPayloadAndMetaFn<T, P, M>;\n\nexport function createAction(type: string) {\n  return (payload?: any, meta?: any) => {\n    if (typeof payload === \"undefined\") {\n      return { type };\n    }\n    if (typeof meta === \"undefined\") {\n      return {\n        type,\n        payload,\n      };\n    }\n\n    return {\n      type,\n      payload,\n      meta,\n    };\n  };\n}\n\nexport type ActionUnion<A extends ActionCreatorsMapObject> = ReturnType<\n  A[keyof A]\n>;\n\ntype ReducerMap<S, A> = A extends ActionWithPayloadAndMeta<\n  infer T,\n  infer P,\n  infer M\n>\n  ? { [key in T]: (state: S, action: ActionWithPayloadAndMeta<T, P, M>) => S }\n  : A extends ActionWithPayload<infer T, infer P>\n  ? { [key in T]: (state: S, action: ActionWithPayload<T, P>) => S }\n  : A extends Action<infer T>\n  ? { [key in T]: (state: S, action: Action<T>) => S }\n  : never;\n\nexport function createReducer<S, A extends { type: string }>(\n  handlers: ReducerMap<S, A>,\n  initialState: S\n) {\n  return function reducer(state = initialState, action: A): S {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n}\n","import { createAction, ActionUnion } from \"modules/redux/utils\";\n\nexport enum REF_DATA_ACTION_TYPES {\n  LOAD_REF_DATA = \"REF_DATA/LOAD_REF_DATA\",\n  LOAD_REF_DATA_ACK = \"REF_DATA/LOAD_REF_DATA_ACK\",\n  LOAD_REF_DATA_NACK = \"REF_DATA/LOAD_REF_DATA_NACK\",\n}\n\ninterface RefDataLoadAckActionPayload {\n  currencyPairs: string[];\n}\n\nexport const RefDataActions = {\n  loadRefData: createAction<REF_DATA_ACTION_TYPES.LOAD_REF_DATA>(\n    REF_DATA_ACTION_TYPES.LOAD_REF_DATA\n  ),\n  loadRefDataAck: createAction<\n    REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK,\n    RefDataLoadAckActionPayload\n  >(REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK),\n  loadRefDataNack: createAction<REF_DATA_ACTION_TYPES.LOAD_REF_DATA_NACK>(\n    REF_DATA_ACTION_TYPES.LOAD_REF_DATA_NACK\n  ),\n};\n\nexport type RefDataActions = ActionUnion<typeof RefDataActions>;\nexport type LoadRefData = ReturnType<typeof RefDataActions.loadRefData>;\nexport type LoadRefDataAck = ReturnType<typeof RefDataActions.loadRefDataAck>;\nexport type LoadRefDataNack = ReturnType<typeof RefDataActions.loadRefDataNack>;\n","import { Middleware, Dispatch } from \"redux\";\nimport { Actions } from \"modules/root\";\nimport { Connection } from \"./Connection\";\nimport { TransportActions } from \"./actions\";\n\nconst createWsMiddleware = ({\n  connection,\n}: {\n  connection: Connection;\n}): Middleware => {\n  return (store) => (next: Dispatch) => {\n    connection.onReceive((data) => {\n      const parsedData = JSON.parse(data);\n      let meta = undefined;\n      let channelId = undefined;\n\n      if (Array.isArray(parsedData)) {\n        channelId = parsedData[0];\n      } else if (parsedData.hasOwnProperty(\"chanId\")) {\n        channelId = parsedData.chanId;\n      }\n      if (channelId && store.getState().subscriptions[channelId]) {\n        meta = store.getState().subscriptions[channelId];\n      }\n      next(TransportActions.receiveMessage(parsedData, meta));\n    });\n    return (action: Actions) => next(action);\n  };\n};\n\nexport default createWsMiddleware;\n","import { ConnectionProxy } from \"./types/ConnectionProxy\";\n\nexport class WsConnectionProxy implements ConnectionProxy {\n  private socket?: WebSocket;\n  private onConnectFn?: () => void;\n  private onReceivedFn?: (data?: any) => void;\n  private onErrorFn?: (error: any) => void;\n\n  constructor(private realm: string) {\n    this.socket = undefined;\n    this.onReceivedFn = undefined;\n  }\n\n  start(): void {\n    this.socket = new WebSocket(this.realm);\n    this.socket.onopen = () => this.onConnectFn && this.onConnectFn();\n    this.socket.onmessage = ({ data }) => {\n      this.onReceivedFn && this.onReceivedFn(data);\n    };\n    this.socket.onerror = (error) => this.onErrorFn && this.onErrorFn(error);\n  }\n\n  stop(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  send(message: any): void {\n    if (this.socket) {\n      this.socket.send(message);\n    }\n  }\n\n  onConnect(callback: () => void): void {\n    this.onConnectFn = callback;\n  }\n\n  onReceived(callback: (data: any) => void): void {\n    this.onReceivedFn = callback;\n  }\n\n  onError(callback: (error: any) => void): void {\n    this.onErrorFn = callback;\n  }\n}\n","import { ConnectionProxy } from \"./types/ConnectionProxy\";\n\nexport class Connection {\n  constructor(private connectionProxy: ConnectionProxy) {}\n\n  connect() {\n    this.connectionProxy.start();\n  }\n\n  disconnect() {\n    this.connectionProxy.stop();\n  }\n\n  send(message: any): void {\n    this.connectionProxy.send(message);\n  }\n\n  onConnect(callback: () => void) {\n    this.connectionProxy.onConnect(callback);\n  }\n\n  onReceive(callback: (data: any) => void) {\n    this.connectionProxy.onReceived(callback);\n  }\n}\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst refDataSelector = (state: RootState) => state.refData;\n\nexport const getCurrencyPairs = createSelector(\n  refDataSelector,\n  (refData) => refData.currencyPairs\n);\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum SELECTION_ACTION_TYPES {\n  SELECT_CURRENCY_PAIR = \"SELECTION/SELECT_CURRENCY_PAIR\",\n}\n\nexport interface SelectCurrencyPairActionPayload {\n  currencyPair: string;\n}\n\nexport const SelectionActions = {\n  selectCurrencyPair: createAction<\n    SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR,\n    SelectCurrencyPairActionPayload\n  >(SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR),\n};\n\nexport type SelectionActions = ActionUnion<typeof SelectionActions>;\nexport type SelectCurrencyPair = ReturnType<\n  typeof SelectionActions.selectCurrencyPair\n>;\n","import { DateTime } from \"luxon\";\nimport numeral from \"numeral\";\nexport type Base = string;\nexport type Counter = string;\n\nexport function parseCurrencyPair(currencyPair: string): [Base, Counter] {\n  if (typeof currencyPair === \"undefined\") {\n    return [\"\", \"\"];\n  }\n  const base = currencyPair.slice(0, 3);\n  const counter = currencyPair.slice(3);\n  return [base, counter];\n}\n\nexport function formatCurrencyPair(currencyPair: string): string {\n  const [base, counter] = parseCurrencyPair(currencyPair);\n  return [base, counter].join(\" / \");\n}\n\nexport const formatPrice = (price: number | string | undefined) =>\n  numeral(price).format(\"0,0.00\");\n\nexport const formatAmount = (amount: number | string | undefined) =>\n  amount ? amount.toString() : \"\";\n\nexport const formatVolume = (volume: number) =>\n  numeral(volume).format(\"0.00 a\");\n\nexport const formatTime = (time: number) =>\n  DateTime.fromMillis(time).toLocaleString(DateTime.TIME_24_WITH_SECONDS);\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum TICKER_ACTION_TYPES {\n  SUBSCRIBE_TO_TICKER = \"TICKER/SUBSCRIBE_TO_TICKER\",\n}\n\nexport interface SubscribeToTickerActionPayload {\n  symbol: string;\n}\n\nexport const TickerActions = {\n  subscribeToTicker: createAction<\n    TICKER_ACTION_TYPES.SUBSCRIBE_TO_TICKER,\n    SubscribeToTickerActionPayload\n  >(TICKER_ACTION_TYPES.SUBSCRIBE_TO_TICKER),\n};\n\nexport type TickerActions = ActionUnion<typeof TickerActions>;\nexport type SubscribeToTicker = ReturnType<\n  typeof TickerActions.subscribeToTicker\n>;\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\ntype Timeframe =\n  | \"1m\"\n  | \"5m\"\n  | \"15m\"\n  | \"30m\"\n  | \"1h\"\n  | \"3h\"\n  | \"6h\"\n  | \"12h\"\n  | \"1D\"\n  | \"7D\"\n  | \"14D\"\n  | \"1M\";\n\nexport enum CANDLES_ACTION_TYPES {\n  SUBSCRIBE_TO_CANDLES = \"CANDLES/SUBSCRIBE_TO_CANDLES\",\n  UNSUBSCRIBE_FROM_CANDLES = \"CANDLES/UNSUBSCRIBE_FROM_CANDLES\",\n}\n\nexport interface SubscribeToCandlesActionPayload {\n  symbol: string;\n  timeframe: Timeframe;\n}\n\nexport interface UnsubscribeFromCandlesActionPayload {\n  symbol: string;\n  timeframe: Timeframe;\n}\n\nexport const CandlesActions = {\n  subscribeToCandles: createAction<\n    CANDLES_ACTION_TYPES.SUBSCRIBE_TO_CANDLES,\n    SubscribeToCandlesActionPayload\n  >(CANDLES_ACTION_TYPES.SUBSCRIBE_TO_CANDLES),\n  unsubscribeFromCandles: createAction<\n    CANDLES_ACTION_TYPES.UNSUBSCRIBE_FROM_CANDLES,\n    UnsubscribeFromCandlesActionPayload\n  >(CANDLES_ACTION_TYPES.UNSUBSCRIBE_FROM_CANDLES),\n};\n\nexport type CandlesActions = ActionUnion<typeof CandlesActions>;\nexport type SubscribeToCandles = ReturnType<\n  typeof CandlesActions.subscribeToCandles\n>;\nexport type UnsubscribeFromCandles = ReturnType<\n  typeof CandlesActions.unsubscribeFromCandles\n>;\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum APP_ACTION_TYPES {\n  BOOTSTRAP_APP = \"APP/BOOTSTRAP_APP\",\n}\n\nexport const AppActions = {\n  bootstrapApp: createAction<APP_ACTION_TYPES.BOOTSTRAP_APP>(\n    APP_ACTION_TYPES.BOOTSTRAP_APP\n  ),\n};\n\nexport type AppActions = ActionUnion<typeof AppActions>;\nexport type BoostrapApp = ReturnType<typeof AppActions.bootstrapApp>;\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum TRADES_ACTION_TYPES {\n  SUBSCRIBE_TO_TRADES = \"TRADES/SUBSCRIBE_TO_TRADES\",\n  UNSUBSCRIBE_FROM_TRADES = \"TRADES/UNSUBSCRIBE_FROM_TRADES\",\n}\n\nexport interface SubscribeToTradesActionPayload {\n  symbol: string;\n}\n\nexport interface UnsubscribeFromTradesActionPayload {\n  symbol: string;\n}\n\nexport const TradesActions = {\n  subscribeToTrades: createAction<\n    TRADES_ACTION_TYPES.SUBSCRIBE_TO_TRADES,\n    SubscribeToTradesActionPayload\n  >(TRADES_ACTION_TYPES.SUBSCRIBE_TO_TRADES),\n  unsubscribeFromTrades: createAction<\n    TRADES_ACTION_TYPES.UNSUBSCRIBE_FROM_TRADES,\n    UnsubscribeFromTradesActionPayload\n  >(TRADES_ACTION_TYPES.UNSUBSCRIBE_FROM_TRADES),\n};\n\nexport type TradesActions = ActionUnion<typeof TradesActions>;\nexport type SubscribeToTrades = ReturnType<\n  typeof TradesActions.subscribeToTrades\n>;\nexport type UnsubscribeFromTrades = ReturnType<\n  typeof TradesActions.unsubscribeFromTrades\n>;\n","import { merge, of, from, EMPTY } from \"rxjs\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport {\n  switchMap,\n  take,\n  mergeMap,\n  filter,\n  map,\n  tap,\n  distinctUntilChanged,\n} from \"rxjs/operators\";\nimport { Actions } from \"modules/root\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { getCurrencyPairs } from \"modules/reference-data/selectors\";\nimport {\n  RefDataActions,\n  REF_DATA_ACTION_TYPES,\n} from \"modules/reference-data/actions\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport {\n  TRANSPORT_ACTION_TYPES,\n  ChangeConnectionStatus,\n} from \"core/transport/actions\";\nimport { parseCurrencyPair } from \"modules/reference-data/utils\";\nimport { TickerActions } from \"modules/ticker/actions\";\nimport { CandlesActions } from \"modules/candles/actions\";\nimport { RootState } from \"./../root\";\nimport { APP_ACTION_TYPES, BoostrapApp } from \"./actions\";\nimport { LoadRefDataAck } from \"./../reference-data/actions\";\nimport {\n  SELECTION_ACTION_TYPES,\n  SelectCurrencyPair,\n} from \"./../selection/actions\";\n\nconst bootstrap: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$,\n  { connection }\n) =>\n  action$.pipe(\n    ofType<Actions, BoostrapApp>(APP_ACTION_TYPES.BOOTSTRAP_APP),\n    switchMap(() => {\n      console.log(\"Bootstrap App\");\n      connection.connect();\n\n      return action$.pipe(\n        ofType<Actions, ChangeConnectionStatus>(\n          TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS\n        ),\n        filter((action) => action.payload === ConnectionStatus.Connected),\n        switchMap(() =>\n          merge(\n            of(RefDataActions.loadRefData()),\n            action$.pipe(\n              ofType<Actions, LoadRefDataAck>(\n                REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK\n              ),\n              take(1),\n              mergeMap(() => {\n                const currencyPairs = getCurrencyPairs(state$.value);\n                const tickerActions = currencyPairs.map((currencyPair) =>\n                  TickerActions.subscribeToTicker({\n                    symbol: currencyPair,\n                  })\n                );\n                const candleActions = currencyPairs.map((currencyPair) =>\n                  CandlesActions.subscribeToCandles({\n                    symbol: currencyPair,\n                    timeframe: \"5m\",\n                  })\n                );\n\n                return merge(\n                  of(\n                    SelectionActions.selectCurrencyPair({\n                      currencyPair: currencyPairs[0],\n                    })\n                  ),\n                  from(tickerActions),\n                  from(candleActions)\n                );\n              })\n            )\n          )\n        )\n      );\n    })\n  );\n\nconst updateTitle: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$\n) =>\n  action$.pipe(\n    ofType(SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR),\n    switchMap((action) => {\n      const { currencyPair } = (action as SelectCurrencyPair).payload;\n      const [, counter] = parseCurrencyPair(currencyPair);\n\n      return state$.pipe(\n        map((state) => state.ticker[currencyPair]),\n        distinctUntilChanged(),\n        filter((ticker) => typeof ticker !== \"undefined\"),\n        tap(\n          (ticker) =>\n            (document.title = `(${ticker.lastPrice?.toFixed(\n              2\n            )} ${counter}) Crypto Trader`)\n        ),\n        mergeMap(() => EMPTY)\n      );\n    })\n  );\n\nexport default combineEpics(bootstrap, updateTitle);\n","import { EMPTY, merge } from \"rxjs\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport {\n  filter,\n  mergeMap,\n  catchError,\n  timeout,\n  take,\n  concatMap,\n  map,\n  bufferTime,\n  takeUntil,\n} from \"rxjs/operators\";\nimport { of } from \"rxjs/internal/observable/of\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { RootState, Actions } from \"modules/root\";\nimport {\n  TRANSPORT_ACTION_TYPES,\n  SendMessage,\n  ReceiveMessage,\n  TransportActions,\n  SubscribeToChannel,\n  SubscribeToChannelAck,\n  UnsubscribeFromChannel,\n} from \"./actions\";\n\nexport const SUBSCRIPTION_TIMEOUT_IN_MS = 5000;\nexport const HEARTBEAT_TIMEOUT_IN_MS = 20000;\n\nexport const handleSendMessage: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$, { connection }) =>\n  action$.pipe(\n    ofType<Actions, SendMessage>(TRANSPORT_ACTION_TYPES.SEND_MESSAGE),\n    mergeMap((action) => {\n      connection.send(JSON.stringify(action.payload));\n      return EMPTY;\n    })\n  );\n\n/*\n    The Bitfinex WS api appears to have some limitations when it comes to subscriptions.\n    Because requests/responses don't have a correlation id, we can't run concurrent requests safely.\n    Therefore, we queue subscription requests and process them sequencially.\n*/\nexport const handleSubscription: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType<Actions, SubscribeToChannel | UnsubscribeFromChannel>(\n      TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL,\n      TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL\n    ),\n    concatMap((rootAction) => {\n      const isSubscribing =\n        rootAction.type === TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL;\n\n      return merge(\n        action$.pipe(\n          ofType<Actions, ReceiveMessage>(\n            TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE\n          ),\n          filter((action) => {\n            return (\n              (isSubscribing &&\n                action.payload.event === \"subscribed\" &&\n                action.payload.channel ===\n                  (rootAction as SubscribeToChannel).payload.channel) ||\n              (!isSubscribing && action.payload.event === \"unsubscribed\") ||\n              action.payload.event === \"error\"\n            );\n          }),\n          take(1),\n          timeout(SUBSCRIPTION_TIMEOUT_IN_MS),\n          map((receiveMessageAction) => {\n            if (receiveMessageAction.payload.event === \"error\") {\n              return isSubscribing\n                ? TransportActions.subscribeToChannelNack({\n                    error: receiveMessageAction.payload.msg,\n                  })\n                : TransportActions.unsubscribeFromChannelNack();\n            } else {\n              const {\n                channel,\n                chanId: channelId,\n              } = receiveMessageAction.payload;\n\n              return isSubscribing\n                ? TransportActions.subscribeToChannelAck({\n                    channel,\n                    channelId,\n                    request: (rootAction as SubscribeToChannel).payload,\n                  })\n                : TransportActions.unsubscribeFromChannelAck({\n                    channelId,\n                  });\n            }\n          }),\n          catchError(() =>\n            isSubscribing\n              ? of(\n                  TransportActions.subscribeToChannelNack({\n                    error: \"Timeout\",\n                  })\n                )\n              : of(TransportActions.unsubscribeFromChannelNack())\n          )\n        ),\n        isSubscribing\n          ? of(\n              TransportActions.sendMessage({\n                event: \"subscribe\",\n                ...(rootAction as SubscribeToChannel).payload,\n              })\n            )\n          : of(\n              TransportActions.sendMessage({\n                event: \"unsubscribe\",\n                chanId: (rootAction as UnsubscribeFromChannel).payload\n                  .channelId,\n              })\n            )\n      );\n    })\n  );\n};\n\nexport const handleStaleSubscription: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType<Actions, SubscribeToChannelAck>(\n      TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK\n    ),\n    mergeMap((subscribeAction) => {\n      const { channelId } = subscribeAction.payload;\n      return action$.pipe(\n        ofType<Actions, ReceiveMessage>(TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE),\n        filter((action) => action.payload[0] === channelId),\n        bufferTime(HEARTBEAT_TIMEOUT_IN_MS),\n        mergeMap((actions) => {\n          if (actions.length === 0) {\n            return of(TransportActions.staleSubscription({ channelId }));\n          }\n          return EMPTY;\n        }),\n        takeUntil(\n          action$.pipe(\n            ofType<Actions, UnsubscribeFromChannel>(\n              TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL\n            ),\n            filter((action) => action.payload.channelId === channelId)\n          )\n        )\n      );\n    })\n  );\n};\n\nexport default combineEpics(\n  handleSendMessage,\n  handleSubscription,\n  handleStaleSubscription\n);\n","import { unsubscribeFromBook } from \"./epics\";\nimport { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum BOOK_ACTION_TYPES {\n  SUBSCRIBE_TO_BOOK = \"BOOK/SUBSCRIBE_TO_BOOK\",\n  UNSUBSCRIBE_FROM_BOOK = \"BOOK/UNSUBSCRIBE_FROM_BOOK\",\n}\n\nexport interface SubscribeToBookActionPayload {\n  symbol: string;\n}\n\nexport interface UnsubscribeFromBookActionPayload {\n  symbol: string;\n}\n\nexport const BookActions = {\n  subscribeToBook: createAction<\n    BOOK_ACTION_TYPES.SUBSCRIBE_TO_BOOK,\n    SubscribeToBookActionPayload\n  >(BOOK_ACTION_TYPES.SUBSCRIBE_TO_BOOK),\n  unsubscribeFromBook: createAction<\n    BOOK_ACTION_TYPES.UNSUBSCRIBE_FROM_BOOK,\n    UnsubscribeFromBookActionPayload\n  >(BOOK_ACTION_TYPES.UNSUBSCRIBE_FROM_BOOK),\n};\n\nexport type BookActions = ActionUnion<typeof BookActions>;\nexport type SubscribeToBook = ReturnType<typeof BookActions.subscribeToBook>;\nexport type UnsubscribeFromBook = ReturnType<\n  typeof BookActions.unsubscribeFromBook\n>;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\nimport { Channel } from \"./types/Channels\";\n\nconst subscriptionsSelector = (state: RootState) => state.subscriptions;\n\nexport const getSubscriptions = createSelector(\n  subscriptionsSelector,\n  (subscriptions) => subscriptions\n);\n\nexport const getSubscriptionId = createSelector(\n  getSubscriptions,\n  (subscriptions) => (channel: Channel, request: any = {}) => {\n    const channelIds = Object.keys(subscriptions).map(Number);\n\n    return channelIds.find((channelId) => {\n      return (\n        subscriptions[channelId].channel === channel &&\n        Object.keys(request).every(\n          (key) => request[key] === subscriptions[channelId].request[key]\n        )\n      );\n    });\n  }\n);\n\nexport const getIsSubscriptionStale = createSelector(\n  getSubscriptions,\n  (subscriptions) => (subscriptionId: number) =>\n    Boolean((subscriptions[subscriptionId] || {}).isStale)\n);\n","import { UnsubscribeFromTrades } from \"./actions\";\nimport { TradesChannel } from \"core/transport/types/Channels\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { RootState, Actions } from \"modules/root\";\nimport { SubscribeToTrades, TRADES_ACTION_TYPES } from \"modules/trades/actions\";\nimport { Dependencies } from \"./../redux/store\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { from } from \"rxjs\";\n\nexport const subscribeToTrades: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToTrades>(TRADES_ACTION_TYPES.SUBSCRIBE_TO_TRADES),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"trades\" as TradesChannel,\n        symbol: `t${symbol}`,\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromTrades: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType<Actions, UnsubscribeFromTrades>(\n      TRADES_ACTION_TYPES.UNSUBSCRIBE_FROM_TRADES\n    ),\n    mergeMap((action) => {\n      const { symbol } = action.payload;\n      const result: Actions[] = [];\n      const channelId = getSubscriptionId(state$.value)(\"trades\", {\n        symbol: `t${symbol}`,\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find trades subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToTrades, unsubscribeFromTrades);\n","import { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { switchMap, map, catchError } from \"rxjs/operators\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { of } from \"rxjs\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { RootState, Actions } from \"modules/root\";\nimport { REF_DATA_ACTION_TYPES, RefDataActions, LoadRefData } from \"./actions\";\n\nexport const loadRefData: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$\n) =>\n  action$.pipe(\n    ofType<Actions, LoadRefData>(REF_DATA_ACTION_TYPES.LOAD_REF_DATA),\n    switchMap(() => {\n      return fromFetch(\"data/currencyPairs.json\").pipe(\n        switchMap((response) => response.json()),\n        map((result) =>\n          RefDataActions.loadRefDataAck({\n            currencyPairs: result as string[],\n          })\n        ),\n        catchError(() => of(RefDataActions.loadRefDataNack()))\n      );\n    })\n  );\n\nexport default combineEpics(loadRefData);\n","import { map } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { TickerChannel } from \"core/transport/types/Channels\";\nimport { RootState, Actions } from \"modules/root\";\nimport { SubscribeToTicker, TICKER_ACTION_TYPES } from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToTicker: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToTicker>(TICKER_ACTION_TYPES.SUBSCRIBE_TO_TICKER),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"ticker\" as TickerChannel,\n        symbol: `t${symbol}`,\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport default combineEpics(subscribeToTicker);\n","import { from } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { RootState, Actions } from \"modules/root\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { CandlesChannel } from \"core/transport/types/Channels\";\nimport { TransportActions } from \"core/transport/actions\";\nimport {\n  SubscribeToCandles,\n  CANDLES_ACTION_TYPES,\n  UnsubscribeFromCandles,\n} from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToCandles: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType<Actions, SubscribeToCandles>(\n      CANDLES_ACTION_TYPES.SUBSCRIBE_TO_CANDLES\n    ),\n    map((action) => {\n      const { symbol, timeframe } = action.payload;\n      const msg = {\n        channel: \"candles\" as CandlesChannel,\n        key: [\"trade\", timeframe, `t${symbol}`].join(\":\"),\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromCandles: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType<Actions, UnsubscribeFromCandles>(\n      CANDLES_ACTION_TYPES.UNSUBSCRIBE_FROM_CANDLES\n    ),\n    mergeMap((action) => {\n      const { symbol, timeframe } = action.payload;\n      const result: Actions[] = [];\n\n      const channelId = getSubscriptionId(state$.value)(\"candles\", {\n        key: [\"trade\", timeframe, `t${symbol}`].join(\":\"),\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find candles subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToCandles, unsubscribeFromCandles);\n","import { createAction, ActionUnion } from \"../redux/utils\";\n\nexport enum PING_ACTION_TYPES {\n  UPDATE_LATENCY = \"PING/UPDATE_LATENCY\",\n}\n\ninterface UpdateLatencyActionPayload {\n  latency: number;\n}\n\nexport const PingActions = {\n  updateLatency: createAction<\n    PING_ACTION_TYPES.UPDATE_LATENCY,\n    UpdateLatencyActionPayload\n  >(PING_ACTION_TYPES.UPDATE_LATENCY),\n};\n\nexport type PingActions = ActionUnion<typeof PingActions>;\nexport type UpdateLatency = ReturnType<typeof PingActions.updateLatency>;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst selectionSelector = (state: RootState) => state.selection;\n\nexport const getSelectedCurrencyPair = createSelector(\n  selectionSelector,\n  (selection) => selection.currencyPair\n);\n","import { from } from \"rxjs\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { switchMap, pairwise, withLatestFrom } from \"rxjs/operators\";\nimport { Actions } from \"modules/root\";\nimport { TradesActions } from \"modules/trades/actions\";\nimport { CandlesActions } from \"modules/candles/actions\";\nimport { BookActions } from \"modules/book/actions\";\nimport { RootState } from \"./../root\";\nimport { Dependencies } from \"./../redux/store\";\nimport { SELECTION_ACTION_TYPES, SelectCurrencyPair } from \"./actions\";\nimport { getSelectedCurrencyPair } from \"./selectors\";\n\nexport const handleSelection: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) => {\n  const statePairs$ = state$.pipe(pairwise());\n  return action$.pipe(\n    ofType<Actions, SelectCurrencyPair>(\n      SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR\n    ),\n    withLatestFrom(statePairs$),\n    switchMap(([action, [oldState, newState]]) => {\n      const oldCurrencyPair = getSelectedCurrencyPair(oldState);\n      const { currencyPair } = action.payload;\n      const unsubscribeActions = [];\n      if (oldCurrencyPair) {\n        unsubscribeActions.push(\n          CandlesActions.unsubscribeFromCandles({\n            symbol: oldCurrencyPair,\n            timeframe: \"1m\",\n          }),\n          TradesActions.unsubscribeFromTrades({ symbol: oldCurrencyPair }),\n          BookActions.unsubscribeFromBook({ symbol: oldCurrencyPair })\n        );\n      }\n\n      const subscribeActions = [\n        CandlesActions.subscribeToCandles({\n          symbol: currencyPair,\n          timeframe: \"1m\",\n        }),\n        TradesActions.subscribeToTrades({ symbol: currencyPair }),\n        BookActions.subscribeToBook({ symbol: currencyPair }),\n      ];\n\n      return from([...unsubscribeActions, ...subscribeActions]);\n    })\n  );\n};\n\nexport default combineEpics(handleSelection);\n","import { from } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, ofType, combineEpics } from \"redux-observable\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { BookChannel } from \"core/transport/types/Channels\";\nimport { RootState, Actions } from \"modules/root\";\nimport {\n  SubscribeToBook,\n  BOOK_ACTION_TYPES,\n  UnsubscribeFromBook,\n} from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToBook: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType(BOOK_ACTION_TYPES.SUBSCRIBE_TO_BOOK),\n    map((action) => {\n      const { symbol } = (action as SubscribeToBook).payload;\n      const msg = {\n        channel: \"book\" as BookChannel,\n        symbol: `t${symbol}`,\n        prec: \"R0\",\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromBook: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType(BOOK_ACTION_TYPES.UNSUBSCRIBE_FROM_BOOK),\n    mergeMap((action) => {\n      const { symbol } = (action as UnsubscribeFromBook).payload;\n      const result: Actions[] = [];\n      const channelId = getSubscriptionId(state$.value)(\"book\", {\n        symbol: `t${symbol}`,\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find book subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToBook, unsubscribeFromBook);\n","import { combineEpics, Epic, ofType } from \"redux-observable\";\nimport { interval, merge, of } from \"rxjs\";\nimport { filter, switchMap, map } from \"rxjs/operators\";\nimport { PingActions } from \"./actions\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { Actions, RootState } from \"modules/root\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport { ChangeConnectionStatus } from \"core/transport/actions\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\n\nexport const PING_INTERVAL_IN_MS = 5000;\n\nexport const pingPong: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$\n) =>\n  action$.pipe(\n    ofType<Actions, ChangeConnectionStatus>(\n      TRANSPORT_ACTION_TYPES.CHANGE_CONNECTION_STATUS\n    ),\n    filter((action) => action.payload === ConnectionStatus.Connected),\n    switchMap(() => {\n      return interval(PING_INTERVAL_IN_MS).pipe(\n        switchMap((cid) => {\n          const pingTimestamp = Date.now();\n          return merge(\n            action$.pipe(\n              ofType<Actions, ReceiveMessage>(\n                TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE\n              ),\n              filter(\n                (action) =>\n                  !Array.isArray(action.payload) &&\n                  action.payload.event === \"pong\" &&\n                  action.payload.cid === cid\n              ),\n              map(() =>\n                PingActions.updateLatency({\n                  latency: Date.now() - pingTimestamp,\n                })\n              )\n            ),\n            of(\n              TransportActions.sendMessage({\n                event: \"ping\",\n                cid,\n              })\n            )\n          );\n        })\n      );\n    })\n  );\n\nexport default combineEpics(pingPong);\n","import { ReceiveMessage } from \"./actions\";\n\nexport function isHeartbeat(action: ReceiveMessage) {\n  return Array.isArray(action.payload) && action.payload[1] === \"hb\";\n}\n\nexport function isSubscriptionMessage(action: ReceiveMessage) {\n  return action.payload.event === \"subscribed\";\n}\n\nexport function isUnsubscriptionMessage(action: ReceiveMessage) {\n  return action.payload.event === \"unsubscribed\";\n}\n\nexport function isErrorMessage(action: ReceiveMessage) {\n  return action.payload.event === \"error\";\n}\n","import { createReducer } from \"modules/redux/utils\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { Actions } from \"./../root\";\nimport { Trade } from \"./types/Trade\";\n\ntype SymbolState = Trade[];\n\nexport const MAX_TRADES = 100;\n\nexport interface TradesState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: TradesState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, trades] = action.payload;\n  return trades\n    .sort((a: number[], b: number[]) => b[1] - a[1])\n    .map(([id, timestamp, amount, price]: number[]) => ({\n      id,\n      timestamp,\n      amount,\n      price,\n    }));\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, , trade] = action.payload;\n  const [id, timestamp, amount, price] = trade;\n  const existingTradeIndex = state.findIndex((x) => x.id === id);\n  const newOrUpdatedTrade = {\n    id,\n    timestamp,\n    amount,\n    price,\n  };\n\n  if (existingTradeIndex >= 0) {\n    const updatedState = state.slice();\n    updatedState.splice(existingTradeIndex, 1, newOrUpdatedTrade);\n    return updatedState;\n  } else {\n    return [newOrUpdatedTrade, ...state];\n  }\n}\n\nconst receiveMessageReducer = (state: TradesState, action: ReceiveMessage) => {\n  if (\n    isHeartbeat(action) ||\n    isSubscriptionMessage(action) ||\n    isErrorMessage(action)\n  ) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n  if (channel === \"trades\") {\n    const { symbol } = request;\n    const currencyPair = symbol.slice(1);\n    if (isUnsubscriptionMessage(action)) {\n      const updatedState = {\n        ...state,\n      };\n      delete updatedState[currencyPair];\n      return updatedState;\n    }\n\n    const symbolReducer = Array.isArray(action.payload[1])\n      ? snapshotReducer\n      : updateReducer;\n    const result = symbolReducer(state[currencyPair], action);\n\n    return {\n      ...state,\n      [currencyPair]: result.slice(0, MAX_TRADES), // only keep the top x trades, so we don't eventually fill up the memory\n    };\n  }\n\n  return state;\n};\n\nexport const tradesReducer = createReducer<TradesState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default tradesReducer;\n","import { isHeartbeat } from \"core/transport/utils\";\nimport { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"modules/root\";\nimport {\n  TRANSPORT_ACTION_TYPES,\n  ReceiveMessage,\n  StaleSubscription,\n} from \"core/transport/actions\";\nimport { SubscribeToChannelAck, UnsubscribeFromChannelAck } from \"./actions\";\n\nexport interface SubscriptionState {\n  [key: number]: { channel: string; request: any; isStale?: boolean };\n}\n\nconst initialState: SubscriptionState = {};\n\nconst subscribeToChannelAckReducer = (\n  state: SubscriptionState,\n  action: SubscribeToChannelAck\n) => {\n  const { request, channel, channelId } = action.payload;\n\n  return {\n    ...state,\n    [channelId]: {\n      channel,\n      request,\n    },\n  };\n};\n\nconst unsubscribeFromChannelAckReducer = (\n  state: SubscriptionState,\n  action: UnsubscribeFromChannelAck\n) => {\n  const { channelId } = action.payload;\n\n  const updatedState = {\n    ...state,\n  };\n  delete updatedState[channelId];\n  return updatedState;\n};\n\nconst receiveMessageReducer = (\n  state: SubscriptionState,\n  action: ReceiveMessage\n) => {\n  if (isHeartbeat(action)) {\n    const [channelId] = action.payload;\n\n    return {\n      ...state,\n      [channelId]: {\n        ...state[channelId],\n        isStale: false,\n      },\n    };\n  }\n  return state;\n};\n\nconst staleSubscriptionReducer = (\n  state: SubscriptionState,\n  action: StaleSubscription\n) => {\n  const { channelId } = action.payload;\n\n  return {\n    ...state,\n    [channelId]: {\n      ...state[channelId],\n      isStale: true,\n    },\n  };\n};\n\nexport const subscriptionsReducer = createReducer<SubscriptionState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.SUBSCRIBE_TO_CHANNEL_ACK]: subscribeToChannelAckReducer,\n    [TRANSPORT_ACTION_TYPES.UNSUBSCRIBE_FROM_CHANNEL_ACK]: unsubscribeFromChannelAckReducer,\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n    [TRANSPORT_ACTION_TYPES.STALE_SUBSCRIPTION]: staleSubscriptionReducer,\n  },\n  initialState\n);\n\nexport default subscriptionsReducer;\n","import { Actions } from \"modules/root\";\nimport { REF_DATA_ACTION_TYPES, LoadRefDataAck } from \"./actions\";\nimport { createReducer } from \"modules/redux/utils\";\n\ninterface RefDataState {\n  currencyPairs: string[];\n}\n\nconst initialState: RefDataState = {\n  currencyPairs: [],\n};\n\nconst loadRefDataReducer = (state: RefDataState, action: LoadRefDataAck) => {\n  const { currencyPairs } = action.payload;\n\n  return {\n    ...state,\n    currencyPairs,\n  };\n};\n\nexport const refDataReducer = createReducer<RefDataState, Actions>(\n  {\n    [REF_DATA_ACTION_TYPES.LOAD_REF_DATA_ACK]: loadRefDataReducer,\n  },\n  initialState\n);\n\nexport default refDataReducer;\n","import { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"./../root\";\nimport { TRANSPORT_ACTION_TYPES, ReceiveMessage } from \"core/transport/actions\";\nimport { isHeartbeat } from \"core/transport/utils\";\nimport { Ticker } from \"./types/Ticker\";\n\nexport interface TickerState {\n  [symbol: string]: Ticker;\n}\n\nconst initialState: TickerState = {};\n\nconst receiveMessageReducer = (state: TickerState, action: ReceiveMessage) => {\n  if (isHeartbeat(action)) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n  if (channel === \"ticker\") {\n    const { symbol } = request;\n    const currencyPair = symbol.slice(1);\n    const [\n      ,\n      [\n        bid,\n        bidSize,\n        ask,\n        askSize,\n        dailyChange,\n        dailyChangeRelative,\n        lastPrice,\n        volume,\n        high,\n        low,\n      ],\n    ] = action.payload;\n\n    return {\n      ...state,\n      [currencyPair]: {\n        currencyPair,\n        bid,\n        bidSize,\n        ask,\n        askSize,\n        dailyChange,\n        dailyChangeRelative,\n        lastPrice,\n        volume,\n        high,\n        low,\n      },\n    };\n  }\n\n  return state;\n};\n\nexport const tickerReducer = createReducer<TickerState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default tickerReducer;\n","export const getLookupKey = (currencyPair: string, timeframe: string) =>\n  [currencyPair, timeframe].join(\":\");\n","import { createReducer } from \"modules/redux/utils\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { getLookupKey } from \"./utils\";\nimport { Actions } from \"./../root\";\nimport { Candle } from \"./types/Candle\";\n\nconst MAX_CANDLES = 100;\n\ntype SymbolState = Candle[];\n\nexport interface CandlesState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: CandlesState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, candles] = action.payload;\n  return candles\n    .map(([timestamp, open, close, high, low, volume]: number[]) => ({\n      timestamp,\n      open,\n      close,\n      high,\n      low,\n      volume,\n    }))\n    .sort((a: Candle, b: Candle) => b.timestamp - a.timestamp);\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, candle] = action.payload;\n  const [timestamp, open, close, high, low, volume] = candle;\n  const candleIndex = state.findIndex((c) => c.timestamp === timestamp);\n  const newOrUpdatedCandle = {\n    timestamp,\n    open,\n    close,\n    high,\n    low,\n    volume,\n  };\n\n  if (candleIndex >= 0) {\n    const updatedState = state.slice();\n    updatedState.splice(candleIndex, 1, newOrUpdatedCandle);\n    return updatedState;\n  }\n  return [newOrUpdatedCandle, ...state];\n}\n\nconst receiveMessageReducer = (state: CandlesState, action: ReceiveMessage) => {\n  if (\n    isHeartbeat(action) ||\n    isSubscriptionMessage(action) ||\n    isErrorMessage(action)\n  ) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n  if (channel === \"candles\") {\n    const { key } = request;\n    const [, timeframe, symbol] = key.split(\":\");\n    const currencyPair = symbol.slice(1);\n    const lookupKey = getLookupKey(currencyPair, timeframe);\n\n    if (isUnsubscriptionMessage(action)) {\n      const updatedState = {\n        ...state,\n      };\n      delete updatedState[lookupKey];\n      return updatedState;\n    }\n\n    const symbolReducer = Array.isArray(action.payload[1][0])\n      ? snapshotReducer\n      : updateReducer;\n    const result = symbolReducer(state[lookupKey], action);\n\n    return {\n      ...state,\n      [lookupKey]: result.slice(0, MAX_CANDLES), // restrict number of candles so we don't eventully fill up the memory\n    };\n  }\n\n  return state;\n};\n\nexport const candlesReducer = createReducer<CandlesState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default candlesReducer;\n","import { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"modules/root\";\nimport { SELECTION_ACTION_TYPES, SelectCurrencyPair } from \"./actions\";\n\ninterface SelectionState {\n  currencyPair?: string;\n}\n\nconst initialState: SelectionState = {};\n\nconst selectCurrencyPair = (\n  state: SelectionState,\n  action: SelectCurrencyPair\n) => {\n  const { currencyPair } = action.payload;\n\n  return {\n    ...state,\n    currencyPair,\n  };\n};\n\nexport const selectionReducer = createReducer<SelectionState, Actions>(\n  {\n    [SELECTION_ACTION_TYPES.SELECT_CURRENCY_PAIR]: selectCurrencyPair,\n  },\n  initialState\n);\n\nexport default selectionReducer;\n","import { Actions } from \"modules/root\";\nimport { TRANSPORT_ACTION_TYPES } from \"core/transport/actions\";\nimport { createReducer } from \"modules/redux/utils\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { Order } from \"./types/Order\";\n\ntype SymbolState = Order[];\n\nexport interface BookState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: BookState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, orders] = action.payload;\n  return orders.map(([id, price, amount]: any[]) => ({\n    id,\n    price,\n    amount,\n  }));\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, order] = action.payload;\n  const [id, price, amount] = order;\n  const existingOrderIndex = state.findIndex((x) => x.id === id);\n  const newOrUpdatedOrder = {\n    id,\n    price,\n    amount,\n  };\n\n  if (price === 0 && existingOrderIndex >= 0) {\n    // remove\n    const updatedState = state.slice();\n    updatedState.splice(existingOrderIndex, 1);\n    return updatedState;\n  } else if (existingOrderIndex >= 0) {\n    // update\n    const updatedState = state.slice();\n    updatedState.splice(existingOrderIndex, 1, newOrUpdatedOrder);\n    return updatedState;\n  } else {\n    // add\n    return [...state, newOrUpdatedOrder];\n  }\n}\n\nconst receiveMessageReducer = (state: BookState, action: ReceiveMessage) => {\n  if (\n    isHeartbeat(action) ||\n    isSubscriptionMessage(action) ||\n    isErrorMessage(action)\n  ) {\n    return state;\n  }\n\n  const { channel, request } = action.meta || {};\n\n  if (channel === \"book\") {\n    const { symbol } = request;\n    const currencyPair = symbol.slice(1);\n\n    if (isUnsubscriptionMessage(action)) {\n      const updatedState = {\n        ...state,\n      };\n      delete updatedState[currencyPair];\n      return updatedState;\n    }\n\n    const symbolReducer = Array.isArray(action.payload[1][0])\n      ? snapshotReducer\n      : updateReducer;\n    const result = symbolReducer(state[currencyPair], action);\n    return {\n      ...state,\n      [currencyPair]: result,\n    };\n  }\n\n  return state;\n};\n\nexport const bookReducer = createReducer<BookState, Actions>(\n  {\n    [TRANSPORT_ACTION_TYPES.RECEIVE_MESSAGE]: receiveMessageReducer,\n  },\n  initialState\n);\n\nexport default bookReducer;\n","import { createReducer } from \"modules/redux/utils\";\nimport { Actions } from \"./../root\";\nimport { UpdateLatency, PING_ACTION_TYPES } from \"./actions\";\n\ninterface PingState {\n  latency?: number;\n}\n\nconst initialState = {};\n\nconst updateLatencyReducer = (state: PingState, action: UpdateLatency) => {\n  const { latency } = action.payload;\n\n  return {\n    ...state,\n    latency,\n  };\n};\n\nexport const pingReducer = createReducer<PingState, Actions>(\n  {\n    [PING_ACTION_TYPES.UPDATE_LATENCY]: updateLatencyReducer,\n  },\n  initialState\n);\n\nexport default pingReducer;\n","import { combineEpics } from \"redux-observable\";\nimport { combineReducers } from \"redux\";\nimport { BookActions } from \"./book/actions\";\nimport { SelectionActions } from \"./selection/actions\";\nimport { CandlesActions } from \"./candles/actions\";\nimport { TickerActions } from \"./ticker/actions\";\nimport { RefDataActions } from \"./reference-data/actions\";\nimport { PingActions } from \"./ping/actions\";\nimport appEpics from \"./app/epics\";\nimport transportEpics from \"../core/transport/epics\";\nimport tradeEpics from \"./trades/epics\";\nimport refDataEpics from \"./reference-data/epics\";\nimport tickerEpics from \"./ticker/epics\";\nimport candlesEpics from \"./candles/epics\";\nimport selectionEpics from \"./selection/epics\";\nimport bookEpics from \"./book/epics\";\nimport pingEpics from \"./ping/epics\";\nimport { AppActions } from \"./app/actions\";\nimport { TradesActions } from \"./trades/actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { tradesReducer } from \"./trades/reducer\";\nimport { subscriptionsReducer } from \"core/transport/reducer\";\nimport { refDataReducer } from \"./reference-data/reducer\";\nimport { tickerReducer } from \"./ticker/reducer\";\nimport { candlesReducer } from \"./candles/reducer\";\nimport { selectionReducer } from \"./selection/reducer\";\nimport { bookReducer } from \"./book/reducer\";\nimport { pingReducer } from \"./ping/reducer\";\n\nexport const rootEpic = combineEpics(\n  appEpics,\n  refDataEpics,\n  transportEpics,\n  tradeEpics,\n  tickerEpics,\n  candlesEpics,\n  selectionEpics,\n  bookEpics,\n  pingEpics\n);\n\nexport const rootReducer = combineReducers({\n  refData: refDataReducer,\n  subscriptions: subscriptionsReducer,\n  trades: tradesReducer,\n  ticker: tickerReducer,\n  candles: candlesReducer,\n  selection: selectionReducer,\n  book: bookReducer,\n  ping: pingReducer,\n});\n\nexport type Actions =\n  | AppActions\n  | RefDataActions\n  | TransportActions\n  | TradesActions\n  | TickerActions\n  | CandlesActions\n  | SelectionActions\n  | BookActions\n  | PingActions;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport createWsMiddleware from \"core/transport/middleware\";\nimport { WsConnectionProxy } from \"core/transport/WsConnectionProxy\";\nimport { Connection } from \"core/transport/Connection\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { Actions, RootState } from \"./../root\";\nimport { rootEpic, rootReducer } from \"../root\";\n\nconst connectionProxy = new WsConnectionProxy(\n  \"wss://api-pub.bitfinex.com/ws/2\"\n);\n\nconst connection = new Connection(connectionProxy);\n\nconst dependencies = {\n  connection,\n};\n\nexport type Dependencies = typeof dependencies;\n\nconst epicMiddleware = createEpicMiddleware<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n>({\n  dependencies,\n});\n\nconst wsMiddleware = createWsMiddleware({ connection });\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(wsMiddleware, epicMiddleware))\n  );\n\n  connection.onConnect(() => {\n    store.dispatch(\n      TransportActions.changeConnectionStatus(ConnectionStatus.Connected)\n    );\n    console.log(\"Connected\");\n  });\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import { useMemo, useEffect, useState } from \"react\";\nimport { throttle } from \"lodash\";\n\nexport const useThrottleFn = <T extends (...args: any) => any>(\n  fn: T,\n  ms = 1000\n) => {\n  const throttledFn = useMemo(() => {\n    return throttle(fn, ms);\n  }, [fn, ms]);\n\n  // fn may call setState.\n  useEffect(() => {\n    return () => {\n      throttledFn.cancel();\n    };\n  }, [throttledFn]);\n  return throttledFn;\n};\n\nexport const useThrottle = <T>(value: T, ms = 1000) => {\n  const [throttledValue, setThrottledValue] = useState(value);\n  const setThrottledValueThrottled = useThrottleFn(setThrottledValue, ms);\n  setThrottledValueThrottled(value);\n  return throttledValue;\n};\n","import {\n  formatPrice,\n  formatAmount,\n  formatVolume,\n  formatTime,\n} from \"modules/reference-data/utils\";\n\nexport const priceFormatter = (params: { value: number }) =>\n  formatPrice(params.value);\n\nexport const amountFormatter = (params: { value: number }) =>\n  formatAmount(params.value);\n\nexport const volumeFormatter = (params: { value: number }) =>\n  formatVolume(params.value);\n\nexport const timeFormatter = (params: { value: number }) =>\n  formatTime(params.value);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  font-family: FiraSans-Light;\n  position: relative;\n`;\n","const Palette = {\n  Bid: \"#00AD08\",\n  Ask: \"#FF264D\",\n  BidTransparent: \"rgba(0, 173, 8, 0.2)\",\n  AskTransparent: \"rgba(255, 38, 77, 0.2)\",\n  Positive: \"#00AD08\",\n  Negative: \"#FF264D\",\n  Orange: \"#FFA41B\",\n  White: \"#FFF\",\n  BackgroundColor: \"#222\",\n  Label: \"rgba(245, 245, 245, 0.64)\",\n  Border: \"#424242\",\n  LightGray: \"rgba(245, 245, 245, 0.64)\",\n  DarkGray: \"#63666D\",\n};\n\nexport default Palette;\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(34, 34, 34, 0.7);\n  pointer-events: none;\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  color: ${Palette.White};\n  font-family: FiraSans-Medium;\n  font-size: 14px;\n`;\n","import Stale from \"./Stale\";\n\nexport default Stale;\n","import React, { FC } from \"react\";\nimport { Container, Content } from \"./Stale.styled\";\n\nconst Stale: FC<{}> = () => {\n  return (\n    <Container>\n      <Content>Stale...</Content>\n    </Container>\n  );\n};\n\nexport default Stale;\n","import React, { FC } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef } from \"ag-grid-community\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport {\n  priceFormatter,\n  amountFormatter,\n  timeFormatter,\n} from \"modules/ag-grid/formatter\";\nimport { Trade } from \"../../types/Trade\";\nimport { Container } from \"./Trades.styled\";\nimport Palette from \"theme/style\";\nimport Stale from \"core/components/Stale\";\n\nexport interface Props {\n  trades: Trade[];\n  isStale: boolean;\n}\n\nconst Trades: FC<Props> = (props) => {\n  const { trades, isStale } = props;\n  const throttledTrades = useThrottle<Trade[]>(trades, 500);\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Id\",\n      field: \"id\",\n      hide: true,\n    },\n    {\n      headerName: \"Amount\",\n      field: \"amount\",\n      valueFormatter: (params) =>\n        amountFormatter({ value: Math.abs(params.value) }),\n    },\n    {\n      headerName: \"Price\",\n      field: \"price\",\n      cellStyle: (params) => {\n        return {\n          color: params.value < 0 ? Palette.Ask : Palette.Bid,\n        };\n      },\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Time\",\n      field: \"timestamp\",\n      valueFormatter: timeFormatter,\n      cellStyle: () => ({\n        color: Palette.LightGray,\n      }),\n    },\n  ];\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      {isStale && <Stale />}\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={throttledTrades}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => data.id}\n        onGridReady={(event) => event.api.sizeColumnsToFit()}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Trades;\n","import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash\";\nimport { RootState } from \"modules/root\";\n\nconst tradesSelector = (state: RootState) => state.trades;\n\nexport const getTrades = createSelector(tradesSelector, (trades) =>\n  memoize((symbol: string) => trades[symbol])\n);\n","import Trades from \"./Trades.container\";\n\nexport default Trades;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport Trades, { Props } from \"./Trades\";\nimport { getTrades } from \"../../selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const trades = selectedCurrencyPair\n    ? getTrades(state)(selectedCurrencyPair)\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"trades\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    trades,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(Trades);\n","import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { getLookupKey } from \"./utils\";\nimport { Candle } from \"./types/Candle\";\n\nconst DEFAULT_CANDLES: Candle[] = [];\n\nexport const candlesSelector = (state: RootState) => state.candles;\n\nexport const getCandles = createSelector(candlesSelector, (candles) =>\n  memoize(\n    (currencyPair: string, timeframe: string) =>\n      candles[getLookupKey(currencyPair, timeframe)] || DEFAULT_CANDLES,\n    (currencyPair, timeframe) => `${currencyPair}:${timeframe}`\n  )\n);\n","import { createSelector } from \"reselect\";\nimport { memoize, range } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { getCurrencyPairs } from \"modules/reference-data/selectors\";\nimport { candlesSelector } from \"modules/candles/selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getValueAt } from \"core/utils\";\nimport { getLookupKey } from \"./../candles/utils\";\n\nconst tickerSelector = (state: RootState) => state.ticker;\n\nexport const getTicker = createSelector(tickerSelector, (ticker) =>\n  memoize((symbol: string) => ticker[symbol])\n);\n\nexport const getTickers = createSelector(\n  getCurrencyPairs,\n  tickerSelector,\n  (currencyPairs, ticker) =>\n    currencyPairs.map((currencyPair) => ({\n      currencyPair,\n      ...ticker[currencyPair],\n    }))\n);\n\nexport const getVisibleCurrencyPairTickers = createSelector(\n  getCurrencyPairs,\n  getSelectedCurrencyPair,\n  (allCurrencyPairs, selectedCurrencyPair) => {\n    let currencyPairs: string[] = [];\n\n    const selectedCurrencyPairIndex = allCurrencyPairs.indexOf(\n      selectedCurrencyPair || \"\"\n    );\n\n    // Pick a few currency pairs on each side of the selected one\n    if (selectedCurrencyPairIndex >= 0) {\n      currencyPairs = range(\n        selectedCurrencyPairIndex - 2,\n        selectedCurrencyPairIndex + 3\n      ).map((index) => getValueAt(allCurrencyPairs)(index));\n    }\n\n    return {\n      currencyPairs,\n      selectedCurrencyPairIndex,\n    };\n  }\n);\n\nexport const getTickersWithPrices = createSelector(\n  getTickers,\n  candlesSelector,\n  (tickers, candles) => {\n    return tickers.map((ticker) => ({\n      ...ticker,\n      prices: (candles[getLookupKey(ticker.currencyPair, \"5m\")] || []).map(\n        (ticker) => ticker.close\n      ),\n    }));\n  }\n);\n","/*\n    Safe way to retrieve a value from an array\n\n    Index can be any number\n*/\nexport const getValueAt = (values: any[]) => (index: number) =>\n  values[((index % values.length) + values.length) % values.length];\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (val: any) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = val;\n  }, [val]);\n\n  return ref.current;\n};\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div<{\n  isActive: boolean;\n}>`\n  cursor: pointer;\n  display: grid;\n  grid-template-rows: 25px 1fr;\n  height: 50px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-areas:\n    \"currencyPair price\"\n    \"relativeChange change\";\n  font-size: 12px;\n  padding: 5px 10px;\n  border: 1px solid\n    ${({ isActive }) => (isActive ? Palette.Orange : Palette.Border)};\n\n  &:hover {\n    background-color: #2d3436;\n  }\n`;\n\nexport const CurrencyPair = styled.div`\n  color: ${Palette.White};\n  grid-area: currencyPair;\n`;\n\nexport const Price = styled.div`\n  color: ${Palette.White};\n  grid-area: price;\n  margin-right: 0;\n  margin-left: auto;\n`;\n\nexport const RelativeChange = styled.div<{\n  isPositive: boolean;\n}>`\n  grid-area: relativeChange;\n  font-size: 18px;\n  color: ${({ isPositive }) =>\n    isPositive ? Palette.Positive : Palette.Negative};\n  display: flex;\n  font-family: FiraSans-Medium;\n`;\n\nexport const Change = styled.div<{\n  isPositive: boolean;\n}>`\n  grid-area: change;\n  margin-right: 0;\n  margin-left: auto;\n  color: ${({ isPositive }) =>\n    isPositive ? Palette.Positive : Palette.Negative};\n`;\n","import styled from \"styled-components\";\nimport { range } from \"lodash\";\nimport { Container as TickerContainer } from \"../Ticker/Ticker.styled\";\n\nexport type ScrollDirection = \"left\" | \"right\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n`;\n\nexport const TickerWrapper = styled.div<{\n  index: number;\n  itemCount: number;\n  direction: ScrollDirection;\n}>`\n  ${({ itemCount }) => {\n    const animations = range(0, itemCount).map((index) => {\n      const indexThreshold = Math.floor(itemCount / 2);\n      const val =\n        index <= indexThreshold\n          ? index\n          : indexThreshold - Math.abs(indexThreshold - index);\n      const scaleFactor = 1 - (indexThreshold - val) / 10;\n\n      return `\n            @keyframes slide-in-${index} {\n                100% { transform: scale(${scaleFactor}, ${scaleFactor}) translateX(0%);; }\n            }\n            `;\n    });\n\n    return animations.reduce((acc, a) => (acc += a), \"\");\n  }}\n\n  ${TickerContainer} {\n    animation: ${({ index }) => `slide-in-${index} 0.5s forwards;`};\n    transform: ${({ direction }) =>\n      `translateX(${direction === \"left\" ? 100 : -100}%);`};\n  }\n`;\n","import styled from \"styled-components\";\nimport Palette from \"../../../theme/style\";\n\nexport const Content = styled.div`\n  display: flex;\n`;\n\nexport const IdenticalPart = styled.div``;\n\nexport const ChangedPart = styled.div`\n  color: ${Palette.Orange};\n`;\n\nexport const DigitContainer = styled.span`\n  display: inline-block;\n`;\n","import React, { FC, useEffect, useState, createRef } from \"react\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\nimport {\n  Content,\n  IdenticalPart,\n  DigitContainer,\n} from \"./UpdateHightlight.styled\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  value?: string | null;\n  effect?: \"zoom\" | \"default\";\n}\n\nexport const calculateParts = (value: string, prevValue: string) => {\n  if (!value || !prevValue) {\n    return [value, \"\"];\n  }\n  const length = Math.min(value.length, prevValue.length);\n  let index = 0;\n  for (let i = 0; i < length; i++) {\n    if (value[i] === prevValue[i]) {\n      index++;\n    } else {\n      break;\n    }\n  }\n  return [value.slice(0, index), value.slice(index, value.length)];\n};\n\nconst AnimatedValue: FC<{\n  value: string;\n  delay?: number;\n  scale?: number;\n  duration?: number;\n}> = (props) => {\n  const { value, delay = 0, scale = 1, duration = 200 } = props;\n  const ref = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    let animation: Animation | undefined = undefined;\n    let timeoutId: number | undefined = undefined;\n\n    if (typeof ref.current?.animate === \"function\") {\n      const runAnimation = () => {\n        animation = ref.current?.animate(\n          [\n            // keyframes\n            { color: Palette.Orange, transform: \"scale(1)\" },\n            ...(scale === 1\n              ? []\n              : [{ color: Palette.White, transform: `scale(${scale})` }]),\n            { color: Palette.White, transform: \"scale(1)\" },\n          ],\n          {\n            duration,\n            iterations: 1,\n          }\n        );\n      };\n\n      if (delay) {\n        timeoutId = setTimeout(\n          () => requestAnimationFrame(runAnimation),\n          delay\n        );\n      } else {\n        requestAnimationFrame(runAnimation);\n      }\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (animation) {\n        animation.cancel();\n      }\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return <DigitContainer ref={ref}>{value}</DigitContainer>;\n};\n\nconst UpdateHighlight: FC<Props> = (props) => {\n  const changedPartRef = createRef<HTMLDivElement>();\n  const { value, effect = \"default\" } = props;\n  const prev = usePrevious(value);\n  const [[identicalPart, changedPart], setParts] = useState<string[]>([]);\n\n  useEffect(() => {\n    setParts(calculateParts(value || \"\", prev || \"\"));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  const digits =\n    effect === \"zoom\" ? (\n      changedPart\n        ?.split(\"\")\n        .map((digit, index) => (\n          <AnimatedValue\n            key={index}\n            value={digit}\n            delay={index * 100}\n            scale={2}\n            duration={300}\n          />\n        ))\n    ) : (\n      <AnimatedValue value={changedPart} />\n    );\n  return (\n    <Content>\n      <IdenticalPart>{identicalPart}</IdenticalPart>\n      <div ref={changedPartRef}>{digits}</div>\n    </Content>\n  );\n};\n\nexport default UpdateHighlight;\n","import styled from \"styled-components\";\n\nexport const Icon = styled.i`\n  font-size: 16px;\n  line-height: 20px;\n  width: 20px;\n`;\n","import TrendIndicator from \"./TrendIndicator\";\n\nexport default TrendIndicator;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Icon } from \"./TrendIndicator.styled\";\n\nconst SHOW_ICON_FOR_X_MS = 5000;\n\nexport interface Props {\n  value: number;\n}\n\nconst TrendIndicator: FC<Props> = (props) => {\n  const { value } = props;\n  const [isHidden, setIsHidden] = useState(true);\n\n  useEffect(() => {\n    setIsHidden(false);\n\n    const timeoutId = setTimeout(() => setIsHidden(true), SHOW_ICON_FOR_X_MS);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [value]);\n\n  const icon = isHidden\n    ? \"\"\n    : value > 0\n    ? \"arrow_upward\"\n    : value < 0\n    ? \"arrow_downward\"\n    : \"\";\n\n  return <Icon className=\"material-icons\">{icon}</Icon>;\n};\n\nexport default TrendIndicator;\n","import React, { FC } from \"react\";\nimport {\n  Container,\n  CurrencyPair,\n  Price,\n  RelativeChange,\n  Change,\n} from \"./Ticker.styled\";\nimport UpdateHighlight from \"core/components/UpdateHighlight/UpdateHighlight\";\nimport TrendIndicator from \"core/components/TrendIndicator\";\nimport { formatCurrencyPair, formatPrice } from \"modules/reference-data/utils\";\n\nexport interface StateProps {\n  currencyPair: string;\n  lastPrice: number;\n  dailyChange: number;\n  dailyChangeRelative: number;\n  isActive?: boolean;\n}\n\nexport interface DispatchProps {\n  onClick?: () => void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst Ticker: FC<Props> = (props) => {\n  const {\n    currencyPair,\n    lastPrice,\n    dailyChange,\n    dailyChangeRelative,\n    onClick,\n    isActive,\n  } = props;\n  const isPositiveChange = dailyChange > 0;\n  const percentChange = dailyChangeRelative\n    ? dailyChangeRelative * 100\n    : undefined;\n  return (\n    <Container onClick={onClick} isActive={!!isActive}>\n      <CurrencyPair>{formatCurrencyPair(currencyPair)}</CurrencyPair>\n      <Price>\n        <UpdateHighlight value={formatPrice(lastPrice)} effect={\"zoom\"} />\n      </Price>\n      <RelativeChange isPositive={isPositiveChange}>\n        <TrendIndicator value={dailyChangeRelative} />\n        <UpdateHighlight value={percentChange?.toFixed(2)} />\n        {percentChange && \"%\"}\n      </RelativeChange>\n      <Change isPositive={isPositiveChange}>\n        <UpdateHighlight value={dailyChange?.toFixed(2)} />\n      </Change>\n    </Container>\n  );\n};\n\nexport default Ticker;\n","import Ticker from \"./Ticker.container\";\n\nexport default Ticker;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { Dispatch } from \"redux\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getTicker } from \"../../selectors\";\nimport Ticker, { StateProps, DispatchProps } from \"./Ticker\";\n\nexport interface ContainerProps {\n  currencyPair: string;\n}\n\nconst mapStateToProps = (\n  state: RootState,\n  props: ContainerProps\n): StateProps => {\n  const { currencyPair } = props;\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const ticker = getTicker(state)(currencyPair);\n\n  return {\n    lastPrice: ticker?.lastPrice,\n    currencyPair,\n    dailyChangeRelative: ticker?.dailyChangeRelative,\n    dailyChange: ticker?.dailyChange,\n    isActive: selectedCurrencyPair === currencyPair,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch,\n  ownProps: ContainerProps\n): DispatchProps => {\n  const { currencyPair } = ownProps;\n\n  return {\n    onClick: () =>\n      dispatch(SelectionActions.selectCurrencyPair({ currencyPair })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ticker);\n","import React, { FC, useState, useEffect } from \"react\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\nimport { Container, TickerWrapper, ScrollDirection } from \"./Tickers.styled\";\nimport Ticker from \"../Ticker\";\n\nexport interface Props {\n  currencyPairs: string[];\n  selectedCurrencyPairIndex?: number;\n}\n\nconst Tickers: FC<Props> = (props) => {\n  const { currencyPairs, selectedCurrencyPairIndex } = props;\n  const [direction, setDirection] = useState<ScrollDirection>(\"left\");\n  const previousSelectedCurrencyPairIndex = usePrevious(\n    selectedCurrencyPairIndex\n  );\n\n  useEffect(() => {\n    const direction =\n      (previousSelectedCurrencyPairIndex || 0) >\n      (selectedCurrencyPairIndex || 0)\n        ? \"right\"\n        : \"left\";\n    setDirection(direction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCurrencyPairIndex]);\n\n  return (\n    <Container className=\"tickers\">\n      {currencyPairs.map((currencyPair, index) => (\n        <TickerWrapper\n          index={index}\n          itemCount={currencyPairs.length}\n          key={currencyPair}\n          direction={direction}\n        >\n          <Ticker currencyPair={currencyPair} />\n        </TickerWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default Tickers;\n","import Tickers from \"./Tickers.container\";\n\nexport default Tickers;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getVisibleCurrencyPairTickers } from \"modules/ticker/selectors\";\nimport Tickers, { Props } from \"./Tickers\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const {\n    currencyPairs,\n    selectedCurrencyPairIndex,\n  } = getVisibleCurrencyPairTickers(state);\n\n  return {\n    currencyPairs,\n    selectedCurrencyPairIndex,\n  };\n};\n\nexport default connect(mapStateToProps)(Tickers);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n`;\n","import * as Highcharts from \"highcharts/highstock\";\nimport Palette from \"./style\";\n\n(Highcharts as any).theme = {\n  colors: [\n    \"#2b908f\",\n    \"#90ee7e\",\n    \"#f45b5b\",\n    \"#7798BF\",\n    \"#aaeeee\",\n    \"#ff0066\",\n    \"#eeaaee\",\n    \"#55BF3B\",\n    \"#DF5353\",\n    \"#7798BF\",\n    \"#aaeeee\",\n  ],\n  chart: {\n    backgroundColor: {\n      stops: [\n        [0, \"#2a2a2b\"],\n        [1, \"#3e3e40\"],\n      ],\n    },\n  },\n  xAxis: {\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  yAxis: {\n    gridLineColor: Palette.Border,\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    tickWidth: 1,\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  tooltip: {\n    borderColor: Palette.Border,\n    backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n    style: {\n      color: Palette.White,\n    },\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: \"#F0F0F3\",\n        style: {\n          fontSize: \"13px\",\n        },\n      },\n      marker: {\n        lineColor: \"#333\",\n      },\n    },\n    boxplot: {\n      fillColor: \"#505053\",\n    },\n    candlestick: {\n      lineColor: \"white\",\n    },\n    errorbar: {\n      color: \"white\",\n    },\n  },\n  legend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    itemStyle: {\n      color: \"#E0E0E3\",\n    },\n    itemHoverStyle: {\n      color: \"#FFF\",\n    },\n    itemHiddenStyle: {\n      color: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#C0C0C0\",\n      },\n    },\n  },\n  credits: {\n    style: {\n      color: \"#666\",\n    },\n  },\n  labels: {\n    style: {\n      color: \"#707073\",\n    },\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n    activeDataLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: \"#DDDDDD\",\n      theme: {\n        fill: \"#505053\",\n      },\n    },\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: \"#505053\",\n      stroke: \"#000000\",\n      style: {\n        color: \"#CCC\",\n      },\n      states: {\n        hover: {\n          fill: \"#707073\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n        select: {\n          fill: \"#000003\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n      },\n    },\n    inputBoxBorderColor: \"#505053\",\n    inputStyle: {\n      backgroundColor: \"#333\",\n      color: \"silver\",\n    },\n    labelStyle: {\n      color: \"silver\",\n    },\n  },\n  navigator: {\n    handles: {\n      backgroundColor: \"#666\",\n      borderColor: \"#AAA\",\n    },\n    outlineColor: \"#CCC\",\n    maskFill: \"rgba(255,255,255,0.1)\",\n    series: {\n      color: \"#7798BF\",\n      lineColor: \"#A6C7ED\",\n    },\n    xAxis: {\n      gridLineColor: \"#505053\",\n    },\n  },\n  scrollbar: {\n    barBackgroundColor: \"#808083\",\n    barBorderColor: \"#808083\",\n    buttonArrowColor: \"#CCC\",\n    buttonBackgroundColor: \"#606063\",\n    buttonBorderColor: \"#606063\",\n    rifleColor: \"#FFF\",\n    trackBackgroundColor: \"#404043\",\n    trackBorderColor: \"#404043\",\n  },\n};\n\nHighcharts.setOptions((Highcharts as any).theme);\n","import React, { FC, useEffect, useState } from \"react\";\nimport * as Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Stale from \"core/components/Stale\";\nimport { Container } from \"./CandlesChart.styled\";\nimport { Candle } from \"../../types/Candle\";\nimport { formatCurrencyPair } from \"modules/reference-data/utils\";\nimport \"theme/Highstock\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  candles: Candle[];\n  currencyPair?: string;\n  isStale: boolean;\n}\n\nconst CandlesChart: FC<Props> = (props) => {\n  const { candles, currencyPair, isStale } = props;\n  const [chartOptions, setChartOptions] = useState<Highcharts.Options>({\n    time: {\n      useUTC: false,\n    },\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"70%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"75%\",\n        height: \"25%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n    series: [\n      {\n        type: \"candlestick\",\n        data: [],\n      },\n      {\n        type: \"column\",\n        name: \"Volume\",\n        data: [],\n        yAxis: 1,\n      },\n    ],\n    rangeSelector: {\n      selected: 2,\n      buttons: [\n        {\n          type: \"minute\",\n          count: 5,\n          text: \"5m\",\n        },\n        {\n          type: \"minute\",\n          count: 15,\n          text: \"15m\",\n        },\n        {\n          type: \"minute\",\n          count: 30,\n          text: \"30m\",\n        },\n        {\n          type: \"hour\",\n          count: 1,\n          text: \"1h\",\n        },\n        {\n          type: \"hour\",\n          count: 12,\n          text: \"12h\",\n        },\n        {\n          type: \"all\",\n          text: \"All\",\n        },\n      ],\n    },\n  });\n\n  useEffect(() => {\n    if (candles && candles.length > 0) {\n      const ohlc = candles\n        .map(({ timestamp, ...rest }) => ({\n          x: timestamp,\n          ...rest,\n        }))\n        .sort((a, b) => a.x - b.x);\n      const volumes = candles\n        .map(({ timestamp, volume }) => [timestamp, volume])\n        .sort((a, b) => a[0] - b[0]);\n\n      setChartOptions({\n        series: [\n          {\n            type: \"candlestick\",\n            name: currencyPair && formatCurrencyPair(currencyPair),\n            data: ohlc,\n          },\n          {\n            type: \"column\",\n            data: volumes,\n          },\n        ],\n        plotOptions: {\n          candlestick: {\n            color: Palette.Negative,\n            upColor: Palette.Positive,\n          },\n          column: {\n            color: Palette.LightGray,\n          },\n        },\n      });\n    }\n  }, [candles, currencyPair]);\n\n  return (\n    <Container className=\"candles-chart\">\n      {isStale && <Stale />}\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n        constructorType={\"stockChart\"}\n      />\n    </Container>\n  );\n};\n\nexport default CandlesChart;\n","import CandlesChart from \"./CandlesChart.container\";\n\nexport default CandlesChart;\n","import { connect } from \"react-redux\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport CandlesChart, { Props } from \"./CandlesChart\";\nimport { RootState } from \"modules/root\";\nimport { getCandles } from \"../../selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const candles = selectedCurrencyPair\n    ? getCandles(state)(selectedCurrencyPair, \"1m\")\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"candles\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    candles,\n    currencyPair: selectedCurrencyPair,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(CandlesChart);\n","import { ICellRendererParams } from \"ag-grid-community\";\nimport Palette from \"theme/style\";\n\nconst amountRenderer = (value: string, styles: { [key: string]: any }) => {\n  const formattedStyles = Object.keys(styles)\n    .map((key) => [key, styles[key]].join(\":\"))\n    .join(\";\");\n\n  return `\n        <div style=\"position: relative;\">\n            <div style=\"height: 30px; position: absolute; z-index: 0; ${formattedStyles}\"></div>\n            <div style=\"position: absolute; z-index: 1;\">${value}</div>\n        </div>`;\n};\n\nexport const bidAmountRenderer = (params: ICellRendererParams) => {\n  const { bidDepth: depth, maxDepth } = params.data;\n  const width = ((depth || 0) / maxDepth) * 100;\n  return amountRenderer(params.valueFormatted, {\n    \"background-color\": Palette.BidTransparent,\n    width: `${width}%`,\n    left: \"-12px\",\n  });\n};\n\nexport const askAmountRenderer = (params: ICellRendererParams) => {\n  const { askDepth: depth, maxDepth } = params.data;\n  const width = ((depth || 0) / maxDepth) * 100;\n  return amountRenderer(params.valueFormatted, {\n    \"background-color\": Palette.AskTransparent,\n    width: `${width}%`,\n    right: \"-12px\",\n  });\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  font-family: FiraSans-Light;\n`;\n","import React, { FC } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef } from \"ag-grid-community\";\nimport { priceFormatter, amountFormatter } from \"modules/ag-grid/formatter\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport Stale from \"core/components/Stale\";\nimport { bidAmountRenderer, askAmountRenderer } from \"./renderers\";\nimport { Order } from \"../../types/Order\";\nimport { Container } from \"./Book.styled\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  orders: { bid: Order; ask: Order }[];\n  isStale?: boolean;\n}\n\nconst Book: FC<Props> = (props) => {\n  const { orders, isStale } = props;\n  const throttledOrders = useThrottle<{ bid: Order; ask: Order }[]>(\n    orders,\n    500\n  );\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Bid Amount\",\n      field: \"bid.amount\",\n      valueFormatter: amountFormatter,\n      cellRenderer: bidAmountRenderer,\n    },\n    {\n      headerName: \"Bid Price\",\n      field: \"bid.price\",\n      cellStyle: () => ({\n        color: Palette.Bid,\n      }),\n      type: \"numericColumn\",\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Ask Price\",\n      field: \"ask.price\",\n      cellStyle: () => ({\n        color: Palette.Ask,\n      }),\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Ask Amount\",\n      field: \"ask.amount\",\n      valueFormatter: (params) =>\n        amountFormatter({ value: Math.abs(params.value) }),\n      cellRenderer: askAmountRenderer,\n    },\n  ];\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      {isStale && <Stale />}\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={throttledOrders}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => [data.bid?.id, data.ask?.id].join(\"#\")}\n        onGridReady={(event) => event.api.sizeColumnsToFit()}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Book;\n","import { createSelector } from \"reselect\";\nimport { memoize, range, uniq } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { Order } from \"./types/Order\";\n\nconst bookSelector = (state: RootState) => state.book;\n\nexport const getRawBook = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => book[symbol])\n);\n\nexport const getBook = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => {\n    const rawBook = book[symbol] || [];\n\n    const bids = rawBook\n      .filter((order) => order.amount > 0)\n      .sort((a, b) => b.price - a.price);\n    const asks = rawBook\n      .filter((order) => order.amount < 0)\n      .sort((a, b) => a.price - b.price);\n\n    const levels = Math.max(bids.length, asks.length);\n    const maxBidDepth = bids\n      .map((bid) => bid.amount)\n      .reduce((acc, v) => (acc += v), 0);\n    const maxAskDepth = asks\n      .map((ask) => Math.abs(ask.amount))\n      .reduce((acc, v) => (acc += v), 0);\n    const maxDepth = maxBidDepth + maxAskDepth;\n\n    const result: {\n      bid: Order;\n      ask: Order;\n      bidDepth: number;\n      askDepth: number;\n      maxDepth: number;\n    }[] = [];\n    range(levels).forEach((level) => {\n      const bid = bids[level];\n      const ask = asks[level];\n\n      result.push({\n        bid,\n        ask,\n        bidDepth:\n          bid &&\n          (result[level - 1] ? result[level - 1].bidDepth : 0) + bid.amount,\n        askDepth:\n          ask &&\n          (result[level - 1] ? result[level - 1].askDepth : 0) +\n            Math.abs(ask.amount),\n        maxDepth,\n      });\n    });\n    return result;\n  })\n);\n\nconst getPricePoints = (orders: Order[]) =>\n  uniq(orders.map((order) => order.price)).sort((a, b) => a - b);\n\nconst computeDepth = (orders: Order[]) => {\n  return (\n    pricePoints: number[],\n    orderFilter: (order: Order, pricePoint: number) => boolean\n  ) => {\n    return pricePoints.map((price) => {\n      const depth = orders\n        .filter((order) => orderFilter(order, price))\n        .reduce((acc, order) => {\n          return (acc += Math.abs(order.amount));\n        }, 0);\n      return {\n        price,\n        depth,\n      };\n    });\n  };\n};\n\nexport const getDepth = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => {\n    const rawBook = book[symbol] || [];\n\n    const bids = rawBook.filter((order) => order.amount > 0);\n\n    const asks = rawBook.filter((order) => order.amount < 0);\n\n    const bidPrices = getPricePoints(bids);\n    const askPrices = getPricePoints(asks);\n\n    const bidDepth = computeDepth(bids)(\n      bidPrices,\n      (order, pricePoint) => order.price >= pricePoint\n    );\n    const askDepth = computeDepth(asks)(\n      askPrices,\n      (order, pricePoint) => order.price <= pricePoint\n    );\n\n    return {\n      bids: bidDepth,\n      asks: askDepth,\n    };\n  })\n);\n","import Book from \"./Book.container\";\n\nexport default Book;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport Book, { Props } from \"./Book\";\nimport { getBook } from \"../../selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const orders = selectedCurrencyPair\n    ? getBook(state)(selectedCurrencyPair)\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"book\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    orders,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(Book);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n`;\n","import * as Highcharts from \"highcharts\";\nimport Palette from \"./style\";\n\n(Highcharts as any).theme = {\n  colors: [\n    \"#2b908f\",\n    \"#90ee7e\",\n    \"#f45b5b\",\n    \"#7798BF\",\n    \"#aaeeee\",\n    \"#ff0066\",\n    \"#eeaaee\",\n    \"#55BF3B\",\n    \"#DF5353\",\n    \"#7798BF\",\n    \"#aaeeee\",\n  ],\n  chart: {\n    backgroundColor: {\n      stops: [\n        [0, \"#2a2a2b\"],\n        [1, \"#3e3e40\"],\n      ],\n    },\n  },\n  xAxis: {\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  yAxis: {\n    gridLineColor: Palette.Border,\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    tickWidth: 1,\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  tooltip: {\n    borderColor: Palette.Border,\n    backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n    style: {\n      color: Palette.White,\n    },\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: \"#F0F0F3\",\n        style: {\n          fontSize: \"13px\",\n        },\n      },\n      marker: {\n        lineColor: \"#333\",\n      },\n    },\n    boxplot: {\n      fillColor: \"#505053\",\n    },\n    candlestick: {\n      lineColor: \"white\",\n    },\n    errorbar: {\n      color: \"white\",\n    },\n  },\n  legend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    itemStyle: {\n      color: \"#E0E0E3\",\n    },\n    itemHoverStyle: {\n      color: \"#FFF\",\n    },\n    itemHiddenStyle: {\n      color: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#C0C0C0\",\n      },\n    },\n  },\n  credits: {\n    style: {\n      color: \"#666\",\n    },\n  },\n  labels: {\n    style: {\n      color: \"#707073\",\n    },\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n    activeDataLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: \"#DDDDDD\",\n      theme: {\n        fill: \"#505053\",\n      },\n    },\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: \"#505053\",\n      stroke: \"#000000\",\n      style: {\n        color: \"#CCC\",\n      },\n      states: {\n        hover: {\n          fill: \"#707073\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n        select: {\n          fill: \"#000003\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n      },\n    },\n    inputBoxBorderColor: \"#505053\",\n    inputStyle: {\n      backgroundColor: \"#333\",\n      color: \"silver\",\n    },\n    labelStyle: {\n      color: \"silver\",\n    },\n  },\n  navigator: {\n    handles: {\n      backgroundColor: \"#666\",\n      borderColor: \"#AAA\",\n    },\n    outlineColor: \"#CCC\",\n    maskFill: \"rgba(255,255,255,0.1)\",\n    series: {\n      color: \"#7798BF\",\n      lineColor: \"#A6C7ED\",\n    },\n    xAxis: {\n      gridLineColor: \"#505053\",\n    },\n  },\n  scrollbar: {\n    barBackgroundColor: \"#808083\",\n    barBorderColor: \"#808083\",\n    buttonArrowColor: \"#CCC\",\n    buttonBackgroundColor: \"#606063\",\n    buttonBorderColor: \"#606063\",\n    rifleColor: \"#FFF\",\n    trackBackgroundColor: \"#404043\",\n    trackBorderColor: \"#404043\",\n  },\n};\n\nHighcharts.setOptions((Highcharts as any).theme);\n","import React, { FC, useState, useEffect } from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport Stale from \"core/components/Stale\";\nimport { Container } from \"./DepthChart.styled\";\nimport Palette from \"theme/style\";\nimport \"theme/Highchart\";\n\ninterface Depth {\n  bids: { price: number; depth: number }[];\n  asks: { price: number; depth: number }[];\n}\n\nexport interface Props {\n  depth: Depth;\n  isStale: boolean;\n}\n\nconst DepthChart: FC<Props> = (props) => {\n  const { depth, isStale } = props;\n  const throttledDepth = useThrottle<Depth>(depth, 500);\n  const [chartOptions, setChartOptions] = useState<Highcharts.Options>({\n    chart: {\n      type: \"area\",\n      animation: false,\n    },\n    title: {\n      text: \"\",\n    },\n    legend: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: \"bids\",\n        type: \"area\",\n        data: [],\n      },\n      {\n        name: \"asks\",\n        type: \"area\",\n        data: [],\n      },\n    ],\n    xAxis: {\n      labels: {\n        autoRotation: false,\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"\",\n      },\n      labels: {\n        enabled: false,\n      },\n    },\n    plotOptions: {\n      area: {\n        marker: {\n          enabled: false,\n          states: {\n            hover: {\n              enabled: false,\n            },\n          },\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    const { bids, asks } = throttledDepth;\n\n    setChartOptions({\n      xAxis: {\n        categories: [...bids, ...asks].map((order) => order.price.toString()),\n        labels: {\n          step: 5,\n          formatter: function () {\n            return Number.parseFloat(this.value.toString()).toFixed(0);\n          },\n        },\n      },\n      series: [\n        {\n          name: \"bids\",\n          type: \"area\",\n          data: [...bids.map((bid) => bid.depth), ...asks.map(() => null)],\n          color: Palette.Bid,\n        },\n        {\n          name: \"asks\",\n          type: \"area\",\n          data: [...bids.map(() => null), ...asks.map((ask) => ask.depth)],\n          color: Palette.Ask,\n        },\n      ],\n    });\n  }, [throttledDepth]);\n\n  return (\n    <Container>\n      {isStale && <Stale />}\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n        constructorType={\"chart\"}\n      />\n    </Container>\n  );\n};\n\nexport default DepthChart;\n","import DepthChart from \"./DepthChart.container\";\n\nexport default DepthChart;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport DepthChart, { Props } from \"./DepthChart\";\nimport { getDepth } from \"../../selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const depth = selectedCurrencyPair\n    ? getDepth(state)(selectedCurrencyPair)\n    : { bids: [], asks: [] };\n\n  const subscriptionId = getSubscriptionId(state)(\"book\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    depth,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(DepthChart);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n\n  .selected-row {\n    font-family: FiraSans-Medium;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SvgContainer = styled.svg`\n  fill: none;\n`;\n","import LineChart from \"./LineChart\";\n\nexport default LineChart;\n","import React, { FC } from \"react\";\nimport { SvgContainer } from \"./LineChart.styled\";\nimport Palette from \"theme/style\";\n\ninterface Props {\n  values: number[];\n  width?: number;\n  height?: number;\n}\n\nconst LineChart: FC<Props> = (props) => {\n  const { values, width = 50, height = 25 } = props;\n  const maxX = values.length - 1;\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n  const diff = maxValue - minValue;\n\n  const getSvgX = (x: number) => (x / maxX) * width;\n\n  const getSvgY = (y: number) => height - ((y - minValue) * height) / diff;\n\n  if (values.length === 0) {\n    return <div></div>;\n  }\n\n  let pathD = `M ${getSvgX(0)} ${getSvgY(values[0])} `;\n  pathD += values.map((value, i) => {\n    const x = getSvgX(i);\n    const y = getSvgY(value);\n\n    return `L  ${x}  ${y} `;\n  });\n\n  return (\n    <SvgContainer viewBox={`0 0 ${width} ${height}`}>\n      <path d={pathD} style={{ stroke: Palette.LightGray }} />\n    </SvgContainer>\n  );\n};\n\nexport default LineChart;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 0 5px;\n`;\n","import React, { FC } from \"react\";\nimport LineChart from \"core/components/LineChart\";\nimport { Container } from \"./PriceChartRenderer.styled\";\n\ninterface Props {\n  value: number[];\n}\n\nconst PriceChartRenderer: FC<Props> = (props) => {\n  const { value: prices } = props;\n\n  return (\n    <Container>\n      <LineChart values={prices} />\n    </Container>\n  );\n};\n\nexport default PriceChartRenderer;\n","import UpdateHighlight from \"./UpdateHighlight\";\n\nexport default UpdateHighlight;\n","import React, { Component } from \"react\";\nimport UpdateHighlight from \"core/components/UpdateHighlight\";\n\ninterface Props {\n  valueFormatted: string;\n}\n\ninterface State {\n  valueFormatted: string;\n}\n\nclass PriceRenderer extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      valueFormatted: props.valueFormatted,\n    };\n  }\n\n  refresh(params: Props) {\n    this.setState({\n      valueFormatted: params.valueFormatted,\n    });\n\n    return true;\n  }\n\n  render() {\n    const { valueFormatted } = this.state;\n    return <UpdateHighlight value={valueFormatted} />;\n  }\n}\n\nexport default PriceRenderer;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef, GridApi } from \"ag-grid-community\";\nimport { priceFormatter, volumeFormatter } from \"modules/ag-grid/formatter\";\nimport { Ticker } from \"modules/ticker/types/Ticker\";\nimport { formatCurrencyPair } from \"modules/reference-data/utils\";\nimport { Container } from \"./Market.styled\";\nimport PriceChartRenderer from \"./PriceChartRenderer\";\nimport PriceRenderer from \"./PriceRenderer\";\nimport Palette from \"theme/style\";\n\nexport interface StateProps {\n  tickers: (Ticker & { currencyPair: string; prices: number[] })[];\n  selectedCurrencyPair?: string;\n}\n\nexport interface DispatchProps {\n  onClick: (currencyPair: string) => void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst Market: FC<Props> = (props) => {\n  const { tickers, selectedCurrencyPair, onClick } = props;\n  const [gridApi, setGridApi] = useState<GridApi | undefined>();\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Ccy\",\n      field: \"currencyPair\",\n      valueFormatter: (params) => formatCurrencyPair(params.value),\n    },\n    {\n      headerName: \"Bid Price\",\n      field: \"bid\",\n      cellStyle: () => ({\n        color: Palette.Bid,\n        display: \"flex\",\n        \"justify-content\": \"flex-end\",\n      }),\n      type: \"numericColumn\",\n      valueFormatter: priceFormatter,\n      cellRenderer: \"priceRenderer\",\n    },\n    {\n      headerName: \"Ask Price\",\n      field: \"ask\",\n      cellStyle: () => ({\n        color: Palette.Ask,\n      }),\n      valueFormatter: priceFormatter,\n      cellRenderer: \"priceRenderer\",\n    },\n    {\n      headerName: \"Volume\",\n      field: \"volume\",\n      valueFormatter: volumeFormatter,\n    },\n    {\n      headerName: \"\",\n      field: \"prices\",\n      cellRenderer: \"priceChartRenderer\",\n      width: 100,\n      cellStyle: () => ({\n        \"padding-left\": 0,\n        \"padding-right\": 0,\n      }),\n    },\n  ];\n\n  const rowClassRules = {\n    \"selected-row\": (params: any) => params.node.isSelected(),\n  };\n\n  useEffect(() => {\n    if (gridApi) {\n      gridApi.forEachNode(function (node) {\n        node.setSelected(node.data.currencyPair === selectedCurrencyPair);\n      });\n      gridApi.redrawRows();\n    }\n  }, [gridApi, selectedCurrencyPair]);\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={tickers}\n        rowClassRules={rowClassRules}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => data.currencyPair}\n        onGridReady={(event) => {\n          setGridApi(event.api);\n          event.api.sizeColumnsToFit();\n        }}\n        rowSelection={\"single\"}\n        onRowClicked={(event) => {\n          onClick(event.data.currencyPair);\n        }}\n        frameworkComponents={{\n          priceChartRenderer: PriceChartRenderer,\n          priceRenderer: PriceRenderer,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Market;\n","import Market from \"./Market.container\";\n\nexport default Market;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getTickersWithPrices } from \"modules/ticker/selectors\";\nimport { RootState } from \"modules/root\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport Market, { StateProps, DispatchProps } from \"./Market\";\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  const tickers = getTickersWithPrices(state);\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n\n  return {\n    tickers,\n    selectedCurrencyPair,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    onClick: (currencyPair: string) =>\n      dispatch(SelectionActions.selectCurrencyPair({ currencyPair })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Market);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-rows: 20px 1fr;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    \"header\"\n    \"body\";\n`;\n\nexport const Header = styled.div`\n  grid-area: header;\n  color: ${Palette.Label};\n  font-size: 12px;\n`;\n\nexport const Body = styled.div`\n  grid-area: body;\n`;\n","import Widget from \"./Widget\";\n\nexport default Widget;\n","import React, { FC } from \"react\";\nimport { Container, Header, Body } from \"./Widget.styled\";\n\nexport interface Props {\n  children: JSX.Element;\n  title: string;\n}\n\nconst Widget: FC<Props> = (props) => {\n  const { children, title } = props;\n\n  return (\n    <Container>\n      <Header>{title}</Header>\n      <Body>{children}</Body>\n    </Container>\n  );\n};\n\nexport default Widget;\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  font-size: 10px;\n  color: ${Palette.White};\n  padding: 0 10px;\n  display: flex;\n  width: 85px;\n  justify-content: space-between;\n  color: ${Palette.LightGray};\n`;\n","import Diagnostics from \"./Diagnostics\";\n\nexport default Diagnostics;\n","import React, { FC, useState, useEffect } from \"react\";\nimport { Container } from \"./Diagnostics.styled\";\n\nconst DIAGNOSTICS_INTERVAL_MS = 2000;\n\nconst Diagnostics: FC<{}> = () => {\n  const [delay, setDelay] = useState<number | undefined>();\n  useEffect(() => {\n    let timeoutId: number | undefined = undefined;\n    const intervalId = setInterval(() => {\n      const time = Date.now();\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        setDelay(Date.now() - time);\n      });\n    }, DIAGNOSTICS_INTERVAL_MS);\n\n    return () => {\n      clearInterval(intervalId);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n\n  return (\n    <Container>\n      <span>UI Latency: </span>\n      <span>{delay || \"---\"}ms</span>\n    </Container>\n  );\n};\n\nexport default Diagnostics;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst getPing = (state: RootState) => state.ping;\n\nexport const getLatency = createSelector(getPing, (ping) => ping.latency);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  color: ${Palette.White};\n  font-size: 10px;\n  width: 85px;\n  display: flex;\n  justify-content: space-between;\n  color: ${Palette.LightGray};\n`;\n","import React, { FC } from \"react\";\nimport { Container } from \"./Latency.styled\";\n\nexport interface Props {\n  latency?: number;\n}\n\nconst Latency: FC<Props> = (props) => {\n  const { latency } = props;\n  return (\n    <Container>\n      <span>Round trip: </span>\n      <span>{latency || \"---\"}ms</span>\n    </Container>\n  );\n};\n\nexport default Latency;\n","import Latency from \"./Latency.container\";\n\nexport default Latency;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getLatency } from \"modules/ping/selectors\";\nimport Latency, { Props } from \"./Latency\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const latency = getLatency(state);\n\n  return {\n    latency,\n  };\n};\n\nexport default connect(mapStateToProps)(Latency);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  background-color: ${Palette.BackgroundColor};\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-gap: 5px;\n  padding: 5px 10px;\n  width: 100%;\n  height: 100%;\n  @media only screen and (min-width: 1200px) {\n    grid-template-rows: 40px 70px 1fr 250px 30px;\n    grid-template-columns: 450px 1fr 1fr;\n    grid-template-areas:\n      \"header header header\"\n      \"tickers tickers tickers\"\n      \"market candles candles\"\n      \"trades book depth\"\n      \"footer footer footer\";\n  }\n\n  @media only screen and (min-width: 600px) and (max-width: 1200px) {\n    grid-template-rows: 40px 70px 1fr 1fr 30px;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      \"header header\"\n      \"market book\"\n      \"market book\"\n      \"trades depth\"\n      \"footer footer\";\n\n    .tickers {\n      display: none;\n    }\n\n    .candles-chart {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 600px) {\n    grid-template-rows: 40px calc(100% - 90px) 30px;\n    grid-template-columns: calc(100% - 20px);\n    grid-template-areas:\n      \"header\"\n      \"market\"\n      \"footer\";\n\n    .candles-chart {\n      display: none;\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  grid-area: header;\n  color: ${Palette.White};\n  font-family: FiraSans-MediumItalic;\n  background-color: #2d3436;\n  padding: 0 0 0 10px;\n  font-size: 28px;\n`;\n\nexport const TickersPanel = styled.div`\n  grid-area: tickers;\n  overflow: auto;\n  width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const MarketPanel = styled.div`\n  grid-area: market;\n`;\n\nexport const TradesPanel = styled.div`\n  grid-area: trades;\n`;\n\nexport const CandlesPanel = styled.div`\n  grid-area: candles;\n`;\n\nexport const BookPanel = styled.div`\n  grid-area: book;\n`;\n\nexport const DepthPanel = styled.div`\n  grid-area: depth;\n`;\n\nexport const Footer = styled.div`\n  grid-area: footer;\n  padding: 0 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./modules/redux/store\";\nimport { AppActions } from \"./modules/app/actions\";\nimport Trades from \"modules/trades/components/Trades\";\nimport Tickers from \"modules/ticker/components/Tickers\";\nimport CandlesChart from \"modules/candles/components/CandlesChart\";\nimport Book from \"modules/book/components/Book\";\nimport DepthChart from \"modules/book/components/DepthChart\";\nimport Market from \"modules/ticker/components/Market\";\nimport Widget from \"core/components/Widget\";\nimport Diagnostics from \"core/components/Diagnostics\";\nimport Latency from \"modules/ping/components/Latency\";\nimport {\n  Container,\n  Content,\n  Header,\n  MarketPanel,\n  TradesPanel,\n  TickersPanel,\n  CandlesPanel,\n  BookPanel,\n  DepthPanel,\n  Footer,\n} from \"App.styled\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham-dark.css\";\nimport \"theme/fonts.css\";\n\nfunction App() {\n  const store = configureStore();\n\n  useEffect(() => {\n    store.dispatch(AppActions.bootstrapApp());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Container>\n        <Content>\n          <Header>Crypto Trader</Header>\n          <TickersPanel>\n            <Tickers />\n          </TickersPanel>\n          <MarketPanel>\n            <Widget title={\"Market\"}>\n              <Market />\n            </Widget>\n          </MarketPanel>\n          <TradesPanel>\n            <Widget title={\"Trades\"}>\n              <Trades />\n            </Widget>\n          </TradesPanel>\n          <CandlesPanel>\n            <CandlesChart />\n          </CandlesPanel>\n          <BookPanel>\n            <Widget title={\"Book\"}>\n              <Book />\n            </Widget>\n          </BookPanel>\n          <DepthPanel>\n            <Widget title={\"Depth\"}>\n              <DepthChart />\n            </Widget>\n          </DepthPanel>\n          <Footer>\n            <Latency />\n            <Diagnostics />\n          </Footer>\n        </Content>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}